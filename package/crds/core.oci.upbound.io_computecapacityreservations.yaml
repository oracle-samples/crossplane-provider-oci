---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: computecapacityreservations.core.oci.upbound.io
spec:
  group: core.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: ComputeCapacityReservation
    listKind: ComputeCapacityReservationList
    plural: computecapacityreservations
    singular: computecapacityreservation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComputeCapacityReservation is the Schema for the ComputeCapacityReservations
          API. Provides the Compute Capacity Reservation resource in Oracle Cloud
          Infrastructure Core service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComputeCapacityReservationSpec defines the desired state
              of ComputeCapacityReservation
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  availabilityDomain:
                    description: 'The availability domain of this compute capacity
                      reservation.  Example: Uocm:PHX-AD-1'
                    type: string
                  compartmentId:
                    description: (Updatable) The OCID of the compartment containing
                      the capacity reservation.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.  Example: {"Operations.CostCenter": "42"}'
                    type: object
                  displayName:
                    description: (Updatable) A user-friendly name. Does not have to
                      be unique, and it's changeable. Avoid entering confidential
                      information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.  Example:
                      {"Department": "Finance"}'
                    type: object
                  instanceReservationConfigs:
                    description: (Updatable) The capacity configurations for the capacity
                      reservation.
                    items:
                      properties:
                        clusterConfig:
                          description: (Updatable) The HPC cluster configuration requested
                            when launching instances in a compute capacity reservation.
                          items:
                            properties:
                              hpcIslandId:
                                description: (Updatable) The OCID of the HpcIsland.
                                type: string
                              networkBlockIds:
                                description: (Updatable) The list of OCID of the network
                                  blocks.
                                items:
                                  type: string
                                type: array
                            required:
                            - hpcIslandId
                            type: object
                          type: array
                        faultDomain:
                          description: (Updatable) The fault domain to use for instances
                            created using this capacity configuration. For more information,
                            see Fault Domains. If you do not specify the fault domain,
                            the capacity is available for an instance that does not
                            specify a fault domain. To change the fault domain for
                            a reservation, delete the reservation and create a new
                            one in the preferred fault domain.
                          type: string
                        instanceShape:
                          description: (Updatable) The shape requested when launching
                            instances using reserved capacity. The shape determines
                            the number of CPUs, amount of memory, and other resources
                            allocated to the instance. You can list all available
                            shapes by calling ListComputeCapacityReservationInstanceShapes.
                          type: string
                        instanceShapeConfig:
                          description: (Updatable) The shape configuration requested
                            when launching instances in a compute capacity reservation.
                          items:
                            properties:
                              memoryInGbs:
                                description: (Updatable) The total amount of memory
                                  available to the instance, in gigabytes.
                                type: number
                              ocpus:
                                description: (Updatable) The total number of OCPUs
                                  available to the instance.
                                type: number
                            type: object
                          type: array
                        reservedCount:
                          description: (Updatable) The total number of instances that
                            can be launched from the capacity configuration.
                          type: string
                      required:
                      - instanceShape
                      - reservedCount
                      type: object
                    type: array
                  isDefaultReservation:
                    description: (Updatable) Whether this capacity reservation is
                      the default. For more information, see Capacity Reservations.
                    type: boolean
                required:
                - availabilityDomain
                - compartmentId
                - instanceReservationConfigs
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ComputeCapacityReservationStatus defines the observed state
              of ComputeCapacityReservation.
            properties:
              atProvider:
                properties:
                  id:
                    description: The OCID of the compute capacity reservation.
                    type: string
                  instanceReservationConfigs:
                    description: (Updatable) The capacity configurations for the capacity
                      reservation.
                    items:
                      properties:
                        usedCount:
                          description: The amount of capacity in use out of the total
                            capacity reserved in this capacity configuration.
                          type: string
                      type: object
                    type: array
                  reservedInstanceCount:
                    description: The number of instances for which capacity will be
                      held with this compute capacity reservation. This number is
                      the sum of the values of the reservedCount fields for all of
                      the instance capacity configurations under this reservation.
                      The purpose of this field is to calculate the percentage usage
                      of the reservation.
                    type: string
                  state:
                    description: The current state of the compute capacity reservation.
                    type: string
                  timeCreated:
                    description: 'The date and time the compute capacity reservation
                      was created, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z'
                    type: string
                  timeUpdated:
                    description: 'The date and time the compute capacity reservation
                      was updated, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z'
                    type: string
                  usedInstanceCount:
                    description: The total number of instances currently consuming
                      space in this compute capacity reservation. This number is the
                      sum of the values of the usedCount fields for all of the instance
                      capacity configurations under this reservation. The purpose
                      of this field is to calculate the percentage usage of the reservation.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
