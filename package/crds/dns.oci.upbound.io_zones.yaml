---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: zones.dns.oci.upbound.io
spec:
  group: dns.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: Zone
    listKind: ZoneList
    plural: zones
    singular: zone
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Zone is the Schema for the Zones API. Provides the Zone resource
          in Oracle Cloud Infrastructure DNS service
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ZoneSpec defines the desired state of Zone
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  compartmentId:
                    description: (Updatable) The OCID of the compartment containing
                      the zone.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: (Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.
                    type: object
                    x-kubernetes-map-type: granular
                  dnssecState:
                    description: (Updatable) The state of DNSSEC on the zone.
                    type: string
                  externalDownstreams:
                    description: (Updatable) External secondary servers for the zone.
                      This field is currently not supported when zoneType is SECONDARY
                      or scope is PRIVATE.
                    items:
                      properties:
                        address:
                          description: (Updatable) The server's IP address (IPv4 or
                            IPv6).
                          type: string
                        port:
                          description: (Updatable) The server's port. Port value must
                            be a value of 53, otherwise omit the port value.
                          type: number
                        tsigKeyId:
                          description: (Updatable) The OCID of the TSIG key. A TSIG
                            key is used to secure DNS messages (in this case, zone
                            transfers) between two systems that both have the (shared)
                            secret.
                          type: string
                      type: object
                    type: array
                  externalMasters:
                    description: (Updatable) External master servers for the zone.
                      externalMasters becomes a required parameter when the zoneType
                      value is SECONDARY.
                    items:
                      properties:
                        address:
                          description: (Updatable) The server's IP address (IPv4 or
                            IPv6).
                          type: string
                        port:
                          description: (Updatable) The server's port. Port value must
                            be a value of 53, otherwise omit the port value.
                          type: number
                        tsigKeyId:
                          description: (Updatable) The OCID of the TSIG key. A TSIG
                            key is used to secure DNS messages (in this case, zone
                            transfers) between two systems that both have the (shared)
                            secret.
                          type: string
                      type: object
                    type: array
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: (Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: The name of the zone.
                    type: string
                  scope:
                    description: |-
                      Specifies to operate only on resources that have a matching DNS scope.
                      This value will be null for zones in the global DNS and PRIVATE when creating a private zone.
                    type: string
                  viewId:
                    description: The OCID of the private view containing the zone.
                      This value will be null for zones in the global DNS, which are
                      publicly resolvable and not part of a private view.
                    type: string
                  viewIdRef:
                    description: Reference to a View to populate viewId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  viewIdSelector:
                    description: Selector for a View to populate viewId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  zoneType:
                    description: The type of the zone. Must be either PRIMARY or SECONDARY.
                      SECONDARY is only supported for GLOBAL zones.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  compartmentId:
                    description: (Updatable) The OCID of the compartment containing
                      the zone.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: (Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.
                    type: object
                    x-kubernetes-map-type: granular
                  dnssecState:
                    description: (Updatable) The state of DNSSEC on the zone.
                    type: string
                  externalDownstreams:
                    description: (Updatable) External secondary servers for the zone.
                      This field is currently not supported when zoneType is SECONDARY
                      or scope is PRIVATE.
                    items:
                      properties:
                        address:
                          description: (Updatable) The server's IP address (IPv4 or
                            IPv6).
                          type: string
                        port:
                          description: (Updatable) The server's port. Port value must
                            be a value of 53, otherwise omit the port value.
                          type: number
                        tsigKeyId:
                          description: (Updatable) The OCID of the TSIG key. A TSIG
                            key is used to secure DNS messages (in this case, zone
                            transfers) between two systems that both have the (shared)
                            secret.
                          type: string
                      type: object
                    type: array
                  externalMasters:
                    description: (Updatable) External master servers for the zone.
                      externalMasters becomes a required parameter when the zoneType
                      value is SECONDARY.
                    items:
                      properties:
                        address:
                          description: (Updatable) The server's IP address (IPv4 or
                            IPv6).
                          type: string
                        port:
                          description: (Updatable) The server's port. Port value must
                            be a value of 53, otherwise omit the port value.
                          type: number
                        tsigKeyId:
                          description: (Updatable) The OCID of the TSIG key. A TSIG
                            key is used to secure DNS messages (in this case, zone
                            transfers) between two systems that both have the (shared)
                            secret.
                          type: string
                      type: object
                    type: array
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: (Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: The name of the zone.
                    type: string
                  scope:
                    description: |-
                      Specifies to operate only on resources that have a matching DNS scope.
                      This value will be null for zones in the global DNS and PRIVATE when creating a private zone.
                    type: string
                  viewId:
                    description: The OCID of the private view containing the zone.
                      This value will be null for zones in the global DNS, which are
                      publicly resolvable and not part of a private view.
                    type: string
                  viewIdRef:
                    description: Reference to a View to populate viewId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  viewIdSelector:
                    description: Selector for a View to populate viewId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  zoneType:
                    description: The type of the zone. Must be either PRIMARY or SECONDARY.
                      SECONDARY is only supported for GLOBAL zones.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.zoneType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.zoneType)
                || (has(self.initProvider) && has(self.initProvider.zoneType))'
          status:
            description: ZoneStatus defines the observed state of Zone.
            properties:
              atProvider:
                properties:
                  compartmentId:
                    description: (Updatable) The OCID of the compartment containing
                      the zone.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: (Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.
                    type: object
                    x-kubernetes-map-type: granular
                  dnssecConfig:
                    description: DNSSEC configuration data.
                    items:
                      properties:
                        kskDnssecKeyVersions:
                          description: A read-only array of key signing key (KSK)
                            versions.
                          items:
                            properties:
                              algorithm:
                                description: The signing algorithm used for the key.
                                type: string
                              dsData:
                                description: An array of data for DS records corresponding
                                  with this key version. An entry will exist for each
                                  supported DS digest algorithm.
                                items:
                                  properties:
                                    digestType:
                                      description: The type of the digest associated
                                        with the rdata.
                                      type: string
                                    rdata:
                                      description: Presentation-format DS record data
                                        that must be added to the parent zone. For
                                        more information about RDATA, see Supported
                                        DNS Resource Record Types
                                      type: string
                                  type: object
                                type: array
                              keyTag:
                                description: The key tag associated with the DnssecKeyVersion.
                                  This key tag will be present in the RRSIG and DS
                                  records associated with the key material for this
                                  DnssecKeyVersion. For more information about key
                                  tags, see RFC 4034.
                                type: number
                              lengthInBytes:
                                description: The length of the corresponding private
                                  key in bytes, expressed as an integer.
                                type: number
                              predecessorDnssecKeyVersionUuid:
                                description: When populated, this is the UUID of the
                                  DnssecKeyVersion that this DnssecKeyVersion will
                                  replace or has replaced.
                                type: string
                              successorDnssecKeyVersionUuid:
                                description: When populated, this is the UUID of the
                                  DnssecKeyVersion that will replace, or has replaced,
                                  this DnssecKeyVersion.
                                type: string
                              timeActivated:
                                description: The date and time the key version went,
                                  or will go, active, expressed in RFC 3339 timestamp
                                  format. This is when the key material will be used
                                  to generate RRSIGs.
                                type: string
                              timeCreated:
                                description: The date and time the key version was
                                  created, expressed in RFC 3339 timestamp format.
                                type: string
                              timeExpired:
                                description: The date and time at which the recommended
                                  key version publication/activation lifetime ends,
                                  expressed in RFC 3339 timestamp format. This is
                                  when the corresponding DNSKEY should no longer exist
                                  in zone contents and no longer be used to generate
                                  RRSIGs. For a key sigining key (KSK), if PromoteZoneDnssecKeyVersion
                                  has not been called on this DnssecKeyVersion's successor
                                  then it will remain active for arbitrarily long
                                  past its recommended lifetime. This prevents service
                                  disruption at the potential increased risk of key
                                  compromise.
                                type: string
                              timeInactivated:
                                description: The date and time the key version went,
                                  or will go, inactive, expressed in RFC 3339 timestamp
                                  format. This is when the key material will no longer
                                  be used to generate RRSIGs. For a key signing key
                                  (KSK) DnssecKeyVersion, this is populated after
                                  PromoteZoneDnssecKeyVersion has been called on its
                                  successor DnssecKeyVersion.
                                type: string
                              timePromoted:
                                description: The date and time the key version was
                                  promoted expressed in RFC 3339 timestamp format.
                                type: string
                              timePublished:
                                description: The date and time the key version was,
                                  or will be, published, expressed in RFC 3339 timestamp
                                  format. This is when the zone contents will include
                                  a DNSKEY record corresponding to the key material.
                                type: string
                              timeUnpublished:
                                description: The date and time the key version was,
                                  or will be, unpublished, expressed in RFC 3339 timestamp
                                  format. This is when the corresponding DNSKEY will
                                  be removed from zone contents. For a key signing
                                  key (KSK) DnssecKeyVersion, this is populated after
                                  PromoteZoneDnssecKeyVersion has been called on its
                                  successor DnssecKeyVersion.
                                type: string
                              uuid:
                                description: The UUID of the DnssecKeyVersion.
                                type: string
                            type: object
                          type: array
                        zskDnssecKeyVersions:
                          description: A read-only array of zone signing key (ZSK)
                            versions.
                          items:
                            properties:
                              algorithm:
                                description: The signing algorithm used for the key.
                                type: string
                              keyTag:
                                description: The key tag associated with the DnssecKeyVersion.
                                  This key tag will be present in the RRSIG and DS
                                  records associated with the key material for this
                                  DnssecKeyVersion. For more information about key
                                  tags, see RFC 4034.
                                type: number
                              lengthInBytes:
                                description: The length of the corresponding private
                                  key in bytes, expressed as an integer.
                                type: number
                              predecessorDnssecKeyVersionUuid:
                                description: When populated, this is the UUID of the
                                  DnssecKeyVersion that this DnssecKeyVersion will
                                  replace or has replaced.
                                type: string
                              successorDnssecKeyVersionUuid:
                                description: When populated, this is the UUID of the
                                  DnssecKeyVersion that will replace, or has replaced,
                                  this DnssecKeyVersion.
                                type: string
                              timeActivated:
                                description: The date and time the key version went,
                                  or will go, active, expressed in RFC 3339 timestamp
                                  format. This is when the key material will be used
                                  to generate RRSIGs.
                                type: string
                              timeCreated:
                                description: The date and time the key version was
                                  created, expressed in RFC 3339 timestamp format.
                                type: string
                              timeExpired:
                                description: The date and time at which the recommended
                                  key version publication/activation lifetime ends,
                                  expressed in RFC 3339 timestamp format. This is
                                  when the corresponding DNSKEY should no longer exist
                                  in zone contents and no longer be used to generate
                                  RRSIGs. For a key sigining key (KSK), if PromoteZoneDnssecKeyVersion
                                  has not been called on this DnssecKeyVersion's successor
                                  then it will remain active for arbitrarily long
                                  past its recommended lifetime. This prevents service
                                  disruption at the potential increased risk of key
                                  compromise.
                                type: string
                              timeInactivated:
                                description: The date and time the key version went,
                                  or will go, inactive, expressed in RFC 3339 timestamp
                                  format. This is when the key material will no longer
                                  be used to generate RRSIGs. For a key signing key
                                  (KSK) DnssecKeyVersion, this is populated after
                                  PromoteZoneDnssecKeyVersion has been called on its
                                  successor DnssecKeyVersion.
                                type: string
                              timePromoted:
                                description: The date and time the key version was
                                  promoted expressed in RFC 3339 timestamp format.
                                type: string
                              timePublished:
                                description: The date and time the key version was,
                                  or will be, published, expressed in RFC 3339 timestamp
                                  format. This is when the zone contents will include
                                  a DNSKEY record corresponding to the key material.
                                type: string
                              timeUnpublished:
                                description: The date and time the key version was,
                                  or will be, unpublished, expressed in RFC 3339 timestamp
                                  format. This is when the corresponding DNSKEY will
                                  be removed from zone contents. For a key signing
                                  key (KSK) DnssecKeyVersion, this is populated after
                                  PromoteZoneDnssecKeyVersion has been called on its
                                  successor DnssecKeyVersion.
                                type: string
                              uuid:
                                description: The UUID of the DnssecKeyVersion.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  dnssecState:
                    description: (Updatable) The state of DNSSEC on the zone.
                    type: string
                  externalDownstreams:
                    description: (Updatable) External secondary servers for the zone.
                      This field is currently not supported when zoneType is SECONDARY
                      or scope is PRIVATE.
                    items:
                      properties:
                        address:
                          description: (Updatable) The server's IP address (IPv4 or
                            IPv6).
                          type: string
                        port:
                          description: (Updatable) The server's port. Port value must
                            be a value of 53, otherwise omit the port value.
                          type: number
                        tsigKeyId:
                          description: (Updatable) The OCID of the TSIG key. A TSIG
                            key is used to secure DNS messages (in this case, zone
                            transfers) between two systems that both have the (shared)
                            secret.
                          type: string
                      type: object
                    type: array
                  externalMasters:
                    description: (Updatable) External master servers for the zone.
                      externalMasters becomes a required parameter when the zoneType
                      value is SECONDARY.
                    items:
                      properties:
                        address:
                          description: (Updatable) The server's IP address (IPv4 or
                            IPv6).
                          type: string
                        port:
                          description: (Updatable) The server's port. Port value must
                            be a value of 53, otherwise omit the port value.
                          type: number
                        tsigKeyId:
                          description: (Updatable) The OCID of the TSIG key. A TSIG
                            key is used to secure DNS messages (in this case, zone
                            transfers) between two systems that both have the (shared)
                            secret.
                          type: string
                      type: object
                    type: array
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: (Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    description: The OCID of the zone.
                    type: string
                  isProtected:
                    description: A Boolean flag indicating whether or not parts of
                      the resource are unable to be explicitly managed.
                    type: boolean
                  name:
                    description: The name of the zone.
                    type: string
                  nameservers:
                    description: The authoritative nameservers for the zone.
                    items:
                      properties:
                        hostname:
                          description: The hostname of the nameserver.
                          type: string
                      type: object
                    type: array
                  scope:
                    description: |-
                      Specifies to operate only on resources that have a matching DNS scope.
                      This value will be null for zones in the global DNS and PRIVATE when creating a private zone.
                    type: string
                  self:
                    description: The canonical absolute URL of the resource.
                    type: string
                  serial:
                    description: The current serial of the zone. As seen in the zone's
                      SOA record.
                    type: number
                  state:
                    description: The current state of the zone resource.
                    type: string
                  timeCreated:
                    description: The date and time the key version was created, expressed
                      in RFC 3339 timestamp format.
                    type: string
                  version:
                    description: Version is the never-repeating, totally-orderable,
                      version of the zone, from which the serial field of the zone's
                      SOA record is derived.
                    type: string
                  viewId:
                    description: The OCID of the private view containing the zone.
                      This value will be null for zones in the global DNS, which are
                      publicly resolvable and not part of a private view.
                    type: string
                  zoneTransferServers:
                    description: The Oracle Cloud Infrastructure nameservers that
                      transfer the zone data with external nameservers.
                    items:
                      properties:
                        address:
                          description: (Updatable) The server's IP address (IPv4 or
                            IPv6).
                          type: string
                        isTransferDestination:
                          description: A Boolean flag indicating whether or not the
                            server is a zone data transfer destination.
                          type: boolean
                        isTransferSource:
                          description: A Boolean flag indicating whether or not the
                            server is a zone data transfer source.
                          type: boolean
                        port:
                          description: (Updatable) The server's port. Port value must
                            be a value of 53, otherwise omit the port value.
                          type: number
                      type: object
                    type: array
                  zoneType:
                    description: The type of the zone. Must be either PRIMARY or SECONDARY.
                      SECONDARY is only supported for GLOBAL zones.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
