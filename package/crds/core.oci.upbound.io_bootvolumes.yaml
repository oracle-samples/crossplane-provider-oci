---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: bootvolumes.core.oci.upbound.io
spec:
  group: core.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: BootVolume
    listKind: BootVolumeList
    plural: bootvolumes
    singular: bootvolume
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BootVolume is the Schema for the BootVolumes API. Provides the
          Boot Volume resource in Oracle Cloud Infrastructure Core service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BootVolumeSpec defines the desired state of BootVolume
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autotunePolicies:
                    description: (Updatable) The list of autotune policies to be enabled
                      for this volume.
                    items:
                      properties:
                        autotuneType:
                          description: (Updatable) This specifies the type of autotunes
                            supported by OCI.
                          type: string
                        maxVpusPerGb:
                          description: (Updatable) This will be the maximum VPUs/GB
                            performance level that the volume will be auto-tuned temporarily
                            based on performance monitoring.
                          type: string
                      required:
                      - autotuneType
                      type: object
                    type: array
                  availabilityDomain:
                    description: 'The availability domain of the volume. Omissible
                      for cloning a volume. The new volume will be created in the
                      availability domain of the source volume.  Example: Uocm:PHX-AD-1'
                    type: string
                  backupPolicyId:
                    description: If provided, specifies the ID of the boot volume
                      backup policy to assign to the newly created boot volume. If
                      omitted, no policy will be assigned.
                    type: string
                  bootVolumeReplicas:
                    description: (Updatable) The list of boot volume replicas to be
                      enabled for this boot volume in the specified destination availability
                      domains.
                    items:
                      properties:
                        availabilityDomain:
                          description: 'The availability domain of the volume. Omissible
                            for cloning a volume. The new volume will be created in
                            the availability domain of the source volume.  Example:
                            Uocm:PHX-AD-1'
                          type: string
                        displayName:
                          description: (Updatable) A user-friendly name. Does not
                            have to be unique, and it's changeable. Avoid entering
                            confidential information.
                          type: string
                      required:
                      - availabilityDomain
                      type: object
                    type: array
                  bootVolumeReplicasDeletion:
                    type: boolean
                  compartmentId:
                    description: (Updatable) The OCID of the compartment that contains
                      the boot volume.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.  Example: {"Operations.CostCenter": "42"}'
                    type: object
                  displayName:
                    description: (Updatable) A user-friendly name. Does not have to
                      be unique, and it's changeable. Avoid entering confidential
                      information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.  Example:
                      {"Department": "Finance"}'
                    type: object
                  isAutoTuneEnabled:
                    description: (Updatable) Specifies whether the auto-tune performance
                      is enabled for this boot volume. This field is deprecated. Use
                      the DetachedVolumeAutotunePolicy instead to enable the volume
                      for detached autotune.
                    type: boolean
                  kmsKeyId:
                    description: (Updatable) The OCID of the Vault service key to
                      assign as the master encryption key for the boot volume.
                    type: string
                  sizeInGbs:
                    description: (Updatable) The size of the volume in GBs.
                    type: string
                  sourceDetails:
                    items:
                      properties:
                        id:
                          description: The OCID of the boot volume replica.
                          type: string
                        type:
                          description: 'The type can be one of these values: bootVolume,
                            bootVolumeBackup, bootVolumeReplica'
                          type: string
                      required:
                      - id
                      - type
                      type: object
                    type: array
                  vpusPerGb:
                    description: (Updatable) The number of volume performance units
                      (VPUs) that will be applied to this volume per GB, representing
                      the Block Volume service's elastic performance options. See
                      Block Volume Performance Levels for more information.
                    type: string
                required:
                - availabilityDomain
                - compartmentId
                - sourceDetails
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BootVolumeStatus defines the observed state of BootVolume.
            properties:
              atProvider:
                properties:
                  autoTunedVpusPerGb:
                    description: The number of Volume Performance Units per GB that
                      this boot volume is effectively tuned to.
                    type: string
                  bootVolumeReplicas:
                    description: (Updatable) The list of boot volume replicas to be
                      enabled for this boot volume in the specified destination availability
                      domains.
                    items:
                      properties:
                        bootVolumeReplicaId:
                          description: The boot volume replica's Oracle ID (OCID).
                          type: string
                      type: object
                    type: array
                  id:
                    description: The OCID of the boot volume replica.
                    type: string
                  imageId:
                    description: The image OCID used to create the boot volume.
                    type: string
                  isHydrated:
                    description: Specifies whether the boot volume's data has finished
                      copying from the source boot volume or boot volume backup.
                    type: boolean
                  sizeInMbs:
                    description: The size of the volume in MBs. The value must be
                      a multiple of 1024. This field is deprecated. Please use size_in_gbs.
                    type: string
                  state:
                    description: The current state of a boot volume.
                    type: string
                  systemTags:
                    additionalProperties:
                      type: string
                    description: 'System tags for this resource. Each key is predefined
                      and scoped to a namespace. Example: {"foo-namespace.bar-key":
                      "value"}'
                    type: object
                  timeCreated:
                    description: The date and time the boot volume was created. Format
                      defined by RFC3339.
                    type: string
                  volumeGroupId:
                    description: The OCID of the source volume group.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
