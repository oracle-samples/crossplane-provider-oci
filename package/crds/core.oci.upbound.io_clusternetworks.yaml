---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusternetworks.core.oci.upbound.io
spec:
  group: core.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: ClusterNetwork
    listKind: ClusterNetworkList
    plural: clusternetworks
    singular: clusternetwork
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterNetwork is the Schema for the ClusterNetworks API. Provides
          the Cluster Network resource in Oracle Cloud Infrastructure Core service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterNetworkSpec defines the desired state of ClusterNetwork
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  compartmentId:
                    description: (Updatable) The OCID of the compartment containing
                      the cluster network.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.  Example: {"Operations.CostCenter": "42"}'
                    type: object
                  displayName:
                    description: (Updatable) A user-friendly name. Does not have to
                      be unique, and it's changeable. Avoid entering confidential
                      information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.  Example:
                      {"Department": "Finance"}'
                    type: object
                  instancePools:
                    description: (Updatable) The data to create the instance pools
                      in the cluster network.
                    items:
                      properties:
                        definedTags:
                          additionalProperties:
                            type: string
                          description: '(Updatable) Defined tags for this resource.
                            Each key is predefined and scoped to a namespace. For
                            more information, see Resource Tags.  Example: {"Operations.CostCenter":
                            "42"}'
                          type: object
                        displayName:
                          description: (Updatable) A user-friendly name. Does not
                            have to be unique, and it's changeable. Avoid entering
                            confidential information.
                          type: string
                        freeformTags:
                          additionalProperties:
                            type: string
                          description: '(Updatable) Free-form tags for this resource.
                            Each tag is a simple key-value pair with no predefined
                            name, type, or namespace. For more information, see Resource
                            Tags.  Example: {"Department": "Finance"}'
                          type: object
                        instanceConfigurationId:
                          description: (Updatable) The OCID of the instance configuration
                            associated with the instance pool.
                          type: string
                        size:
                          description: (Updatable) The number of instances that should
                            be in the instance pool.
                          type: number
                      required:
                      - instanceConfigurationId
                      - size
                      type: object
                    type: array
                  placementConfiguration:
                    description: The location for where the instance pools in a cluster
                      network will place instances.
                    items:
                      properties:
                        availabilityDomain:
                          description: 'The availability domain to place instances.  Example:
                            Uocm:PHX-AD-1'
                          type: string
                        primarySubnetId:
                          description: The OCID of the primary subnet to place instances.
                          type: string
                        secondaryVnicSubnets:
                          description: The set of secondary VNIC data for instances
                            in the pool.
                          items:
                            properties:
                              displayName:
                                description: (Updatable) A user-friendly name. Does
                                  not have to be unique, and it's changeable. Avoid
                                  entering confidential information.
                                type: string
                              subnetId:
                                description: The subnet OCID for the secondary VNIC.
                                type: string
                            required:
                            - subnetId
                            type: object
                          type: array
                      required:
                      - availabilityDomain
                      - primarySubnetId
                      type: object
                    type: array
                required:
                - compartmentId
                - instancePools
                - placementConfiguration
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ClusterNetworkStatus defines the observed state of ClusterNetwork.
            properties:
              atProvider:
                properties:
                  hpcIslandId:
                    description: The OCID of the hpc island used by the cluster network.
                    type: string
                  id:
                    description: The OCID of the cluster network.
                    type: string
                  instancePools:
                    description: (Updatable) The data to create the instance pools
                      in the cluster network.
                    items:
                      properties:
                        compartmentId:
                          description: (Updatable) The OCID of the compartment containing
                            the cluster network.
                          type: string
                        id:
                          description: The OCID of the cluster network.
                          type: string
                        loadBalancers:
                          description: The load balancers attached to the instance
                            pool.
                          items:
                            properties:
                              backendSetName:
                                description: The name of the backend set on the load
                                  balancer.
                                type: string
                              id:
                                description: The OCID of the cluster network.
                                type: string
                              instancePoolId:
                                description: The OCID of the instance pool of the
                                  load balancer attachment.
                                type: string
                              loadBalancerId:
                                description: The OCID of the load balancer attached
                                  to the instance pool.
                                type: string
                              port:
                                description: The port value used for the backends.
                                type: number
                              state:
                                description: The status of the interaction between
                                  the instance pool and the load balancer.
                                type: string
                              vnicSelection:
                                description: Indicates which VNIC on each instance
                                  in the instance pool should be used to associate
                                  with the load balancer. Possible values are "PrimaryVnic"
                                  or the displayName of one of the secondary VNICs
                                  on the instance configuration that is associated
                                  with the instance pool.
                                type: string
                            type: object
                          type: array
                        placementConfigurations:
                          description: The placement configurations for the instance
                            pool.
                          items:
                            properties:
                              availabilityDomain:
                                description: 'The availability domain to place instances.  Example:
                                  Uocm:PHX-AD-1'
                                type: string
                              faultDomains:
                                description: The fault domains to place instances.
                                items:
                                  type: string
                                type: array
                              primarySubnetId:
                                description: The OCID of the primary subnet to place
                                  instances.
                                type: string
                              secondaryVnicSubnets:
                                description: The set of secondary VNIC data for instances
                                  in the pool.
                                items:
                                  properties:
                                    displayName:
                                      description: (Updatable) A user-friendly name.
                                        Does not have to be unique, and it's changeable.
                                        Avoid entering confidential information.
                                      type: string
                                    subnetId:
                                      description: The subnet OCID for the secondary
                                        VNIC.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        state:
                          description: The status of the interaction between the instance
                            pool and the load balancer.
                          type: string
                        timeCreated:
                          description: 'The date and time the instance pool was created,
                            in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z'
                          type: string
                      type: object
                    type: array
                  networkBlockIds:
                    description: The list of network block OCIDs of the HPC island.
                    items:
                      type: string
                    type: array
                  state:
                    description: The status of the interaction between the instance
                      pool and the load balancer.
                    type: string
                  timeCreated:
                    description: 'The date and time the instance pool was created,
                      in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z'
                    type: string
                  timeUpdated:
                    description: 'The date and time the resource was updated, in the
                      format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
