---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: keys.kms.oci.upbound.io
spec:
  group: kms.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: Key
    listKind: KeyList
    plural: keys
    singular: key
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Key is the Schema for the Keys API. Provides the Key resource
          in Oracle Cloud Infrastructure Kms service
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KeySpec defines the desired state of Key
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoKeyRotationDetails:
                    description: (Updatable) The details of auto rotation schedule
                      for the Key being create updated or imported.
                    items:
                      properties:
                        lastRotationMessage:
                          description: (Updatable) The last execution status message
                            of auto key rotation.
                          type: string
                        lastRotationStatus:
                          description: (Updatable) The status of last execution of
                            auto key rotation.
                          type: string
                        rotationIntervalInDays:
                          description: '(Updatable) The interval of auto key rotation.
                            For auto key rotation the interval should between 60 day
                            and 365 days (1 year). Note: User must specify this parameter
                            when creating a new schedule.'
                          type: number
                        timeOfLastRotation:
                          description: '(Updatable) A property indicating Last rotation
                            Date. Example: 2023-04-04T00:00:00Z.'
                          type: string
                        timeOfNextRotation:
                          description: '(Updatable) A property indicating Next estimated
                            scheduled Time, as per the interval, expressed as date
                            YYYY-MM-DD String. Example: 2023-04-04T00:00:00Z. The
                            time has no significance when scheduling an auto key rotation
                            as this can be done anytime approximately the scheduled
                            day, KMS ignores the time and replaces it with 00:00,
                            for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z.'
                          type: string
                        timeOfScheduleStart:
                          description: '(Updatable) A property indicating  scheduled
                            start date expressed as date YYYY-MM-DD String. Example:
                            `2023-04-04T00:00:00Z. The time has no significance when
                            scheduling an auto key rotation as this can be done anytime
                            approximately the scheduled day, KMS ignores the time
                            and replaces it with 00:00, for example 2023-04-04T15:14:13Z
                            will be used as 2023-04-04T00:00:00Z . Note : Todayâ€™s
                            date will be used if not specified by customer.'
                          type: string
                      type: object
                    type: array
                  compartmentId:
                    description: (Updatable) The OCID of the compartment where you
                      want to create the master encryption key.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  desiredState:
                    description: '(Updatable) Desired state of the key. Possible values
                      : ENABLED or DISABLED'
                    type: string
                  displayName:
                    description: (Updatable) A user-friendly name for the key. It
                      does not have to be unique, and it is changeable. Avoid entering
                      confidential information.
                    type: string
                  externalKeyReference:
                    description: A reference to the key on external key manager.
                    items:
                      properties:
                        externalKeyId:
                          description: ExternalKeyId refers to the globally unique
                            key Id associated with the key created in external vault
                            in CTM
                          type: string
                      type: object
                    type: array
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  isAutoRotationEnabled:
                    description: (Updatable) A parameter specifying whether the auto
                      key rotation is enabled or not.
                    type: boolean
                  keyShape:
                    description: The cryptographic properties of a key.
                    items:
                      properties:
                        algorithm:
                          description: The algorithm used by a key's key versions
                            to encrypt or decrypt. Only AES algorithm is supported
                            for External keys.
                          type: string
                        curveId:
                          description: Supported curve IDs for ECDSA keys.
                          type: string
                        length:
                          description: 'The length of the key in bytes, expressed
                            as an integer. Supported values include the following:'
                          type: number
                      type: object
                    type: array
                  managementEndpoint:
                    description: The service endpoint to perform management operations
                      against. Management operations include 'Create,' 'Update,' 'List,'
                      'Get,' and 'Delete' operations. See Vault Management endpoint.
                    type: string
                  protectionMode:
                    description: The key's protection mode indicates how the key persists
                      and where cryptographic operations that use the key are performed.
                      A protection mode of HSM means that the key persists on a hardware
                      security module (HSM) and all cryptographic operations are performed
                      inside the HSM. A protection mode of SOFTWARE means that the
                      key persists on the server, protected by the vault's RSA wrapping
                      key which persists on the HSM. All cryptographic operations
                      that use a key with a protection mode of SOFTWARE are performed
                      on the server. By default, a key's protection mode is set to
                      HSM. You can't change a key's protection mode after the key
                      is created or imported. A protection mode of EXTERNAL mean that
                      the key persists on the customer's external key manager which
                      is hosted externally outside of oracle. Oracle only hold a reference
                      to that key. All cryptographic operations that use a key with
                      a protection mode of EXTERNAL are performed by external key
                      manager.
                    type: string
                  restoreFromFile:
                    description: (Updatable) Details where key was backed up.
                    items:
                      properties:
                        contentLength:
                          description: (Updatable) content length of key's backup
                            binary file
                          type: string
                        contentMd5:
                          description: (Updatable) content md5 hashed value of key's
                            backup file
                          type: string
                        restoreKeyFromFileDetails:
                          description: Key backup file content.
                          type: string
                      type: object
                    type: array
                  restoreFromObjectStore:
                    description: (Updatable) Details where key was backed up
                    items:
                      properties:
                        bucket:
                          description: (Updatable) Name of the bucket where key was
                            backed up
                          type: string
                        destination:
                          description: (Updatable) Type of backup to restore from.
                            Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are
                            supported
                          type: string
                        namespace:
                          description: (Updatable) Namespace of the bucket where key
                            was backed up
                          type: string
                        object:
                          description: (Updatable) Object containing the backup
                          type: string
                        uri:
                          description: (Updatable) Pre-authenticated-request-uri of
                            the backup
                          type: string
                      type: object
                    type: array
                  restoreTrigger:
                    description: (Updatable) An optional property when flipped triggers
                      restore from restore option provided in config file.
                    type: boolean
                  timeOfDeletion:
                    description: '(Updatable) An optional property for the deletion
                      time of the key, expressed in RFC 3339 timestamp format. Example:
                      2019-04-03T21:10:29.600Z'
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autoKeyRotationDetails:
                    description: (Updatable) The details of auto rotation schedule
                      for the Key being create updated or imported.
                    items:
                      properties:
                        lastRotationMessage:
                          description: (Updatable) The last execution status message
                            of auto key rotation.
                          type: string
                        lastRotationStatus:
                          description: (Updatable) The status of last execution of
                            auto key rotation.
                          type: string
                        rotationIntervalInDays:
                          description: '(Updatable) The interval of auto key rotation.
                            For auto key rotation the interval should between 60 day
                            and 365 days (1 year). Note: User must specify this parameter
                            when creating a new schedule.'
                          type: number
                        timeOfLastRotation:
                          description: '(Updatable) A property indicating Last rotation
                            Date. Example: 2023-04-04T00:00:00Z.'
                          type: string
                        timeOfNextRotation:
                          description: '(Updatable) A property indicating Next estimated
                            scheduled Time, as per the interval, expressed as date
                            YYYY-MM-DD String. Example: 2023-04-04T00:00:00Z. The
                            time has no significance when scheduling an auto key rotation
                            as this can be done anytime approximately the scheduled
                            day, KMS ignores the time and replaces it with 00:00,
                            for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z.'
                          type: string
                        timeOfScheduleStart:
                          description: '(Updatable) A property indicating  scheduled
                            start date expressed as date YYYY-MM-DD String. Example:
                            `2023-04-04T00:00:00Z. The time has no significance when
                            scheduling an auto key rotation as this can be done anytime
                            approximately the scheduled day, KMS ignores the time
                            and replaces it with 00:00, for example 2023-04-04T15:14:13Z
                            will be used as 2023-04-04T00:00:00Z . Note : Todayâ€™s
                            date will be used if not specified by customer.'
                          type: string
                      type: object
                    type: array
                  compartmentId:
                    description: (Updatable) The OCID of the compartment where you
                      want to create the master encryption key.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  desiredState:
                    description: '(Updatable) Desired state of the key. Possible values
                      : ENABLED or DISABLED'
                    type: string
                  displayName:
                    description: (Updatable) A user-friendly name for the key. It
                      does not have to be unique, and it is changeable. Avoid entering
                      confidential information.
                    type: string
                  externalKeyReference:
                    description: A reference to the key on external key manager.
                    items:
                      properties:
                        externalKeyId:
                          description: ExternalKeyId refers to the globally unique
                            key Id associated with the key created in external vault
                            in CTM
                          type: string
                      type: object
                    type: array
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  isAutoRotationEnabled:
                    description: (Updatable) A parameter specifying whether the auto
                      key rotation is enabled or not.
                    type: boolean
                  keyShape:
                    description: The cryptographic properties of a key.
                    items:
                      properties:
                        algorithm:
                          description: The algorithm used by a key's key versions
                            to encrypt or decrypt. Only AES algorithm is supported
                            for External keys.
                          type: string
                        curveId:
                          description: Supported curve IDs for ECDSA keys.
                          type: string
                        length:
                          description: 'The length of the key in bytes, expressed
                            as an integer. Supported values include the following:'
                          type: number
                      type: object
                    type: array
                  managementEndpoint:
                    description: The service endpoint to perform management operations
                      against. Management operations include 'Create,' 'Update,' 'List,'
                      'Get,' and 'Delete' operations. See Vault Management endpoint.
                    type: string
                  protectionMode:
                    description: The key's protection mode indicates how the key persists
                      and where cryptographic operations that use the key are performed.
                      A protection mode of HSM means that the key persists on a hardware
                      security module (HSM) and all cryptographic operations are performed
                      inside the HSM. A protection mode of SOFTWARE means that the
                      key persists on the server, protected by the vault's RSA wrapping
                      key which persists on the HSM. All cryptographic operations
                      that use a key with a protection mode of SOFTWARE are performed
                      on the server. By default, a key's protection mode is set to
                      HSM. You can't change a key's protection mode after the key
                      is created or imported. A protection mode of EXTERNAL mean that
                      the key persists on the customer's external key manager which
                      is hosted externally outside of oracle. Oracle only hold a reference
                      to that key. All cryptographic operations that use a key with
                      a protection mode of EXTERNAL are performed by external key
                      manager.
                    type: string
                  restoreFromFile:
                    description: (Updatable) Details where key was backed up.
                    items:
                      properties:
                        contentLength:
                          description: (Updatable) content length of key's backup
                            binary file
                          type: string
                        contentMd5:
                          description: (Updatable) content md5 hashed value of key's
                            backup file
                          type: string
                        restoreKeyFromFileDetails:
                          description: Key backup file content.
                          type: string
                      type: object
                    type: array
                  restoreFromObjectStore:
                    description: (Updatable) Details where key was backed up
                    items:
                      properties:
                        bucket:
                          description: (Updatable) Name of the bucket where key was
                            backed up
                          type: string
                        destination:
                          description: (Updatable) Type of backup to restore from.
                            Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are
                            supported
                          type: string
                        namespace:
                          description: (Updatable) Namespace of the bucket where key
                            was backed up
                          type: string
                        object:
                          description: (Updatable) Object containing the backup
                          type: string
                        uri:
                          description: (Updatable) Pre-authenticated-request-uri of
                            the backup
                          type: string
                      type: object
                    type: array
                  restoreTrigger:
                    description: (Updatable) An optional property when flipped triggers
                      restore from restore option provided in config file.
                    type: boolean
                  timeOfDeletion:
                    description: '(Updatable) An optional property for the deletion
                      time of the key, expressed in RFC 3339 timestamp format. Example:
                      2019-04-03T21:10:29.600Z'
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.displayName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.displayName)
                || (has(self.initProvider) && has(self.initProvider.displayName))'
            - message: spec.forProvider.keyShape is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.keyShape)
                || (has(self.initProvider) && has(self.initProvider.keyShape))'
            - message: spec.forProvider.managementEndpoint is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.managementEndpoint)
                || (has(self.initProvider) && has(self.initProvider.managementEndpoint))'
          status:
            description: KeyStatus defines the observed state of Key.
            properties:
              atProvider:
                properties:
                  autoKeyRotationDetails:
                    description: (Updatable) The details of auto rotation schedule
                      for the Key being create updated or imported.
                    items:
                      properties:
                        lastRotationMessage:
                          description: (Updatable) The last execution status message
                            of auto key rotation.
                          type: string
                        lastRotationStatus:
                          description: (Updatable) The status of last execution of
                            auto key rotation.
                          type: string
                        rotationIntervalInDays:
                          description: '(Updatable) The interval of auto key rotation.
                            For auto key rotation the interval should between 60 day
                            and 365 days (1 year). Note: User must specify this parameter
                            when creating a new schedule.'
                          type: number
                        timeOfLastRotation:
                          description: '(Updatable) A property indicating Last rotation
                            Date. Example: 2023-04-04T00:00:00Z.'
                          type: string
                        timeOfNextRotation:
                          description: '(Updatable) A property indicating Next estimated
                            scheduled Time, as per the interval, expressed as date
                            YYYY-MM-DD String. Example: 2023-04-04T00:00:00Z. The
                            time has no significance when scheduling an auto key rotation
                            as this can be done anytime approximately the scheduled
                            day, KMS ignores the time and replaces it with 00:00,
                            for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z.'
                          type: string
                        timeOfScheduleStart:
                          description: '(Updatable) A property indicating  scheduled
                            start date expressed as date YYYY-MM-DD String. Example:
                            `2023-04-04T00:00:00Z. The time has no significance when
                            scheduling an auto key rotation as this can be done anytime
                            approximately the scheduled day, KMS ignores the time
                            and replaces it with 00:00, for example 2023-04-04T15:14:13Z
                            will be used as 2023-04-04T00:00:00Z . Note : Todayâ€™s
                            date will be used if not specified by customer.'
                          type: string
                      type: object
                    type: array
                  compartmentId:
                    description: (Updatable) The OCID of the compartment where you
                      want to create the master encryption key.
                    type: string
                  currentKeyVersion:
                    description: The OCID of the key version used in cryptographic
                      operations. During key rotation, the service might be in a transitional
                      state where this or a newer key version are used intermittently.
                      The currentKeyVersion property is updated when the service is
                      guaranteed to use the new key version for all subsequent encryption
                      operations.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  desiredState:
                    description: '(Updatable) Desired state of the key. Possible values
                      : ENABLED or DISABLED'
                    type: string
                  displayName:
                    description: (Updatable) A user-friendly name for the key. It
                      does not have to be unique, and it is changeable. Avoid entering
                      confidential information.
                    type: string
                  externalKeyReference:
                    description: A reference to the key on external key manager.
                    items:
                      properties:
                        externalKeyId:
                          description: ExternalKeyId refers to the globally unique
                            key Id associated with the key created in external vault
                            in CTM
                          type: string
                      type: object
                    type: array
                  externalKeyReferenceDetails:
                    description: Key reference data to be returned to the customer
                      as a response.
                    items:
                      properties:
                        externalKeyId:
                          description: ExternalKeyId refers to the globally unique
                            key Id associated with the key created in external vault
                            in CTM
                          type: string
                        externalKeyVersionId:
                          description: Key version ID associated with the external
                            key.
                          type: string
                      type: object
                    type: array
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    description: The OCID of the key.
                    type: string
                  isAutoRotationEnabled:
                    description: (Updatable) A parameter specifying whether the auto
                      key rotation is enabled or not.
                    type: boolean
                  isPrimary:
                    description: A Boolean value that indicates whether the Key belongs
                      to primary Vault or replica vault.
                    type: boolean
                  keyShape:
                    description: The cryptographic properties of a key.
                    items:
                      properties:
                        algorithm:
                          description: The algorithm used by a key's key versions
                            to encrypt or decrypt. Only AES algorithm is supported
                            for External keys.
                          type: string
                        curveId:
                          description: Supported curve IDs for ECDSA keys.
                          type: string
                        length:
                          description: 'The length of the key in bytes, expressed
                            as an integer. Supported values include the following:'
                          type: number
                      type: object
                    type: array
                  managementEndpoint:
                    description: The service endpoint to perform management operations
                      against. Management operations include 'Create,' 'Update,' 'List,'
                      'Get,' and 'Delete' operations. See Vault Management endpoint.
                    type: string
                  protectionMode:
                    description: The key's protection mode indicates how the key persists
                      and where cryptographic operations that use the key are performed.
                      A protection mode of HSM means that the key persists on a hardware
                      security module (HSM) and all cryptographic operations are performed
                      inside the HSM. A protection mode of SOFTWARE means that the
                      key persists on the server, protected by the vault's RSA wrapping
                      key which persists on the HSM. All cryptographic operations
                      that use a key with a protection mode of SOFTWARE are performed
                      on the server. By default, a key's protection mode is set to
                      HSM. You can't change a key's protection mode after the key
                      is created or imported. A protection mode of EXTERNAL mean that
                      the key persists on the customer's external key manager which
                      is hosted externally outside of oracle. Oracle only hold a reference
                      to that key. All cryptographic operations that use a key with
                      a protection mode of EXTERNAL are performed by external key
                      manager.
                    type: string
                  replicaDetails:
                    description: Key replica details
                    items:
                      properties:
                        replicationId:
                          description: ReplicationId associated with a key operation
                          type: string
                      type: object
                    type: array
                  restoreFromFile:
                    description: (Updatable) Details where key was backed up.
                    items:
                      properties:
                        contentLength:
                          description: (Updatable) content length of key's backup
                            binary file
                          type: string
                        contentMd5:
                          description: (Updatable) content md5 hashed value of key's
                            backup file
                          type: string
                        restoreKeyFromFileDetails:
                          description: Key backup file content.
                          type: string
                      type: object
                    type: array
                  restoreFromObjectStore:
                    description: (Updatable) Details where key was backed up
                    items:
                      properties:
                        bucket:
                          description: (Updatable) Name of the bucket where key was
                            backed up
                          type: string
                        destination:
                          description: (Updatable) Type of backup to restore from.
                            Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are
                            supported
                          type: string
                        namespace:
                          description: (Updatable) Namespace of the bucket where key
                            was backed up
                          type: string
                        object:
                          description: (Updatable) Object containing the backup
                          type: string
                        uri:
                          description: (Updatable) Pre-authenticated-request-uri of
                            the backup
                          type: string
                      type: object
                    type: array
                  restoreTrigger:
                    description: (Updatable) An optional property when flipped triggers
                      restore from restore option provided in config file.
                    type: boolean
                  restoredFromKeyId:
                    description: The OCID of the key from which this key was restored.
                    type: string
                  state:
                    description: 'The key''s current lifecycle state.  Example: ENABLED'
                    type: string
                  timeCreated:
                    description: 'The date and time the key was created, expressed
                      in RFC 3339 timestamp format.  Example: 2018-04-03T21:10:29.600Z'
                    type: string
                  timeOfDeletion:
                    description: '(Updatable) An optional property for the deletion
                      time of the key, expressed in RFC 3339 timestamp format. Example:
                      2019-04-03T21:10:29.600Z'
                    type: string
                  vaultId:
                    description: The OCID of the vault that contains this key.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
