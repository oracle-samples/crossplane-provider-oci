---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: nodepools.containerengine.oci.upbound.io
spec:
  group: containerengine.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    singular: nodepool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodePool is the Schema for the NodePools API. Provides the Node
          Pool resource in Oracle Cloud Infrastructure Container Engine service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodePoolSpec defines the desired state of NodePool
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  clusterId:
                    description: The OCID of the cluster to which this node pool is
                      attached.
                    type: string
                  clusterIdRef:
                    description: Reference to a Cluster to populate clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a Cluster to populate clusterId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  compartmentId:
                    description: The OCID of the compartment in which the node pool
                      exists.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                  initialNodeLabels:
                    description: (Updatable) A list of key/value pairs to add to nodes
                      after they join the Kubernetes cluster.
                    items:
                      properties:
                        key:
                          description: (Updatable) The key of the pair.
                          type: string
                        value:
                          description: (Updatable) The value of the pair.
                          type: string
                      type: object
                    type: array
                  kubernetesVersion:
                    description: (Updatable) The version of Kubernetes to install
                      on the nodes in the node pool.
                    type: string
                  name:
                    description: (Updatable) The name of the node pool. Avoid entering
                      confidential information.
                    type: string
                  nodeConfigDetails:
                    description: (Updatable) The configuration of nodes in the node
                      pool. Exactly one of the subnetIds or nodeConfigDetails properties
                      must be specified.
                    items:
                      properties:
                        definedTags:
                          additionalProperties:
                            type: string
                          description: '(Updatable) Defined tags for this resource.
                            Each key is predefined and scoped to a namespace. For
                            more information, see Resource Tags. Example: {"Operations.CostCenter":
                            "42"}'
                          type: object
                        freeformTags:
                          additionalProperties:
                            type: string
                          description: '(Updatable) Free-form tags for this resource.
                            Each tag is a simple key-value pair with no predefined
                            name, type, or namespace. For more information, see Resource
                            Tags. Example: {"Department": "Finance"}'
                          type: object
                        isPvEncryptionInTransitEnabled:
                          description: (Updatable) Whether to enable in-transit encryption
                            for the data volume's paravirtualized attachment. This
                            field applies to both block volumes and boot volumes.
                            The default value is false.
                          type: boolean
                        kmsKeyId:
                          description: (Updatable) The OCID of the Key Management
                            Service key assigned to the boot volume.
                          type: string
                        nodePoolPodNetworkOptionDetails:
                          description: (Updatable) The CNI related configuration of
                            pods in the node pool.
                          items:
                            properties:
                              cniType:
                                description: (Updatable) The CNI plugin used by this
                                  node pool
                                type: string
                              maxPodsPerNode:
                                description: (Applicable when cni_type=OCI_VCN_IP_NATIVE)
                                  (Updatable) The max number of pods per node in the
                                  node pool. This value will be limited by the number
                                  of VNICs attachable to the node pool shape
                                type: number
                              podNsgIds:
                                description: (Applicable when cni_type=OCI_VCN_IP_NATIVE)
                                  (Updatable) The OCIDs of the Network Security Group(s)
                                  to associate pods for this node pool with. For more
                                  information about NSGs, see NetworkSecurityGroup.
                                items:
                                  type: string
                                type: array
                              podSubnetIds:
                                description: (Updatable) The OCIDs of the subnets
                                  in which to place pods for this node pool. This
                                  can be one of the node pool subnet IDs
                                items:
                                  type: string
                                type: array
                            required:
                            - cniType
                            type: object
                          type: array
                        nsgIds:
                          description: (Updatable) The OCIDs of the Network Security
                            Group(s) to associate nodes for this node pool with. For
                            more information about NSGs, see NetworkSecurityGroup.
                          items:
                            type: string
                          type: array
                        nsgIdsRefs:
                          description: References to NetworkSecurityGroup in core
                            to populate nsgIds.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference
                                      only when the corresponding field is not present.
                                      Use 'Always' to resolve the reference on every
                                      reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        nsgIdsSelector:
                          description: Selector for a list of NetworkSecurityGroup
                            in core to populate nsgIds.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        placementConfigs:
                          description: (Updatable) The placement configurations for
                            the node pool. Provide one placement configuration for
                            each availability domain in which you intend to launch
                            a node.
                          items:
                            properties:
                              availabilityDomain:
                                description: '(Updatable) The availability domain
                                  in which to place nodes. Example: Uocm:PHX-AD-1'
                                type: string
                              capacityReservationId:
                                description: (Updatable) The OCID of the compute capacity
                                  reservation in which to place the compute instance.
                                type: string
                              faultDomains:
                                description: (Updatable) A list of fault domains in
                                  which to place nodes.
                                items:
                                  type: string
                                type: array
                              preemptibleNodeConfig:
                                description: (Updatable) Configuration options for
                                  preemptible nodes.
                                items:
                                  properties:
                                    preemptionAction:
                                      description: (Updatable) The action to run when
                                        the preemptible node is interrupted for eviction.
                                      items:
                                        properties:
                                          isPreserveBootVolume:
                                            description: (Updatable) Whether to preserve
                                              the boot volume that was used to launch
                                              the preemptible instance when the instance
                                              is terminated. Defaults to false if
                                              not specified.
                                            type: boolean
                                          type:
                                            description: (Updatable) The type of action
                                              to run when the instance is interrupted
                                              for eviction.
                                            type: string
                                        required:
                                        - type
                                        type: object
                                      type: array
                                  required:
                                  - preemptionAction
                                  type: object
                                type: array
                              subnetId:
                                description: (Updatable) The OCID of the subnet in
                                  which to place nodes.
                                type: string
                              subnetIdRef:
                                description: Reference to a Subnet in core to populate
                                  subnetId.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              subnetIdSelector:
                                description: Selector for a Subnet in core to populate
                                  subnetId.
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object
                                      with the same controller reference as the selecting
                                      object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            required:
                            - availabilityDomain
                            type: object
                          type: array
                        size:
                          description: (Updatable) The number of nodes that should
                            be in the node pool.
                          type: number
                      required:
                      - placementConfigs
                      - size
                      type: object
                    type: array
                  nodeEvictionNodePoolSettings:
                    description: (Updatable) Node Eviction Details configuration
                    items:
                      properties:
                        evictionGraceDuration:
                          description: '(Updatable) Duration after which OKE will
                            give up eviction of the pods on the node. PT0M will indicate
                            you want to delete the node without cordon and drain.
                            Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601 e.g
                            PT30M'
                          type: string
                        isForceDeleteAfterGraceDuration:
                          description: (Updatable) If the underlying compute instance
                            should be deleted if you cannot evict all the pods in
                            grace period
                          type: boolean
                      type: object
                    type: array
                  nodeImageId:
                    description: Deprecated. see nodeSource. The OCID of the image
                      running on the nodes in the node pool.
                    type: string
                  nodeImageName:
                    description: Deprecated. Use nodeSourceDetails instead. If you
                      specify values for both, this value is ignored. The name of
                      the image running on the nodes in the node pool. Cannot be used
                      when node_image_id is specified.
                    type: string
                  nodeMetadata:
                    additionalProperties:
                      type: string
                    description: (Updatable) A list of key/value pairs to add to each
                      underlying Oracle Cloud Infrastructure instance in the node
                      pool on launch.
                    type: object
                  nodePoolCyclingDetails:
                    description: (Updatable) Node Pool Cycling Details
                    items:
                      properties:
                        isNodeCyclingEnabled:
                          description: (Updatable) If nodes in the nodepool will be
                            cycled to have new changes.
                          type: boolean
                        maximumSurge:
                          description: (Updatable) Maximum additional new compute
                            instances that would be temporarily created and added
                            to nodepool during the cycling nodepool process. OKE supports
                            both integer and percentage input. Defaults to 1, Ranges
                            from 0 to Nodepool size or 0% to 100%
                          type: string
                        maximumUnavailable:
                          description: (Updatable) Maximum active nodes that would
                            be terminated from nodepool during the cycling nodepool
                            process. OKE supports both integer and percentage input.
                            Defaults to 0, Ranges from 0 to Nodepool size or 0% to
                            100%
                          type: string
                      type: object
                    type: array
                  nodeShape:
                    description: (Updatable) The name of the node shape of the nodes
                      in the node pool.
                    type: string
                  nodeShapeConfig:
                    description: (Updatable) Specify the configuration of the shape
                      to launch nodes in the node pool.
                    items:
                      properties:
                        memoryInGbs:
                          description: (Updatable) The total amount of memory available
                            to each node, in gigabytes.
                          type: number
                        ocpus:
                          description: (Updatable) The total number of OCPUs available
                            to each node in the node pool. See here for details.
                          type: number
                      type: object
                    type: array
                  nodeSourceDetails:
                    description: (Updatable) Specify the source to use to launch nodes
                      in the node pool. Currently, image is the only supported source.
                    items:
                      properties:
                        bootVolumeSizeInGbs:
                          description: (Updatable) The size of the boot volume in
                            GBs. Minimum value is 50 GB. See here for max custom boot
                            volume sizing and OS-specific requirements.
                          type: string
                        imageId:
                          description: (Updatable) The OCID of the image used to boot
                            the node.
                          type: string
                        sourceType:
                          description: (Updatable) The source type for the node. Use
                            IMAGE when specifying an OCID of an image.
                          type: string
                      required:
                      - imageId
                      - sourceType
                      type: object
                    type: array
                  quantityPerSubnet:
                    description: (Updatable) Optional, default to 1. The number of
                      nodes to create in each subnet specified in subnetIds property.
                      When used, subnetIds is required. This property is deprecated,
                      use nodeConfigDetails instead.
                    type: number
                  sshPublicKey:
                    description: (Updatable) The SSH public key on each node in the
                      node pool on launch.
                    type: string
                  subnetIds:
                    description: (Updatable) The OCIDs of the subnets in which to
                      place nodes for this node pool. When used, quantityPerSubnet
                      can be provided. This property is deprecated, use nodeConfigDetails.
                      Exactly one of the subnetIds or nodeConfigDetails properties
                      must be specified.
                    items:
                      type: string
                    type: array
                required:
                - name
                - nodeShape
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: NodePoolStatus defines the observed state of NodePool.
            properties:
              atProvider:
                properties:
                  id:
                    description: The OCID of the node pool.
                    type: string
                  lifecycleDetails:
                    description: Details about the state of the nodepool.
                    type: string
                  nodeSource:
                    description: Deprecated. see nodeSourceDetails. Source running
                      on the nodes in the node pool.
                    items:
                      properties:
                        imageId:
                          description: (Updatable) The OCID of the image used to boot
                            the node.
                          type: string
                        sourceName:
                          description: The user-friendly name of the entity corresponding
                            to the OCID.
                          type: string
                        sourceType:
                          description: (Updatable) The source type for the node. Use
                            IMAGE when specifying an OCID of an image.
                          type: string
                      type: object
                    type: array
                  nodes:
                    description: The nodes in the node pool.
                    items:
                      properties:
                        availabilityDomain:
                          description: '(Updatable) The availability domain in which
                            to place nodes. Example: Uocm:PHX-AD-1'
                          type: string
                        definedTags:
                          additionalProperties:
                            type: string
                          description: '(Updatable) Defined tags for this resource.
                            Each key is predefined and scoped to a namespace. For
                            more information, see Resource Tags. Example: {"Operations.CostCenter":
                            "42"}'
                          type: object
                        error:
                          description: An error that may be associated with the node.
                          items:
                            properties:
                              code:
                                description: A short error code that defines the upstream
                                  error, meant for programmatic parsing. See API Errors.
                                type: string
                              message:
                                description: A human-readable error string of the
                                  upstream error.
                                type: string
                              status:
                                description: The status of the HTTP response encountered
                                  in the upstream error.
                                type: string
                            type: object
                          type: array
                        faultDomain:
                          description: The fault domain of this node.
                          type: string
                        freeformTags:
                          additionalProperties:
                            type: string
                          description: '(Updatable) Free-form tags for this resource.
                            Each tag is a simple key-value pair with no predefined
                            name, type, or namespace. For more information, see Resource
                            Tags. Example: {"Department": "Finance"}'
                          type: object
                        id:
                          description: The OCID of the node pool.
                          type: string
                        kubernetesVersion:
                          description: (Updatable) The version of Kubernetes to install
                            on the nodes in the node pool.
                          type: string
                        lifecycleDetails:
                          description: Details about the state of the nodepool.
                          type: string
                        name:
                          description: (Updatable) The name of the node pool. Avoid
                            entering confidential information.
                          type: string
                        nodePoolId:
                          description: The OCID of the node pool to which this node
                            belongs.
                          type: string
                        privateIp:
                          description: The private IP address of this node.
                          type: string
                        publicIp:
                          description: The public IP address of this node.
                          type: string
                        state:
                          description: The state of the node.
                          type: string
                        subnetId:
                          description: (Updatable) The OCID of the subnet in which
                            to place nodes.
                          type: string
                      type: object
                    type: array
                  state:
                    description: The state of the node.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
