---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: volumes.blockstorage.oci.upbound.io
spec:
  group: blockstorage.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: Volume
    listKind: VolumeList
    plural: volumes
    singular: volume
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Volume is the Schema for the Volumes API. Provides the Volume
          resource in Oracle Cloud Infrastructure Core service
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VolumeSpec defines the desired state of Volume
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autotunePolicies:
                    description: (Updatable) The list of autotune policies to be enabled
                      for this volume.
                    items:
                      properties:
                        autotuneType:
                          description: (Updatable) This specifies the type of autotunes
                            supported by OCI.
                          type: string
                        maxVpusPerGb:
                          description: (Updatable) This will be the maximum VPUs/GB
                            performance level that the volume will be auto-tuned temporarily
                            based on performance monitoring.
                          type: string
                      type: object
                    type: array
                  availabilityDomain:
                    description: 'The availability domain of the volume. Omissible
                      for cloning a volume. The new volume will be created in the
                      availability domain of the source volume.  Example: Uocm:PHX-AD-1'
                    type: string
                  backupPolicyId:
                    description: If provided, specifies the ID of the volume backup
                      policy to assign to the newly created volume. If omitted, no
                      policy will be assigned. This field is deprecated. Use the oci_core_volume_backup_policy_assignments
                      instead to assign a backup policy to a volume.
                    type: string
                  blockVolumeReplicas:
                    description: (Updatable) The list of block volume replicas to
                      be enabled for this volume in the specified destination availability
                      domains.
                    items:
                      properties:
                        availabilityDomain:
                          description: '(Updatable) The availability domain of the
                            block volume replica.  Example: Uocm:PHX-AD-1'
                          type: string
                        displayName:
                          description: (Updatable) A user-friendly name. Does not
                            have to be unique, and it's changeable. Avoid entering
                            confidential information.
                          type: string
                        xrrKmsKeyId:
                          description: (Updatable) The OCID of the Vault service key
                            which is the master encryption key for the cross region
                            block volume replicas, which will be used in the destination
                            region to encrypt the block volume replica's encryption
                            keys. For more information about the Vault service and
                            encryption keys, see Overview of Vault service and Using
                            Keys.
                          type: string
                      type: object
                    type: array
                  blockVolumeReplicasDeletion:
                    type: boolean
                  clusterPlacementGroupId:
                    description: The clusterPlacementGroup Id of the volume for volume
                      placement.
                    type: string
                  compartmentId:
                    description: (Updatable) The OCID of the compartment that contains
                      the volume.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.  Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  displayName:
                    description: (Updatable) A user-friendly name. Does not have to
                      be unique, and it's changeable. Avoid entering confidential
                      information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.  Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  isAutoTuneEnabled:
                    description: (Updatable) Specifies whether the auto-tune performance
                      is enabled for this volume. This field is deprecated. Use the
                      DetachedVolumeAutotunePolicy instead to enable the volume for
                      detached autotune.
                    type: boolean
                  isReservationsEnabled:
                    description: (Updatable) Reservations-enabled is a boolean field
                      that allows to enable PR (Persistent Reservation) on a volume.
                    type: boolean
                  kmsKeyId:
                    description: (Updatable) The OCID of the Vault service key to
                      assign as the master encryption key for the volume.
                    type: string
                  sizeInGbs:
                    description: (Updatable) The size of the volume in GBs.
                    type: string
                  sizeInMbs:
                    description: The size of the volume in MBs. The value must be
                      a multiple of 1024. This field is deprecated. Use sizeInGBs
                      instead.
                    type: string
                  sourceDetails:
                    description: Specifies the volume source details for a new Block
                      volume. The volume source is either another Block volume in
                      the same Availability Domain or a Block volume backup. This
                      is an optional field. If not specified or set to null, the new
                      Block volume will be empty. When specified, the new Block volume
                      will contain data from the source volume or backup.
                    items:
                      properties:
                        changeBlockSizeInBytes:
                          description: (Applicable when type=volumeBackupDelta) Block
                            size in bytes to be considered while performing volume
                            restore. The value must be a power of 2; ranging from
                            4KB (4096 bytes) to 1MB (1048576 bytes). If omitted, defaults
                            to 4,096 bytes (4 KiB).
                          type: string
                        firstBackupId:
                          description: The OCID of the first volume backup.
                          type: string
                        id:
                          description: The OCID of the block volume replica.
                          type: string
                        secondBackupId:
                          description: The OCID of the second volume backup.
                          type: string
                        type:
                          description: 'The type can be one of these values: blockVolumeReplica,
                            volume, volumeBackup, volumeBackupDelta'
                          type: string
                      type: object
                    type: array
                  volumeBackupId:
                    description: The OCID of the volume backup from which the data
                      should be restored on the newly created volume. This field is
                      deprecated. Use the sourceDetails field instead to specify the
                      backup for the volume.
                    type: string
                  vpusPerGb:
                    description: (Updatable) The number of volume performance units
                      (VPUs) that will be applied to this volume per GB, representing
                      the Block Volume service's elastic performance options. See
                      Block Volume Performance Levels for more information.
                    type: string
                  xrcKmsKeyId:
                    description: The OCID of the Vault service key which is the master
                      encryption key for the block volume cross region backups, which
                      will be used in the destination region to encrypt the backup's
                      encryption keys. For more information about the Vault service
                      and encryption keys, see Overview of Vault service and Using
                      Keys.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autotunePolicies:
                    description: (Updatable) The list of autotune policies to be enabled
                      for this volume.
                    items:
                      properties:
                        autotuneType:
                          description: (Updatable) This specifies the type of autotunes
                            supported by OCI.
                          type: string
                        maxVpusPerGb:
                          description: (Updatable) This will be the maximum VPUs/GB
                            performance level that the volume will be auto-tuned temporarily
                            based on performance monitoring.
                          type: string
                      type: object
                    type: array
                  availabilityDomain:
                    description: 'The availability domain of the volume. Omissible
                      for cloning a volume. The new volume will be created in the
                      availability domain of the source volume.  Example: Uocm:PHX-AD-1'
                    type: string
                  backupPolicyId:
                    description: If provided, specifies the ID of the volume backup
                      policy to assign to the newly created volume. If omitted, no
                      policy will be assigned. This field is deprecated. Use the oci_core_volume_backup_policy_assignments
                      instead to assign a backup policy to a volume.
                    type: string
                  blockVolumeReplicas:
                    description: (Updatable) The list of block volume replicas to
                      be enabled for this volume in the specified destination availability
                      domains.
                    items:
                      properties:
                        availabilityDomain:
                          description: '(Updatable) The availability domain of the
                            block volume replica.  Example: Uocm:PHX-AD-1'
                          type: string
                        displayName:
                          description: (Updatable) A user-friendly name. Does not
                            have to be unique, and it's changeable. Avoid entering
                            confidential information.
                          type: string
                        xrrKmsKeyId:
                          description: (Updatable) The OCID of the Vault service key
                            which is the master encryption key for the cross region
                            block volume replicas, which will be used in the destination
                            region to encrypt the block volume replica's encryption
                            keys. For more information about the Vault service and
                            encryption keys, see Overview of Vault service and Using
                            Keys.
                          type: string
                      type: object
                    type: array
                  blockVolumeReplicasDeletion:
                    type: boolean
                  clusterPlacementGroupId:
                    description: The clusterPlacementGroup Id of the volume for volume
                      placement.
                    type: string
                  compartmentId:
                    description: (Updatable) The OCID of the compartment that contains
                      the volume.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.  Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  displayName:
                    description: (Updatable) A user-friendly name. Does not have to
                      be unique, and it's changeable. Avoid entering confidential
                      information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.  Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  isAutoTuneEnabled:
                    description: (Updatable) Specifies whether the auto-tune performance
                      is enabled for this volume. This field is deprecated. Use the
                      DetachedVolumeAutotunePolicy instead to enable the volume for
                      detached autotune.
                    type: boolean
                  isReservationsEnabled:
                    description: (Updatable) Reservations-enabled is a boolean field
                      that allows to enable PR (Persistent Reservation) on a volume.
                    type: boolean
                  kmsKeyId:
                    description: (Updatable) The OCID of the Vault service key to
                      assign as the master encryption key for the volume.
                    type: string
                  sizeInGbs:
                    description: (Updatable) The size of the volume in GBs.
                    type: string
                  sizeInMbs:
                    description: The size of the volume in MBs. The value must be
                      a multiple of 1024. This field is deprecated. Use sizeInGBs
                      instead.
                    type: string
                  sourceDetails:
                    description: Specifies the volume source details for a new Block
                      volume. The volume source is either another Block volume in
                      the same Availability Domain or a Block volume backup. This
                      is an optional field. If not specified or set to null, the new
                      Block volume will be empty. When specified, the new Block volume
                      will contain data from the source volume or backup.
                    items:
                      properties:
                        changeBlockSizeInBytes:
                          description: (Applicable when type=volumeBackupDelta) Block
                            size in bytes to be considered while performing volume
                            restore. The value must be a power of 2; ranging from
                            4KB (4096 bytes) to 1MB (1048576 bytes). If omitted, defaults
                            to 4,096 bytes (4 KiB).
                          type: string
                        firstBackupId:
                          description: The OCID of the first volume backup.
                          type: string
                        id:
                          description: The OCID of the block volume replica.
                          type: string
                        secondBackupId:
                          description: The OCID of the second volume backup.
                          type: string
                        type:
                          description: 'The type can be one of these values: blockVolumeReplica,
                            volume, volumeBackup, volumeBackupDelta'
                          type: string
                      type: object
                    type: array
                  volumeBackupId:
                    description: The OCID of the volume backup from which the data
                      should be restored on the newly created volume. This field is
                      deprecated. Use the sourceDetails field instead to specify the
                      backup for the volume.
                    type: string
                  vpusPerGb:
                    description: (Updatable) The number of volume performance units
                      (VPUs) that will be applied to this volume per GB, representing
                      the Block Volume service's elastic performance options. See
                      Block Volume Performance Levels for more information.
                    type: string
                  xrcKmsKeyId:
                    description: The OCID of the Vault service key which is the master
                      encryption key for the block volume cross region backups, which
                      will be used in the destination region to encrypt the backup's
                      encryption keys. For more information about the Vault service
                      and encryption keys, see Overview of Vault service and Using
                      Keys.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.availabilityDomain is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.availabilityDomain)
                || (has(self.initProvider) && has(self.initProvider.availabilityDomain))'
          status:
            description: VolumeStatus defines the observed state of Volume.
            properties:
              atProvider:
                properties:
                  autoTunedVpusPerGb:
                    description: The number of Volume Performance Units per GB that
                      this volume is effectively tuned to.
                    type: string
                  autotunePolicies:
                    description: (Updatable) The list of autotune policies to be enabled
                      for this volume.
                    items:
                      properties:
                        autotuneType:
                          description: (Updatable) This specifies the type of autotunes
                            supported by OCI.
                          type: string
                        maxVpusPerGb:
                          description: (Updatable) This will be the maximum VPUs/GB
                            performance level that the volume will be auto-tuned temporarily
                            based on performance monitoring.
                          type: string
                      type: object
                    type: array
                  availabilityDomain:
                    description: 'The availability domain of the volume. Omissible
                      for cloning a volume. The new volume will be created in the
                      availability domain of the source volume.  Example: Uocm:PHX-AD-1'
                    type: string
                  backupPolicyId:
                    description: If provided, specifies the ID of the volume backup
                      policy to assign to the newly created volume. If omitted, no
                      policy will be assigned. This field is deprecated. Use the oci_core_volume_backup_policy_assignments
                      instead to assign a backup policy to a volume.
                    type: string
                  blockVolumeReplicas:
                    description: (Updatable) The list of block volume replicas to
                      be enabled for this volume in the specified destination availability
                      domains.
                    items:
                      properties:
                        availabilityDomain:
                          description: '(Updatable) The availability domain of the
                            block volume replica.  Example: Uocm:PHX-AD-1'
                          type: string
                        blockVolumeReplicaId:
                          description: The block volume replica's Oracle ID (OCID).
                          type: string
                        displayName:
                          description: (Updatable) A user-friendly name. Does not
                            have to be unique, and it's changeable. Avoid entering
                            confidential information.
                          type: string
                        kmsKeyId:
                          description: The OCID of the Vault service key to assign
                            as the master encryption key for the block volume replica,
                            see Overview of Vault service and Using Keys.
                          type: string
                        xrrKmsKeyId:
                          description: (Updatable) The OCID of the Vault service key
                            which is the master encryption key for the cross region
                            block volume replicas, which will be used in the destination
                            region to encrypt the block volume replica's encryption
                            keys. For more information about the Vault service and
                            encryption keys, see Overview of Vault service and Using
                            Keys.
                          type: string
                      type: object
                    type: array
                  blockVolumeReplicasDeletion:
                    type: boolean
                  clusterPlacementGroupId:
                    description: The clusterPlacementGroup Id of the volume for volume
                      placement.
                    type: string
                  compartmentId:
                    description: (Updatable) The OCID of the compartment that contains
                      the volume.
                    type: string
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags.  Example: {"Operations.CostCenter": "42"}'
                    type: object
                    x-kubernetes-map-type: granular
                  displayName:
                    description: (Updatable) A user-friendly name. Does not have to
                      be unique, and it's changeable. Avoid entering confidential
                      information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags.  Example:
                      {"Department": "Finance"}'
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    description: The OCID of the volume.
                    type: string
                  isAutoTuneEnabled:
                    description: (Updatable) Specifies whether the auto-tune performance
                      is enabled for this volume. This field is deprecated. Use the
                      DetachedVolumeAutotunePolicy instead to enable the volume for
                      detached autotune.
                    type: boolean
                  isHydrated:
                    description: Specifies whether the cloned volume's data has finished
                      copying from the source volume or backup.
                    type: boolean
                  isReservationsEnabled:
                    description: (Updatable) Reservations-enabled is a boolean field
                      that allows to enable PR (Persistent Reservation) on a volume.
                    type: boolean
                  kmsKeyId:
                    description: (Updatable) The OCID of the Vault service key to
                      assign as the master encryption key for the volume.
                    type: string
                  sizeInGbs:
                    description: (Updatable) The size of the volume in GBs.
                    type: string
                  sizeInMbs:
                    description: The size of the volume in MBs. The value must be
                      a multiple of 1024. This field is deprecated. Use sizeInGBs
                      instead.
                    type: string
                  sourceDetails:
                    description: Specifies the volume source details for a new Block
                      volume. The volume source is either another Block volume in
                      the same Availability Domain or a Block volume backup. This
                      is an optional field. If not specified or set to null, the new
                      Block volume will be empty. When specified, the new Block volume
                      will contain data from the source volume or backup.
                    items:
                      properties:
                        changeBlockSizeInBytes:
                          description: (Applicable when type=volumeBackupDelta) Block
                            size in bytes to be considered while performing volume
                            restore. The value must be a power of 2; ranging from
                            4KB (4096 bytes) to 1MB (1048576 bytes). If omitted, defaults
                            to 4,096 bytes (4 KiB).
                          type: string
                        firstBackupId:
                          description: The OCID of the first volume backup.
                          type: string
                        id:
                          description: The OCID of the block volume replica.
                          type: string
                        secondBackupId:
                          description: The OCID of the second volume backup.
                          type: string
                        type:
                          description: 'The type can be one of these values: blockVolumeReplica,
                            volume, volumeBackup, volumeBackupDelta'
                          type: string
                      type: object
                    type: array
                  state:
                    description: The current state of a volume.
                    type: string
                  systemTags:
                    additionalProperties:
                      type: string
                    description: 'System tags for this resource. Each key is predefined
                      and scoped to a namespace. Example: {"foo-namespace.bar-key":
                      "value"}'
                    type: object
                    x-kubernetes-map-type: granular
                  timeCreated:
                    description: The date and time the volume was created. Format
                      defined by RFC3339.
                    type: string
                  volumeBackupId:
                    description: The OCID of the volume backup from which the data
                      should be restored on the newly created volume. This field is
                      deprecated. Use the sourceDetails field instead to specify the
                      backup for the volume.
                    type: string
                  volumeGroupId:
                    description: The OCID of the source volume group.
                    type: string
                  vpusPerGb:
                    description: (Updatable) The number of volume performance units
                      (VPUs) that will be applied to this volume per GB, representing
                      the Block Volume service's elastic performance options. See
                      Block Volume Performance Levels for more information.
                    type: string
                  xrcKmsKeyId:
                    description: The OCID of the Vault service key which is the master
                      encryption key for the block volume cross region backups, which
                      will be used in the destination region to encrypt the backup's
                      encryption keys. For more information about the Vault service
                      and encryption keys, see Overview of Vault service and Using
                      Keys.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
