//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backend) DeepCopyInto(out *Backend) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backend.
func (in *Backend) DeepCopy() *Backend {
	if in == nil {
		return nil
	}
	out := new(Backend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Backend) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendInitParameters) DeepCopyInto(out *BackendInitParameters) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsBackup != nil {
		in, out := &in.IsBackup, &out.IsBackup
		*out = new(bool)
		**out = **in
	}
	if in.IsDrain != nil {
		in, out := &in.IsDrain, &out.IsDrain
		*out = new(bool)
		**out = **in
	}
	if in.IsOffline != nil {
		in, out := &in.IsOffline, &out.IsOffline
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerIDRef != nil {
		in, out := &in.NetworkLoadBalancerIDRef, &out.NetworkLoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkLoadBalancerIDSelector != nil {
		in, out := &in.NetworkLoadBalancerIDSelector, &out.NetworkLoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendInitParameters.
func (in *BackendInitParameters) DeepCopy() *BackendInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendList) DeepCopyInto(out *BackendList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Backend, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendList.
func (in *BackendList) DeepCopy() *BackendList {
	if in == nil {
		return nil
	}
	out := new(BackendList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendObservation) DeepCopyInto(out *BackendObservation) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsBackup != nil {
		in, out := &in.IsBackup, &out.IsBackup
		*out = new(bool)
		**out = **in
	}
	if in.IsDrain != nil {
		in, out := &in.IsDrain, &out.IsDrain
		*out = new(bool)
		**out = **in
	}
	if in.IsOffline != nil {
		in, out := &in.IsOffline, &out.IsOffline
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendObservation.
func (in *BackendObservation) DeepCopy() *BackendObservation {
	if in == nil {
		return nil
	}
	out := new(BackendObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendParameters) DeepCopyInto(out *BackendParameters) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsBackup != nil {
		in, out := &in.IsBackup, &out.IsBackup
		*out = new(bool)
		**out = **in
	}
	if in.IsDrain != nil {
		in, out := &in.IsDrain, &out.IsDrain
		*out = new(bool)
		**out = **in
	}
	if in.IsOffline != nil {
		in, out := &in.IsOffline, &out.IsOffline
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerIDRef != nil {
		in, out := &in.NetworkLoadBalancerIDRef, &out.NetworkLoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkLoadBalancerIDSelector != nil {
		in, out := &in.NetworkLoadBalancerIDSelector, &out.NetworkLoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendParameters.
func (in *BackendParameters) DeepCopy() *BackendParameters {
	if in == nil {
		return nil
	}
	out := new(BackendParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSet) DeepCopyInto(out *BackendSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSet.
func (in *BackendSet) DeepCopy() *BackendSet {
	if in == nil {
		return nil
	}
	out := new(BackendSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSetInitParameters) DeepCopyInto(out *BackendSetInitParameters) {
	*out = *in
	if in.AreOperationallyActiveBackendsPreferred != nil {
		in, out := &in.AreOperationallyActiveBackendsPreferred, &out.AreOperationallyActiveBackendsPreferred
		*out = new(bool)
		**out = **in
	}
	if in.HealthChecker != nil {
		in, out := &in.HealthChecker, &out.HealthChecker
		*out = make([]HealthCheckerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsFailOpen != nil {
		in, out := &in.IsFailOpen, &out.IsFailOpen
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverEnabled != nil {
		in, out := &in.IsInstantFailoverEnabled, &out.IsInstantFailoverEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverTCPResetEnabled != nil {
		in, out := &in.IsInstantFailoverTCPResetEnabled, &out.IsInstantFailoverTCPResetEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPreserveSource != nil {
		in, out := &in.IsPreserveSource, &out.IsPreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerIDRef != nil {
		in, out := &in.NetworkLoadBalancerIDRef, &out.NetworkLoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkLoadBalancerIDSelector != nil {
		in, out := &in.NetworkLoadBalancerIDSelector, &out.NetworkLoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSetInitParameters.
func (in *BackendSetInitParameters) DeepCopy() *BackendSetInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendSetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSetList) DeepCopyInto(out *BackendSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackendSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSetList.
func (in *BackendSetList) DeepCopy() *BackendSetList {
	if in == nil {
		return nil
	}
	out := new(BackendSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSetObservation) DeepCopyInto(out *BackendSetObservation) {
	*out = *in
	if in.AreOperationallyActiveBackendsPreferred != nil {
		in, out := &in.AreOperationallyActiveBackendsPreferred, &out.AreOperationallyActiveBackendsPreferred
		*out = new(bool)
		**out = **in
	}
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]BackendsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecker != nil {
		in, out := &in.HealthChecker, &out.HealthChecker
		*out = make([]HealthCheckerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsFailOpen != nil {
		in, out := &in.IsFailOpen, &out.IsFailOpen
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverEnabled != nil {
		in, out := &in.IsInstantFailoverEnabled, &out.IsInstantFailoverEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverTCPResetEnabled != nil {
		in, out := &in.IsInstantFailoverTCPResetEnabled, &out.IsInstantFailoverTCPResetEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPreserveSource != nil {
		in, out := &in.IsPreserveSource, &out.IsPreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSetObservation.
func (in *BackendSetObservation) DeepCopy() *BackendSetObservation {
	if in == nil {
		return nil
	}
	out := new(BackendSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSetParameters) DeepCopyInto(out *BackendSetParameters) {
	*out = *in
	if in.AreOperationallyActiveBackendsPreferred != nil {
		in, out := &in.AreOperationallyActiveBackendsPreferred, &out.AreOperationallyActiveBackendsPreferred
		*out = new(bool)
		**out = **in
	}
	if in.HealthChecker != nil {
		in, out := &in.HealthChecker, &out.HealthChecker
		*out = make([]HealthCheckerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsFailOpen != nil {
		in, out := &in.IsFailOpen, &out.IsFailOpen
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverEnabled != nil {
		in, out := &in.IsInstantFailoverEnabled, &out.IsInstantFailoverEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverTCPResetEnabled != nil {
		in, out := &in.IsInstantFailoverTCPResetEnabled, &out.IsInstantFailoverTCPResetEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPreserveSource != nil {
		in, out := &in.IsPreserveSource, &out.IsPreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerIDRef != nil {
		in, out := &in.NetworkLoadBalancerIDRef, &out.NetworkLoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkLoadBalancerIDSelector != nil {
		in, out := &in.NetworkLoadBalancerIDSelector, &out.NetworkLoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSetParameters.
func (in *BackendSetParameters) DeepCopy() *BackendSetParameters {
	if in == nil {
		return nil
	}
	out := new(BackendSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSetSpec) DeepCopyInto(out *BackendSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSetSpec.
func (in *BackendSetSpec) DeepCopy() *BackendSetSpec {
	if in == nil {
		return nil
	}
	out := new(BackendSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSetStatus) DeepCopyInto(out *BackendSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSetStatus.
func (in *BackendSetStatus) DeepCopy() *BackendSetStatus {
	if in == nil {
		return nil
	}
	out := new(BackendSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSpec) DeepCopyInto(out *BackendSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSpec.
func (in *BackendSpec) DeepCopy() *BackendSpec {
	if in == nil {
		return nil
	}
	out := new(BackendSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendStatus) DeepCopyInto(out *BackendStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendStatus.
func (in *BackendStatus) DeepCopy() *BackendStatus {
	if in == nil {
		return nil
	}
	out := new(BackendStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendsInitParameters) DeepCopyInto(out *BackendsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendsInitParameters.
func (in *BackendsInitParameters) DeepCopy() *BackendsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendsObservation) DeepCopyInto(out *BackendsObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsBackup != nil {
		in, out := &in.IsBackup, &out.IsBackup
		*out = new(bool)
		**out = **in
	}
	if in.IsDrain != nil {
		in, out := &in.IsDrain, &out.IsDrain
		*out = new(bool)
		**out = **in
	}
	if in.IsOffline != nil {
		in, out := &in.IsOffline, &out.IsOffline
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendsObservation.
func (in *BackendsObservation) DeepCopy() *BackendsObservation {
	if in == nil {
		return nil
	}
	out := new(BackendsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendsParameters) DeepCopyInto(out *BackendsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendsParameters.
func (in *BackendsParameters) DeepCopy() *BackendsParameters {
	if in == nil {
		return nil
	}
	out := new(BackendsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSInitParameters) DeepCopyInto(out *DNSInitParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.QueryClass != nil {
		in, out := &in.QueryClass, &out.QueryClass
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.Rcodes != nil {
		in, out := &in.Rcodes, &out.Rcodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransportProtocol != nil {
		in, out := &in.TransportProtocol, &out.TransportProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSInitParameters.
func (in *DNSInitParameters) DeepCopy() *DNSInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSObservation) DeepCopyInto(out *DNSObservation) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.QueryClass != nil {
		in, out := &in.QueryClass, &out.QueryClass
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.Rcodes != nil {
		in, out := &in.Rcodes, &out.Rcodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransportProtocol != nil {
		in, out := &in.TransportProtocol, &out.TransportProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSObservation.
func (in *DNSObservation) DeepCopy() *DNSObservation {
	if in == nil {
		return nil
	}
	out := new(DNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSParameters) DeepCopyInto(out *DNSParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.QueryClass != nil {
		in, out := &in.QueryClass, &out.QueryClass
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.Rcodes != nil {
		in, out := &in.Rcodes, &out.Rcodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransportProtocol != nil {
		in, out := &in.TransportProtocol, &out.TransportProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSParameters.
func (in *DNSParameters) DeepCopy() *DNSParameters {
	if in == nil {
		return nil
	}
	out := new(DNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckerDNSInitParameters) DeepCopyInto(out *HealthCheckerDNSInitParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.QueryClass != nil {
		in, out := &in.QueryClass, &out.QueryClass
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.Rcodes != nil {
		in, out := &in.Rcodes, &out.Rcodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransportProtocol != nil {
		in, out := &in.TransportProtocol, &out.TransportProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckerDNSInitParameters.
func (in *HealthCheckerDNSInitParameters) DeepCopy() *HealthCheckerDNSInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckerDNSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckerDNSObservation) DeepCopyInto(out *HealthCheckerDNSObservation) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.QueryClass != nil {
		in, out := &in.QueryClass, &out.QueryClass
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.Rcodes != nil {
		in, out := &in.Rcodes, &out.Rcodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransportProtocol != nil {
		in, out := &in.TransportProtocol, &out.TransportProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckerDNSObservation.
func (in *HealthCheckerDNSObservation) DeepCopy() *HealthCheckerDNSObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckerDNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckerDNSParameters) DeepCopyInto(out *HealthCheckerDNSParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.QueryClass != nil {
		in, out := &in.QueryClass, &out.QueryClass
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.Rcodes != nil {
		in, out := &in.Rcodes, &out.Rcodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransportProtocol != nil {
		in, out := &in.TransportProtocol, &out.TransportProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckerDNSParameters.
func (in *HealthCheckerDNSParameters) DeepCopy() *HealthCheckerDNSParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckerDNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckerInitParameters) DeepCopyInto(out *HealthCheckerInitParameters) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntervalInMillis != nil {
		in, out := &in.IntervalInMillis, &out.IntervalInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestData != nil {
		in, out := &in.RequestData, &out.RequestData
		*out = new(string)
		**out = **in
	}
	if in.ResponseBodyRegex != nil {
		in, out := &in.ResponseBodyRegex, &out.ResponseBodyRegex
		*out = new(string)
		**out = **in
	}
	if in.ResponseData != nil {
		in, out := &in.ResponseData, &out.ResponseData
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.ReturnCode != nil {
		in, out := &in.ReturnCode, &out.ReturnCode
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutInMillis != nil {
		in, out := &in.TimeoutInMillis, &out.TimeoutInMillis
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckerInitParameters.
func (in *HealthCheckerInitParameters) DeepCopy() *HealthCheckerInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckerObservation) DeepCopyInto(out *HealthCheckerObservation) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntervalInMillis != nil {
		in, out := &in.IntervalInMillis, &out.IntervalInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestData != nil {
		in, out := &in.RequestData, &out.RequestData
		*out = new(string)
		**out = **in
	}
	if in.ResponseBodyRegex != nil {
		in, out := &in.ResponseBodyRegex, &out.ResponseBodyRegex
		*out = new(string)
		**out = **in
	}
	if in.ResponseData != nil {
		in, out := &in.ResponseData, &out.ResponseData
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.ReturnCode != nil {
		in, out := &in.ReturnCode, &out.ReturnCode
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutInMillis != nil {
		in, out := &in.TimeoutInMillis, &out.TimeoutInMillis
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckerObservation.
func (in *HealthCheckerObservation) DeepCopy() *HealthCheckerObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckerParameters) DeepCopyInto(out *HealthCheckerParameters) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntervalInMillis != nil {
		in, out := &in.IntervalInMillis, &out.IntervalInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestData != nil {
		in, out := &in.RequestData, &out.RequestData
		*out = new(string)
		**out = **in
	}
	if in.ResponseBodyRegex != nil {
		in, out := &in.ResponseBodyRegex, &out.ResponseBodyRegex
		*out = new(string)
		**out = **in
	}
	if in.ResponseData != nil {
		in, out := &in.ResponseData, &out.ResponseData
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.ReturnCode != nil {
		in, out := &in.ReturnCode, &out.ReturnCode
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutInMillis != nil {
		in, out := &in.TimeoutInMillis, &out.TimeoutInMillis
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckerParameters.
func (in *HealthCheckerParameters) DeepCopy() *HealthCheckerParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressesInitParameters) DeepCopyInto(out *IPAddressesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressesInitParameters.
func (in *IPAddressesInitParameters) DeepCopy() *IPAddressesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressesObservation) DeepCopyInto(out *IPAddressesObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.ReservedIP != nil {
		in, out := &in.ReservedIP, &out.ReservedIP
		*out = make([]ReservedIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressesObservation.
func (in *IPAddressesObservation) DeepCopy() *IPAddressesObservation {
	if in == nil {
		return nil
	}
	out := new(IPAddressesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressesParameters) DeepCopyInto(out *IPAddressesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressesParameters.
func (in *IPAddressesParameters) DeepCopy() *IPAddressesParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Listener) DeepCopyInto(out *Listener) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Listener.
func (in *Listener) DeepCopy() *Listener {
	if in == nil {
		return nil
	}
	out := new(Listener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Listener) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerInitParameters) DeepCopyInto(out *ListenerInitParameters) {
	*out = *in
	if in.DefaultBackendSetName != nil {
		in, out := &in.DefaultBackendSetName, &out.DefaultBackendSetName
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsPpv2Enabled != nil {
		in, out := &in.IsPpv2Enabled, &out.IsPpv2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.L3IpIdleTimeout != nil {
		in, out := &in.L3IpIdleTimeout, &out.L3IpIdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerIDRef != nil {
		in, out := &in.NetworkLoadBalancerIDRef, &out.NetworkLoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkLoadBalancerIDSelector != nil {
		in, out := &in.NetworkLoadBalancerIDSelector, &out.NetworkLoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.TCPIdleTimeout != nil {
		in, out := &in.TCPIdleTimeout, &out.TCPIdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.UDPIdleTimeout != nil {
		in, out := &in.UDPIdleTimeout, &out.UDPIdleTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerInitParameters.
func (in *ListenerInitParameters) DeepCopy() *ListenerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerList) DeepCopyInto(out *ListenerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Listener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerList.
func (in *ListenerList) DeepCopy() *ListenerList {
	if in == nil {
		return nil
	}
	out := new(ListenerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerObservation) DeepCopyInto(out *ListenerObservation) {
	*out = *in
	if in.DefaultBackendSetName != nil {
		in, out := &in.DefaultBackendSetName, &out.DefaultBackendSetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsPpv2Enabled != nil {
		in, out := &in.IsPpv2Enabled, &out.IsPpv2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.L3IpIdleTimeout != nil {
		in, out := &in.L3IpIdleTimeout, &out.L3IpIdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.TCPIdleTimeout != nil {
		in, out := &in.TCPIdleTimeout, &out.TCPIdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.UDPIdleTimeout != nil {
		in, out := &in.UDPIdleTimeout, &out.UDPIdleTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerObservation.
func (in *ListenerObservation) DeepCopy() *ListenerObservation {
	if in == nil {
		return nil
	}
	out := new(ListenerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerParameters) DeepCopyInto(out *ListenerParameters) {
	*out = *in
	if in.DefaultBackendSetName != nil {
		in, out := &in.DefaultBackendSetName, &out.DefaultBackendSetName
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsPpv2Enabled != nil {
		in, out := &in.IsPpv2Enabled, &out.IsPpv2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.L3IpIdleTimeout != nil {
		in, out := &in.L3IpIdleTimeout, &out.L3IpIdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerIDRef != nil {
		in, out := &in.NetworkLoadBalancerIDRef, &out.NetworkLoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkLoadBalancerIDSelector != nil {
		in, out := &in.NetworkLoadBalancerIDSelector, &out.NetworkLoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.TCPIdleTimeout != nil {
		in, out := &in.TCPIdleTimeout, &out.TCPIdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.UDPIdleTimeout != nil {
		in, out := &in.UDPIdleTimeout, &out.UDPIdleTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerParameters.
func (in *ListenerParameters) DeepCopy() *ListenerParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpec) DeepCopyInto(out *ListenerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpec.
func (in *ListenerSpec) DeepCopy() *ListenerSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerStatus) DeepCopyInto(out *ListenerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerStatus.
func (in *ListenerStatus) DeepCopy() *ListenerStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancer) DeepCopyInto(out *NetworkLoadBalancer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancer.
func (in *NetworkLoadBalancer) DeepCopy() *NetworkLoadBalancer {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkLoadBalancer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancerInitParameters) DeepCopyInto(out *NetworkLoadBalancerInitParameters) {
	*out = *in
	if in.AssignedIPv6 != nil {
		in, out := &in.AssignedIPv6, &out.AssignedIPv6
		*out = new(string)
		**out = **in
	}
	if in.AssignedPrivateIPv4 != nil {
		in, out := &in.AssignedPrivateIPv4, &out.AssignedPrivateIPv4
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsPreserveSourceDestination != nil {
		in, out := &in.IsPreserveSourceDestination, &out.IsPreserveSourceDestination
		*out = new(bool)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricHashEnabled != nil {
		in, out := &in.IsSymmetricHashEnabled, &out.IsSymmetricHashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkSecurityGroupIds != nil {
		in, out := &in.NetworkSecurityGroupIds, &out.NetworkSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NlbIPVersion != nil {
		in, out := &in.NlbIPVersion, &out.NlbIPVersion
		*out = new(string)
		**out = **in
	}
	if in.ReservedIps != nil {
		in, out := &in.ReservedIps, &out.ReservedIps
		*out = make([]ReservedIpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIpv6Cidr != nil {
		in, out := &in.SubnetIpv6Cidr, &out.SubnetIpv6Cidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancerInitParameters.
func (in *NetworkLoadBalancerInitParameters) DeepCopy() *NetworkLoadBalancerInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancerList) DeepCopyInto(out *NetworkLoadBalancerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkLoadBalancer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancerList.
func (in *NetworkLoadBalancerList) DeepCopy() *NetworkLoadBalancerList {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkLoadBalancerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancerObservation) DeepCopyInto(out *NetworkLoadBalancerObservation) {
	*out = *in
	if in.AssignedIPv6 != nil {
		in, out := &in.AssignedIPv6, &out.AssignedIPv6
		*out = new(string)
		**out = **in
	}
	if in.AssignedPrivateIPv4 != nil {
		in, out := &in.AssignedPrivateIPv4, &out.AssignedPrivateIPv4
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]IPAddressesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPreserveSourceDestination != nil {
		in, out := &in.IsPreserveSourceDestination, &out.IsPreserveSourceDestination
		*out = new(bool)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricHashEnabled != nil {
		in, out := &in.IsSymmetricHashEnabled, &out.IsSymmetricHashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityGroupIds != nil {
		in, out := &in.NetworkSecurityGroupIds, &out.NetworkSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NlbIPVersion != nil {
		in, out := &in.NlbIPVersion, &out.NlbIPVersion
		*out = new(string)
		**out = **in
	}
	if in.ReservedIps != nil {
		in, out := &in.ReservedIps, &out.ReservedIps
		*out = make([]ReservedIpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIpv6Cidr != nil {
		in, out := &in.SubnetIpv6Cidr, &out.SubnetIpv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancerObservation.
func (in *NetworkLoadBalancerObservation) DeepCopy() *NetworkLoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancerParameters) DeepCopyInto(out *NetworkLoadBalancerParameters) {
	*out = *in
	if in.AssignedIPv6 != nil {
		in, out := &in.AssignedIPv6, &out.AssignedIPv6
		*out = new(string)
		**out = **in
	}
	if in.AssignedPrivateIPv4 != nil {
		in, out := &in.AssignedPrivateIPv4, &out.AssignedPrivateIPv4
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsPreserveSourceDestination != nil {
		in, out := &in.IsPreserveSourceDestination, &out.IsPreserveSourceDestination
		*out = new(bool)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricHashEnabled != nil {
		in, out := &in.IsSymmetricHashEnabled, &out.IsSymmetricHashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkSecurityGroupIds != nil {
		in, out := &in.NetworkSecurityGroupIds, &out.NetworkSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NlbIPVersion != nil {
		in, out := &in.NlbIPVersion, &out.NlbIPVersion
		*out = new(string)
		**out = **in
	}
	if in.ReservedIps != nil {
		in, out := &in.ReservedIps, &out.ReservedIps
		*out = make([]ReservedIpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIpv6Cidr != nil {
		in, out := &in.SubnetIpv6Cidr, &out.SubnetIpv6Cidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancerParameters.
func (in *NetworkLoadBalancerParameters) DeepCopy() *NetworkLoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancerSpec) DeepCopyInto(out *NetworkLoadBalancerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancerSpec.
func (in *NetworkLoadBalancerSpec) DeepCopy() *NetworkLoadBalancerSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancerStatus) DeepCopyInto(out *NetworkLoadBalancerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancerStatus.
func (in *NetworkLoadBalancerStatus) DeepCopy() *NetworkLoadBalancerStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnified) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnified) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnified.
func (in *NetworkLoadBalancersBackendSetsUnified) DeepCopy() *NetworkLoadBalancersBackendSetsUnified {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnified)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkLoadBalancersBackendSetsUnified) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedBackendsInitParameters) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedBackendsInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsBackup != nil {
		in, out := &in.IsBackup, &out.IsBackup
		*out = new(bool)
		**out = **in
	}
	if in.IsDrain != nil {
		in, out := &in.IsDrain, &out.IsDrain
		*out = new(bool)
		**out = **in
	}
	if in.IsOffline != nil {
		in, out := &in.IsOffline, &out.IsOffline
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedBackendsInitParameters.
func (in *NetworkLoadBalancersBackendSetsUnifiedBackendsInitParameters) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedBackendsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedBackendsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedBackendsObservation) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedBackendsObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsBackup != nil {
		in, out := &in.IsBackup, &out.IsBackup
		*out = new(bool)
		**out = **in
	}
	if in.IsDrain != nil {
		in, out := &in.IsDrain, &out.IsDrain
		*out = new(bool)
		**out = **in
	}
	if in.IsOffline != nil {
		in, out := &in.IsOffline, &out.IsOffline
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedBackendsObservation.
func (in *NetworkLoadBalancersBackendSetsUnifiedBackendsObservation) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedBackendsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedBackendsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedBackendsParameters) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedBackendsParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsBackup != nil {
		in, out := &in.IsBackup, &out.IsBackup
		*out = new(bool)
		**out = **in
	}
	if in.IsDrain != nil {
		in, out := &in.IsDrain, &out.IsDrain
		*out = new(bool)
		**out = **in
	}
	if in.IsOffline != nil {
		in, out := &in.IsOffline, &out.IsOffline
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedBackendsParameters.
func (in *NetworkLoadBalancersBackendSetsUnifiedBackendsParameters) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedBackendsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedBackendsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInitParameters) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInitParameters) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]HealthCheckerDNSInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntervalInMillis != nil {
		in, out := &in.IntervalInMillis, &out.IntervalInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestData != nil {
		in, out := &in.RequestData, &out.RequestData
		*out = new(string)
		**out = **in
	}
	if in.ResponseBodyRegex != nil {
		in, out := &in.ResponseBodyRegex, &out.ResponseBodyRegex
		*out = new(string)
		**out = **in
	}
	if in.ResponseData != nil {
		in, out := &in.ResponseData, &out.ResponseData
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.ReturnCode != nil {
		in, out := &in.ReturnCode, &out.ReturnCode
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutInMillis != nil {
		in, out := &in.TimeoutInMillis, &out.TimeoutInMillis
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInitParameters.
func (in *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInitParameters) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerObservation) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerObservation) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]HealthCheckerDNSObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntervalInMillis != nil {
		in, out := &in.IntervalInMillis, &out.IntervalInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestData != nil {
		in, out := &in.RequestData, &out.RequestData
		*out = new(string)
		**out = **in
	}
	if in.ResponseBodyRegex != nil {
		in, out := &in.ResponseBodyRegex, &out.ResponseBodyRegex
		*out = new(string)
		**out = **in
	}
	if in.ResponseData != nil {
		in, out := &in.ResponseData, &out.ResponseData
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.ReturnCode != nil {
		in, out := &in.ReturnCode, &out.ReturnCode
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutInMillis != nil {
		in, out := &in.TimeoutInMillis, &out.TimeoutInMillis
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedHealthCheckerObservation.
func (in *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerObservation) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerParameters) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerParameters) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]HealthCheckerDNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntervalInMillis != nil {
		in, out := &in.IntervalInMillis, &out.IntervalInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestData != nil {
		in, out := &in.RequestData, &out.RequestData
		*out = new(string)
		**out = **in
	}
	if in.ResponseBodyRegex != nil {
		in, out := &in.ResponseBodyRegex, &out.ResponseBodyRegex
		*out = new(string)
		**out = **in
	}
	if in.ResponseData != nil {
		in, out := &in.ResponseData, &out.ResponseData
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.ReturnCode != nil {
		in, out := &in.ReturnCode, &out.ReturnCode
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutInMillis != nil {
		in, out := &in.TimeoutInMillis, &out.TimeoutInMillis
		*out = new(float64)
		**out = **in
	}
	if in.URLPath != nil {
		in, out := &in.URLPath, &out.URLPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedHealthCheckerParameters.
func (in *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerParameters) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedHealthCheckerParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedHealthCheckerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedInitParameters) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedInitParameters) {
	*out = *in
	if in.AreOperationallyActiveBackendsPreferred != nil {
		in, out := &in.AreOperationallyActiveBackendsPreferred, &out.AreOperationallyActiveBackendsPreferred
		*out = new(bool)
		**out = **in
	}
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]NetworkLoadBalancersBackendSetsUnifiedBackendsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecker != nil {
		in, out := &in.HealthChecker, &out.HealthChecker
		*out = make([]NetworkLoadBalancersBackendSetsUnifiedHealthCheckerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsFailOpen != nil {
		in, out := &in.IsFailOpen, &out.IsFailOpen
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverEnabled != nil {
		in, out := &in.IsInstantFailoverEnabled, &out.IsInstantFailoverEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverTCPResetEnabled != nil {
		in, out := &in.IsInstantFailoverTCPResetEnabled, &out.IsInstantFailoverTCPResetEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPreserveSource != nil {
		in, out := &in.IsPreserveSource, &out.IsPreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerIDRef != nil {
		in, out := &in.NetworkLoadBalancerIDRef, &out.NetworkLoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkLoadBalancerIDSelector != nil {
		in, out := &in.NetworkLoadBalancerIDSelector, &out.NetworkLoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedInitParameters.
func (in *NetworkLoadBalancersBackendSetsUnifiedInitParameters) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedList) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkLoadBalancersBackendSetsUnified, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedList.
func (in *NetworkLoadBalancersBackendSetsUnifiedList) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedList {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkLoadBalancersBackendSetsUnifiedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedObservation) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedObservation) {
	*out = *in
	if in.AreOperationallyActiveBackendsPreferred != nil {
		in, out := &in.AreOperationallyActiveBackendsPreferred, &out.AreOperationallyActiveBackendsPreferred
		*out = new(bool)
		**out = **in
	}
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]NetworkLoadBalancersBackendSetsUnifiedBackendsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecker != nil {
		in, out := &in.HealthChecker, &out.HealthChecker
		*out = make([]NetworkLoadBalancersBackendSetsUnifiedHealthCheckerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsFailOpen != nil {
		in, out := &in.IsFailOpen, &out.IsFailOpen
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverEnabled != nil {
		in, out := &in.IsInstantFailoverEnabled, &out.IsInstantFailoverEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverTCPResetEnabled != nil {
		in, out := &in.IsInstantFailoverTCPResetEnabled, &out.IsInstantFailoverTCPResetEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPreserveSource != nil {
		in, out := &in.IsPreserveSource, &out.IsPreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedObservation.
func (in *NetworkLoadBalancersBackendSetsUnifiedObservation) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedParameters) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedParameters) {
	*out = *in
	if in.AreOperationallyActiveBackendsPreferred != nil {
		in, out := &in.AreOperationallyActiveBackendsPreferred, &out.AreOperationallyActiveBackendsPreferred
		*out = new(bool)
		**out = **in
	}
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]NetworkLoadBalancersBackendSetsUnifiedBackendsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecker != nil {
		in, out := &in.HealthChecker, &out.HealthChecker
		*out = make([]NetworkLoadBalancersBackendSetsUnifiedHealthCheckerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsFailOpen != nil {
		in, out := &in.IsFailOpen, &out.IsFailOpen
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverEnabled != nil {
		in, out := &in.IsInstantFailoverEnabled, &out.IsInstantFailoverEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInstantFailoverTCPResetEnabled != nil {
		in, out := &in.IsInstantFailoverTCPResetEnabled, &out.IsInstantFailoverTCPResetEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPreserveSource != nil {
		in, out := &in.IsPreserveSource, &out.IsPreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerID != nil {
		in, out := &in.NetworkLoadBalancerID, &out.NetworkLoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.NetworkLoadBalancerIDRef != nil {
		in, out := &in.NetworkLoadBalancerIDRef, &out.NetworkLoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkLoadBalancerIDSelector != nil {
		in, out := &in.NetworkLoadBalancerIDSelector, &out.NetworkLoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedParameters.
func (in *NetworkLoadBalancersBackendSetsUnifiedParameters) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedSpec) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedSpec.
func (in *NetworkLoadBalancersBackendSetsUnifiedSpec) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLoadBalancersBackendSetsUnifiedStatus) DeepCopyInto(out *NetworkLoadBalancersBackendSetsUnifiedStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLoadBalancersBackendSetsUnifiedStatus.
func (in *NetworkLoadBalancersBackendSetsUnifiedStatus) DeepCopy() *NetworkLoadBalancersBackendSetsUnifiedStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkLoadBalancersBackendSetsUnifiedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedIPInitParameters) DeepCopyInto(out *ReservedIPInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedIPInitParameters.
func (in *ReservedIPInitParameters) DeepCopy() *ReservedIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservedIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedIPObservation) DeepCopyInto(out *ReservedIPObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedIPObservation.
func (in *ReservedIPObservation) DeepCopy() *ReservedIPObservation {
	if in == nil {
		return nil
	}
	out := new(ReservedIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedIPParameters) DeepCopyInto(out *ReservedIPParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedIPParameters.
func (in *ReservedIPParameters) DeepCopy() *ReservedIPParameters {
	if in == nil {
		return nil
	}
	out := new(ReservedIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedIpsInitParameters) DeepCopyInto(out *ReservedIpsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedIpsInitParameters.
func (in *ReservedIpsInitParameters) DeepCopy() *ReservedIpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservedIpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedIpsObservation) DeepCopyInto(out *ReservedIpsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedIpsObservation.
func (in *ReservedIpsObservation) DeepCopy() *ReservedIpsObservation {
	if in == nil {
		return nil
	}
	out := new(ReservedIpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservedIpsParameters) DeepCopyInto(out *ReservedIpsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservedIpsParameters.
func (in *ReservedIpsParameters) DeepCopy() *ReservedIpsParameters {
	if in == nil {
		return nil
	}
	out := new(ReservedIpsParameters)
	in.DeepCopyInto(out)
	return out
}
