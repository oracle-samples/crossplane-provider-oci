//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigInitParameters) DeepCopyInto(out *AgentConfigInitParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]PluginsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigInitParameters.
func (in *AgentConfigInitParameters) DeepCopy() *AgentConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigObservation) DeepCopyInto(out *AgentConfigObservation) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]PluginsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigObservation.
func (in *AgentConfigObservation) DeepCopy() *AgentConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AgentConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigParameters) DeepCopyInto(out *AgentConfigParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]PluginsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigParameters.
func (in *AgentConfigParameters) DeepCopy() *AgentConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AgentConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigPluginsConfigInitParameters) DeepCopyInto(out *AgentConfigPluginsConfigInitParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigPluginsConfigInitParameters.
func (in *AgentConfigPluginsConfigInitParameters) DeepCopy() *AgentConfigPluginsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentConfigPluginsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigPluginsConfigObservation) DeepCopyInto(out *AgentConfigPluginsConfigObservation) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigPluginsConfigObservation.
func (in *AgentConfigPluginsConfigObservation) DeepCopy() *AgentConfigPluginsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AgentConfigPluginsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigPluginsConfigParameters) DeepCopyInto(out *AgentConfigPluginsConfigParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigPluginsConfigParameters.
func (in *AgentConfigPluginsConfigParameters) DeepCopy() *AgentConfigPluginsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AgentConfigPluginsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentFeaturesInitParameters) DeepCopyInto(out *AgentFeaturesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentFeaturesInitParameters.
func (in *AgentFeaturesInitParameters) DeepCopy() *AgentFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentFeaturesObservation) DeepCopyInto(out *AgentFeaturesObservation) {
	*out = *in
	if in.IsManagementSupported != nil {
		in, out := &in.IsManagementSupported, &out.IsManagementSupported
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringSupported != nil {
		in, out := &in.IsMonitoringSupported, &out.IsMonitoringSupported
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentFeaturesObservation.
func (in *AgentFeaturesObservation) DeepCopy() *AgentFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(AgentFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentFeaturesParameters) DeepCopyInto(out *AgentFeaturesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentFeaturesParameters.
func (in *AgentFeaturesParameters) DeepCopy() *AgentFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(AgentFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreement) DeepCopyInto(out *AppCatalogListingResourceVersionAgreement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreement.
func (in *AppCatalogListingResourceVersionAgreement) DeepCopy() *AppCatalogListingResourceVersionAgreement {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppCatalogListingResourceVersionAgreement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementInitParameters) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementInitParameters) {
	*out = *in
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementInitParameters.
func (in *AppCatalogListingResourceVersionAgreementInitParameters) DeepCopy() *AppCatalogListingResourceVersionAgreementInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementList) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppCatalogListingResourceVersionAgreement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementList.
func (in *AppCatalogListingResourceVersionAgreementList) DeepCopy() *AppCatalogListingResourceVersionAgreementList {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppCatalogListingResourceVersionAgreementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementObservation) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementObservation) {
	*out = *in
	if in.EulaLink != nil {
		in, out := &in.EulaLink, &out.EulaLink
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.OracleTermsOfUseLink != nil {
		in, out := &in.OracleTermsOfUseLink, &out.OracleTermsOfUseLink
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	if in.TimeRetrieved != nil {
		in, out := &in.TimeRetrieved, &out.TimeRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementObservation.
func (in *AppCatalogListingResourceVersionAgreementObservation) DeepCopy() *AppCatalogListingResourceVersionAgreementObservation {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementParameters) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementParameters) {
	*out = *in
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementParameters.
func (in *AppCatalogListingResourceVersionAgreementParameters) DeepCopy() *AppCatalogListingResourceVersionAgreementParameters {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementSpec) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementSpec.
func (in *AppCatalogListingResourceVersionAgreementSpec) DeepCopy() *AppCatalogListingResourceVersionAgreementSpec {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementStatus) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementStatus.
func (in *AppCatalogListingResourceVersionAgreementStatus) DeepCopy() *AppCatalogListingResourceVersionAgreementStatus {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscription) DeepCopyInto(out *AppCatalogSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscription.
func (in *AppCatalogSubscription) DeepCopy() *AppCatalogSubscription {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppCatalogSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionInitParameters) DeepCopyInto(out *AppCatalogSubscriptionInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.EulaLink != nil {
		in, out := &in.EulaLink, &out.EulaLink
		*out = new(string)
		**out = **in
	}
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.OracleTermsOfUseLink != nil {
		in, out := &in.OracleTermsOfUseLink, &out.OracleTermsOfUseLink
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	if in.TimeRetrieved != nil {
		in, out := &in.TimeRetrieved, &out.TimeRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionInitParameters.
func (in *AppCatalogSubscriptionInitParameters) DeepCopy() *AppCatalogSubscriptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionList) DeepCopyInto(out *AppCatalogSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppCatalogSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionList.
func (in *AppCatalogSubscriptionList) DeepCopy() *AppCatalogSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppCatalogSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionObservation) DeepCopyInto(out *AppCatalogSubscriptionObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EulaLink != nil {
		in, out := &in.EulaLink, &out.EulaLink
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceID != nil {
		in, out := &in.ListingResourceID, &out.ListingResourceID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.OracleTermsOfUseLink != nil {
		in, out := &in.OracleTermsOfUseLink, &out.OracleTermsOfUseLink
		*out = new(string)
		**out = **in
	}
	if in.PublisherName != nil {
		in, out := &in.PublisherName, &out.PublisherName
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeRetrieved != nil {
		in, out := &in.TimeRetrieved, &out.TimeRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionObservation.
func (in *AppCatalogSubscriptionObservation) DeepCopy() *AppCatalogSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionParameters) DeepCopyInto(out *AppCatalogSubscriptionParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.EulaLink != nil {
		in, out := &in.EulaLink, &out.EulaLink
		*out = new(string)
		**out = **in
	}
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.OracleTermsOfUseLink != nil {
		in, out := &in.OracleTermsOfUseLink, &out.OracleTermsOfUseLink
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	if in.TimeRetrieved != nil {
		in, out := &in.TimeRetrieved, &out.TimeRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionParameters.
func (in *AppCatalogSubscriptionParameters) DeepCopy() *AppCatalogSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionSpec) DeepCopyInto(out *AppCatalogSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionSpec.
func (in *AppCatalogSubscriptionSpec) DeepCopy() *AppCatalogSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionStatus) DeepCopyInto(out *AppCatalogSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionStatus.
func (in *AppCatalogSubscriptionStatus) DeepCopy() *AppCatalogSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachDetailsInitParameters) DeepCopyInto(out *AttachDetailsInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachDetailsInitParameters.
func (in *AttachDetailsInitParameters) DeepCopy() *AttachDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachDetailsObservation) DeepCopyInto(out *AttachDetailsObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachDetailsObservation.
func (in *AttachDetailsObservation) DeepCopy() *AttachDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(AttachDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachDetailsParameters) DeepCopyInto(out *AttachDetailsParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachDetailsParameters.
func (in *AttachDetailsParameters) DeepCopy() *AttachDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(AttachDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesInitParameters) DeepCopyInto(out *AutotunePoliciesInitParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesInitParameters.
func (in *AutotunePoliciesInitParameters) DeepCopy() *AutotunePoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesObservation) DeepCopyInto(out *AutotunePoliciesObservation) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesObservation.
func (in *AutotunePoliciesObservation) DeepCopy() *AutotunePoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesParameters) DeepCopyInto(out *AutotunePoliciesParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesParameters.
func (in *AutotunePoliciesParameters) DeepCopy() *AutotunePoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityConfigInitParameters) DeepCopyInto(out *AvailabilityConfigInitParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityConfigInitParameters.
func (in *AvailabilityConfigInitParameters) DeepCopy() *AvailabilityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AvailabilityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityConfigObservation) DeepCopyInto(out *AvailabilityConfigObservation) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityConfigObservation.
func (in *AvailabilityConfigObservation) DeepCopy() *AvailabilityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AvailabilityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityConfigParameters) DeepCopyInto(out *AvailabilityConfigParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityConfigParameters.
func (in *AvailabilityConfigParameters) DeepCopy() *AvailabilityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AvailabilityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasInitParameters) DeepCopyInto(out *BlockVolumeReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasInitParameters.
func (in *BlockVolumeReplicasInitParameters) DeepCopy() *BlockVolumeReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasObservation) DeepCopyInto(out *BlockVolumeReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasObservation.
func (in *BlockVolumeReplicasObservation) DeepCopy() *BlockVolumeReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasParameters) DeepCopyInto(out *BlockVolumeReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasParameters.
func (in *BlockVolumeReplicasParameters) DeepCopy() *BlockVolumeReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesAttachDetailsInitParameters) DeepCopyInto(out *BlockVolumesAttachDetailsInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesAttachDetailsInitParameters.
func (in *BlockVolumesAttachDetailsInitParameters) DeepCopy() *BlockVolumesAttachDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesAttachDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesAttachDetailsObservation) DeepCopyInto(out *BlockVolumesAttachDetailsObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesAttachDetailsObservation.
func (in *BlockVolumesAttachDetailsObservation) DeepCopy() *BlockVolumesAttachDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesAttachDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesAttachDetailsParameters) DeepCopyInto(out *BlockVolumesAttachDetailsParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesAttachDetailsParameters.
func (in *BlockVolumesAttachDetailsParameters) DeepCopy() *BlockVolumesAttachDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesAttachDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsInitParameters) DeepCopyInto(out *BlockVolumesCreateDetailsInitParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]CreateDetailsAutotunePoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]CreateDetailsBlockVolumeReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BlockVolumesCreateDetailsSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsInitParameters.
func (in *BlockVolumesCreateDetailsInitParameters) DeepCopy() *BlockVolumesCreateDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsObservation) DeepCopyInto(out *BlockVolumesCreateDetailsObservation) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]CreateDetailsAutotunePoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]CreateDetailsBlockVolumeReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BlockVolumesCreateDetailsSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsObservation.
func (in *BlockVolumesCreateDetailsObservation) DeepCopy() *BlockVolumesCreateDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsParameters) DeepCopyInto(out *BlockVolumesCreateDetailsParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]CreateDetailsAutotunePoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]CreateDetailsBlockVolumeReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BlockVolumesCreateDetailsSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsParameters.
func (in *BlockVolumesCreateDetailsParameters) DeepCopy() *BlockVolumesCreateDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsSourceDetailsInitParameters) DeepCopyInto(out *BlockVolumesCreateDetailsSourceDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsSourceDetailsInitParameters.
func (in *BlockVolumesCreateDetailsSourceDetailsInitParameters) DeepCopy() *BlockVolumesCreateDetailsSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsSourceDetailsObservation) DeepCopyInto(out *BlockVolumesCreateDetailsSourceDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsSourceDetailsObservation.
func (in *BlockVolumesCreateDetailsSourceDetailsObservation) DeepCopy() *BlockVolumesCreateDetailsSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsSourceDetailsParameters) DeepCopyInto(out *BlockVolumesCreateDetailsSourceDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsSourceDetailsParameters.
func (in *BlockVolumesCreateDetailsSourceDetailsParameters) DeepCopy() *BlockVolumesCreateDetailsSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesInitParameters) DeepCopyInto(out *BlockVolumesInitParameters) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]AttachDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]CreateDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesInitParameters.
func (in *BlockVolumesInitParameters) DeepCopy() *BlockVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesObservation) DeepCopyInto(out *BlockVolumesObservation) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]AttachDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]CreateDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesObservation.
func (in *BlockVolumesObservation) DeepCopy() *BlockVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesParameters) DeepCopyInto(out *BlockVolumesParameters) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]AttachDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]CreateDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesParameters.
func (in *BlockVolumesParameters) DeepCopy() *BlockVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityBinsInitParameters) DeepCopyInto(out *CapacityBinsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityBinsInitParameters.
func (in *CapacityBinsInitParameters) DeepCopy() *CapacityBinsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityBinsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityBinsObservation) DeepCopyInto(out *CapacityBinsObservation) {
	*out = *in
	if in.CapacityIndex != nil {
		in, out := &in.CapacityIndex, &out.CapacityIndex
		*out = new(float64)
		**out = **in
	}
	if in.RemainingMemoryInGbs != nil {
		in, out := &in.RemainingMemoryInGbs, &out.RemainingMemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.RemainingOcpus != nil {
		in, out := &in.RemainingOcpus, &out.RemainingOcpus
		*out = new(float64)
		**out = **in
	}
	if in.SupportedShapes != nil {
		in, out := &in.SupportedShapes, &out.SupportedShapes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TotalMemoryInGbs != nil {
		in, out := &in.TotalMemoryInGbs, &out.TotalMemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.TotalOcpus != nil {
		in, out := &in.TotalOcpus, &out.TotalOcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityBinsObservation.
func (in *CapacityBinsObservation) DeepCopy() *CapacityBinsObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityBinsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityBinsParameters) DeepCopyInto(out *CapacityBinsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityBinsParameters.
func (in *CapacityBinsParameters) DeepCopy() *CapacityBinsParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityBinsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigInitParameters) DeepCopyInto(out *ClusterConfigInitParameters) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigInitParameters.
func (in *ClusterConfigInitParameters) DeepCopy() *ClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigObservation) DeepCopyInto(out *ClusterConfigObservation) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigObservation.
func (in *ClusterConfigObservation) DeepCopy() *ClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigParameters) DeepCopyInto(out *ClusterConfigParameters) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigParameters.
func (in *ClusterConfigParameters) DeepCopy() *ClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigurationInitParameters) DeepCopyInto(out *ClusterConfigurationInitParameters) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigurationInitParameters.
func (in *ClusterConfigurationInitParameters) DeepCopy() *ClusterConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigurationObservation) DeepCopyInto(out *ClusterConfigurationObservation) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigurationObservation.
func (in *ClusterConfigurationObservation) DeepCopy() *ClusterConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigurationParameters) DeepCopyInto(out *ClusterConfigurationParameters) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigurationParameters.
func (in *ClusterConfigurationParameters) DeepCopy() *ClusterConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetwork) DeepCopyInto(out *ClusterNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetwork.
func (in *ClusterNetwork) DeepCopy() *ClusterNetwork {
	if in == nil {
		return nil
	}
	out := new(ClusterNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkInitParameters) DeepCopyInto(out *ClusterNetworkInitParameters) {
	*out = *in
	if in.ClusterConfiguration != nil {
		in, out := &in.ClusterConfiguration, &out.ClusterConfiguration
		*out = make([]ClusterConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstancePools != nil {
		in, out := &in.InstancePools, &out.InstancePools
		*out = make([]InstancePoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfiguration != nil {
		in, out := &in.PlacementConfiguration, &out.PlacementConfiguration
		*out = make([]PlacementConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkInitParameters.
func (in *ClusterNetworkInitParameters) DeepCopy() *ClusterNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkList) DeepCopyInto(out *ClusterNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkList.
func (in *ClusterNetworkList) DeepCopy() *ClusterNetworkList {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkObservation) DeepCopyInto(out *ClusterNetworkObservation) {
	*out = *in
	if in.ClusterConfiguration != nil {
		in, out := &in.ClusterConfiguration, &out.ClusterConfiguration
		*out = make([]ClusterConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstancePools != nil {
		in, out := &in.InstancePools, &out.InstancePools
		*out = make([]InstancePoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PlacementConfiguration != nil {
		in, out := &in.PlacementConfiguration, &out.PlacementConfiguration
		*out = make([]PlacementConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkObservation.
func (in *ClusterNetworkObservation) DeepCopy() *ClusterNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkParameters) DeepCopyInto(out *ClusterNetworkParameters) {
	*out = *in
	if in.ClusterConfiguration != nil {
		in, out := &in.ClusterConfiguration, &out.ClusterConfiguration
		*out = make([]ClusterConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstancePools != nil {
		in, out := &in.InstancePools, &out.InstancePools
		*out = make([]InstancePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfiguration != nil {
		in, out := &in.PlacementConfiguration, &out.PlacementConfiguration
		*out = make([]PlacementConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkParameters.
func (in *ClusterNetworkParameters) DeepCopy() *ClusterNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkSpec) DeepCopyInto(out *ClusterNetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkSpec.
func (in *ClusterNetworkSpec) DeepCopy() *ClusterNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkStatus) DeepCopyInto(out *ClusterNetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkStatus.
func (in *ClusterNetworkStatus) DeepCopy() *ClusterNetworkStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservation) DeepCopyInto(out *ComputeCapacityReservation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservation.
func (in *ComputeCapacityReservation) DeepCopy() *ComputeCapacityReservation {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeCapacityReservation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationInitParameters) DeepCopyInto(out *ComputeCapacityReservationInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceReservationConfigs != nil {
		in, out := &in.InstanceReservationConfigs, &out.InstanceReservationConfigs
		*out = make([]InstanceReservationConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefaultReservation != nil {
		in, out := &in.IsDefaultReservation, &out.IsDefaultReservation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationInitParameters.
func (in *ComputeCapacityReservationInitParameters) DeepCopy() *ComputeCapacityReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationList) DeepCopyInto(out *ComputeCapacityReservationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeCapacityReservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationList.
func (in *ComputeCapacityReservationList) DeepCopy() *ComputeCapacityReservationList {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeCapacityReservationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationObservation) DeepCopyInto(out *ComputeCapacityReservationObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceReservationConfigs != nil {
		in, out := &in.InstanceReservationConfigs, &out.InstanceReservationConfigs
		*out = make([]InstanceReservationConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefaultReservation != nil {
		in, out := &in.IsDefaultReservation, &out.IsDefaultReservation
		*out = new(bool)
		**out = **in
	}
	if in.ReservedInstanceCount != nil {
		in, out := &in.ReservedInstanceCount, &out.ReservedInstanceCount
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
	if in.UsedInstanceCount != nil {
		in, out := &in.UsedInstanceCount, &out.UsedInstanceCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationObservation.
func (in *ComputeCapacityReservationObservation) DeepCopy() *ComputeCapacityReservationObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationParameters) DeepCopyInto(out *ComputeCapacityReservationParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceReservationConfigs != nil {
		in, out := &in.InstanceReservationConfigs, &out.InstanceReservationConfigs
		*out = make([]InstanceReservationConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefaultReservation != nil {
		in, out := &in.IsDefaultReservation, &out.IsDefaultReservation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationParameters.
func (in *ComputeCapacityReservationParameters) DeepCopy() *ComputeCapacityReservationParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationSpec) DeepCopyInto(out *ComputeCapacityReservationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationSpec.
func (in *ComputeCapacityReservationSpec) DeepCopy() *ComputeCapacityReservationSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationStatus) DeepCopyInto(out *ComputeCapacityReservationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationStatus.
func (in *ComputeCapacityReservationStatus) DeepCopy() *ComputeCapacityReservationStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCluster) DeepCopyInto(out *ComputeCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCluster.
func (in *ComputeCluster) DeepCopy() *ComputeCluster {
	if in == nil {
		return nil
	}
	out := new(ComputeCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterInitParameters) DeepCopyInto(out *ComputeClusterInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterInitParameters.
func (in *ComputeClusterInitParameters) DeepCopy() *ComputeClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterList) DeepCopyInto(out *ComputeClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterList.
func (in *ComputeClusterList) DeepCopy() *ComputeClusterList {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterObservation) DeepCopyInto(out *ComputeClusterObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterObservation.
func (in *ComputeClusterObservation) DeepCopy() *ComputeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterParameters) DeepCopyInto(out *ComputeClusterParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterParameters.
func (in *ComputeClusterParameters) DeepCopy() *ComputeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterSpec) DeepCopyInto(out *ComputeClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterSpec.
func (in *ComputeClusterSpec) DeepCopy() *ComputeClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterStatus) DeepCopyInto(out *ComputeClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterStatus.
func (in *ComputeClusterStatus) DeepCopy() *ComputeClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchema) DeepCopyInto(out *ComputeImageCapabilitySchema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchema.
func (in *ComputeImageCapabilitySchema) DeepCopy() *ComputeImageCapabilitySchema {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeImageCapabilitySchema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaInitParameters) DeepCopyInto(out *ComputeImageCapabilitySchemaInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeGlobalImageCapabilitySchemaVersionName != nil {
		in, out := &in.ComputeGlobalImageCapabilitySchemaVersionName, &out.ComputeGlobalImageCapabilitySchemaVersionName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.SchemaData != nil {
		in, out := &in.SchemaData, &out.SchemaData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaInitParameters.
func (in *ComputeImageCapabilitySchemaInitParameters) DeepCopy() *ComputeImageCapabilitySchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaList) DeepCopyInto(out *ComputeImageCapabilitySchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeImageCapabilitySchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaList.
func (in *ComputeImageCapabilitySchemaList) DeepCopy() *ComputeImageCapabilitySchemaList {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeImageCapabilitySchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaObservation) DeepCopyInto(out *ComputeImageCapabilitySchemaObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeGlobalImageCapabilitySchemaID != nil {
		in, out := &in.ComputeGlobalImageCapabilitySchemaID, &out.ComputeGlobalImageCapabilitySchemaID
		*out = new(string)
		**out = **in
	}
	if in.ComputeGlobalImageCapabilitySchemaVersionName != nil {
		in, out := &in.ComputeGlobalImageCapabilitySchemaVersionName, &out.ComputeGlobalImageCapabilitySchemaVersionName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.SchemaData != nil {
		in, out := &in.SchemaData, &out.SchemaData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaObservation.
func (in *ComputeImageCapabilitySchemaObservation) DeepCopy() *ComputeImageCapabilitySchemaObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaParameters) DeepCopyInto(out *ComputeImageCapabilitySchemaParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeGlobalImageCapabilitySchemaVersionName != nil {
		in, out := &in.ComputeGlobalImageCapabilitySchemaVersionName, &out.ComputeGlobalImageCapabilitySchemaVersionName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.SchemaData != nil {
		in, out := &in.SchemaData, &out.SchemaData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaParameters.
func (in *ComputeImageCapabilitySchemaParameters) DeepCopy() *ComputeImageCapabilitySchemaParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaSpec) DeepCopyInto(out *ComputeImageCapabilitySchemaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaSpec.
func (in *ComputeImageCapabilitySchemaSpec) DeepCopy() *ComputeImageCapabilitySchemaSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaStatus) DeepCopyInto(out *ComputeImageCapabilitySchemaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaStatus.
func (in *ComputeImageCapabilitySchemaStatus) DeepCopy() *ComputeImageCapabilitySchemaStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistory) DeepCopyInto(out *ConsoleHistory) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistory.
func (in *ConsoleHistory) DeepCopy() *ConsoleHistory {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsoleHistory) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryInitParameters) DeepCopyInto(out *ConsoleHistoryInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryInitParameters.
func (in *ConsoleHistoryInitParameters) DeepCopy() *ConsoleHistoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryList) DeepCopyInto(out *ConsoleHistoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConsoleHistory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryList.
func (in *ConsoleHistoryList) DeepCopy() *ConsoleHistoryList {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsoleHistoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryObservation) DeepCopyInto(out *ConsoleHistoryObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryObservation.
func (in *ConsoleHistoryObservation) DeepCopy() *ConsoleHistoryObservation {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryParameters) DeepCopyInto(out *ConsoleHistoryParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryParameters.
func (in *ConsoleHistoryParameters) DeepCopy() *ConsoleHistoryParameters {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistorySpec) DeepCopyInto(out *ConsoleHistorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistorySpec.
func (in *ConsoleHistorySpec) DeepCopy() *ConsoleHistorySpec {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryStatus) DeepCopyInto(out *ConsoleHistoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryStatus.
func (in *ConsoleHistoryStatus) DeepCopy() *ConsoleHistoryStatus {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsAutotunePoliciesInitParameters) DeepCopyInto(out *CreateDetailsAutotunePoliciesInitParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsAutotunePoliciesInitParameters.
func (in *CreateDetailsAutotunePoliciesInitParameters) DeepCopy() *CreateDetailsAutotunePoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsAutotunePoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsAutotunePoliciesObservation) DeepCopyInto(out *CreateDetailsAutotunePoliciesObservation) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsAutotunePoliciesObservation.
func (in *CreateDetailsAutotunePoliciesObservation) DeepCopy() *CreateDetailsAutotunePoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsAutotunePoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsAutotunePoliciesParameters) DeepCopyInto(out *CreateDetailsAutotunePoliciesParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsAutotunePoliciesParameters.
func (in *CreateDetailsAutotunePoliciesParameters) DeepCopy() *CreateDetailsAutotunePoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsAutotunePoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsBlockVolumeReplicasInitParameters) DeepCopyInto(out *CreateDetailsBlockVolumeReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsBlockVolumeReplicasInitParameters.
func (in *CreateDetailsBlockVolumeReplicasInitParameters) DeepCopy() *CreateDetailsBlockVolumeReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsBlockVolumeReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsBlockVolumeReplicasObservation) DeepCopyInto(out *CreateDetailsBlockVolumeReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsBlockVolumeReplicasObservation.
func (in *CreateDetailsBlockVolumeReplicasObservation) DeepCopy() *CreateDetailsBlockVolumeReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsBlockVolumeReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsBlockVolumeReplicasParameters) DeepCopyInto(out *CreateDetailsBlockVolumeReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsBlockVolumeReplicasParameters.
func (in *CreateDetailsBlockVolumeReplicasParameters) DeepCopy() *CreateDetailsBlockVolumeReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsBlockVolumeReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsInitParameters) DeepCopyInto(out *CreateDetailsInitParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]CreateDetailsSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsInitParameters.
func (in *CreateDetailsInitParameters) DeepCopy() *CreateDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsObservation) DeepCopyInto(out *CreateDetailsObservation) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]CreateDetailsSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsObservation.
func (in *CreateDetailsObservation) DeepCopy() *CreateDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsParameters) DeepCopyInto(out *CreateDetailsParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]CreateDetailsSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsParameters.
func (in *CreateDetailsParameters) DeepCopy() *CreateDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsSourceDetailsInitParameters) DeepCopyInto(out *CreateDetailsSourceDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsSourceDetailsInitParameters.
func (in *CreateDetailsSourceDetailsInitParameters) DeepCopy() *CreateDetailsSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsSourceDetailsObservation) DeepCopyInto(out *CreateDetailsSourceDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsSourceDetailsObservation.
func (in *CreateDetailsSourceDetailsObservation) DeepCopy() *CreateDetailsSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsSourceDetailsParameters) DeepCopyInto(out *CreateDetailsSourceDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsSourceDetailsParameters.
func (in *CreateDetailsSourceDetailsParameters) DeepCopy() *CreateDetailsSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsInitParameters) DeepCopyInto(out *CreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NsgIdsRefs != nil {
		in, out := &in.NsgIdsRefs, &out.NsgIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIdsSelector != nil {
		in, out := &in.NsgIdsSelector, &out.NsgIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanIDRef != nil {
		in, out := &in.VlanIDRef, &out.VlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VlanIDSelector != nil {
		in, out := &in.VlanIDSelector, &out.VlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsInitParameters.
func (in *CreateVnicDetailsInitParameters) DeepCopy() *CreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsObservation) DeepCopyInto(out *CreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsObservation.
func (in *CreateVnicDetailsObservation) DeepCopy() *CreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsParameters) DeepCopyInto(out *CreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NsgIdsRefs != nil {
		in, out := &in.NsgIdsRefs, &out.NsgIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIdsSelector != nil {
		in, out := &in.NsgIdsSelector, &out.NsgIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanIDRef != nil {
		in, out := &in.VlanIDRef, &out.VlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VlanIDSelector != nil {
		in, out := &in.VlanIDSelector, &out.VlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsParameters.
func (in *CreateVnicDetailsParameters) DeepCopy() *CreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVmHost) DeepCopyInto(out *DedicatedVmHost) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVmHost.
func (in *DedicatedVmHost) DeepCopy() *DedicatedVmHost {
	if in == nil {
		return nil
	}
	out := new(DedicatedVmHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DedicatedVmHost) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVmHostInitParameters) DeepCopyInto(out *DedicatedVmHostInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DedicatedVMHostShape != nil {
		in, out := &in.DedicatedVMHostShape, &out.DedicatedVMHostShape
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlacementConstraintDetails != nil {
		in, out := &in.PlacementConstraintDetails, &out.PlacementConstraintDetails
		*out = make([]PlacementConstraintDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVmHostInitParameters.
func (in *DedicatedVmHostInitParameters) DeepCopy() *DedicatedVmHostInitParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedVmHostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVmHostList) DeepCopyInto(out *DedicatedVmHostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DedicatedVmHost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVmHostList.
func (in *DedicatedVmHostList) DeepCopy() *DedicatedVmHostList {
	if in == nil {
		return nil
	}
	out := new(DedicatedVmHostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DedicatedVmHostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVmHostObservation) DeepCopyInto(out *DedicatedVmHostObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityBins != nil {
		in, out := &in.CapacityBins, &out.CapacityBins
		*out = make([]CapacityBinsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeBareMetalHostID != nil {
		in, out := &in.ComputeBareMetalHostID, &out.ComputeBareMetalHostID
		*out = new(string)
		**out = **in
	}
	if in.DedicatedVMHostShape != nil {
		in, out := &in.DedicatedVMHostShape, &out.DedicatedVMHostShape
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraintDetails != nil {
		in, out := &in.PlacementConstraintDetails, &out.PlacementConstraintDetails
		*out = make([]PlacementConstraintDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemainingMemoryInGbs != nil {
		in, out := &in.RemainingMemoryInGbs, &out.RemainingMemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.RemainingOcpus != nil {
		in, out := &in.RemainingOcpus, &out.RemainingOcpus
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TotalMemoryInGbs != nil {
		in, out := &in.TotalMemoryInGbs, &out.TotalMemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.TotalOcpus != nil {
		in, out := &in.TotalOcpus, &out.TotalOcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVmHostObservation.
func (in *DedicatedVmHostObservation) DeepCopy() *DedicatedVmHostObservation {
	if in == nil {
		return nil
	}
	out := new(DedicatedVmHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVmHostParameters) DeepCopyInto(out *DedicatedVmHostParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DedicatedVMHostShape != nil {
		in, out := &in.DedicatedVMHostShape, &out.DedicatedVMHostShape
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlacementConstraintDetails != nil {
		in, out := &in.PlacementConstraintDetails, &out.PlacementConstraintDetails
		*out = make([]PlacementConstraintDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVmHostParameters.
func (in *DedicatedVmHostParameters) DeepCopy() *DedicatedVmHostParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedVmHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVmHostSpec) DeepCopyInto(out *DedicatedVmHostSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVmHostSpec.
func (in *DedicatedVmHostSpec) DeepCopy() *DedicatedVmHostSpec {
	if in == nil {
		return nil
	}
	out := new(DedicatedVmHostSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVmHostStatus) DeepCopyInto(out *DedicatedVmHostStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVmHostStatus.
func (in *DedicatedVmHostStatus) DeepCopy() *DedicatedVmHostStatus {
	if in == nil {
		return nil
	}
	out := new(DedicatedVmHostStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image) DeepCopyInto(out *Image) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image.
func (in *Image) DeepCopy() *Image {
	if in == nil {
		return nil
	}
	out := new(Image)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Image) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageInitParameters) DeepCopyInto(out *ImageInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageSourceDetails != nil {
		in, out := &in.ImageSourceDetails, &out.ImageSourceDetails
		*out = make([]ImageSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageInitParameters.
func (in *ImageInitParameters) DeepCopy() *ImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageList) DeepCopyInto(out *ImageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Image, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageList.
func (in *ImageList) DeepCopy() *ImageList {
	if in == nil {
		return nil
	}
	out := new(ImageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageObservation) DeepCopyInto(out *ImageObservation) {
	*out = *in
	if in.AgentFeatures != nil {
		in, out := &in.AgentFeatures, &out.AgentFeatures
		*out = make([]AgentFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseImageID != nil {
		in, out := &in.BaseImageID, &out.BaseImageID
		*out = new(string)
		**out = **in
	}
	if in.BillableSizeInGbs != nil {
		in, out := &in.BillableSizeInGbs, &out.BillableSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateImageAllowed != nil {
		in, out := &in.CreateImageAllowed, &out.CreateImageAllowed
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageSourceDetails != nil {
		in, out := &in.ImageSourceDetails, &out.ImageSourceDetails
		*out = make([]ImageSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]LaunchOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListingType != nil {
		in, out := &in.ListingType, &out.ListingType
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageObservation.
func (in *ImageObservation) DeepCopy() *ImageObservation {
	if in == nil {
		return nil
	}
	out := new(ImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageParameters) DeepCopyInto(out *ImageParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageSourceDetails != nil {
		in, out := &in.ImageSourceDetails, &out.ImageSourceDetails
		*out = make([]ImageSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageParameters.
func (in *ImageParameters) DeepCopy() *ImageParameters {
	if in == nil {
		return nil
	}
	out := new(ImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSourceDetailsInitParameters) DeepCopyInto(out *ImageSourceDetailsInitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
	if in.SourceImageType != nil {
		in, out := &in.SourceImageType, &out.SourceImageType
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceURI != nil {
		in, out := &in.SourceURI, &out.SourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSourceDetailsInitParameters.
func (in *ImageSourceDetailsInitParameters) DeepCopy() *ImageSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSourceDetailsObservation) DeepCopyInto(out *ImageSourceDetailsObservation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
	if in.SourceImageType != nil {
		in, out := &in.SourceImageType, &out.SourceImageType
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceURI != nil {
		in, out := &in.SourceURI, &out.SourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSourceDetailsObservation.
func (in *ImageSourceDetailsObservation) DeepCopy() *ImageSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(ImageSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSourceDetailsParameters) DeepCopyInto(out *ImageSourceDetailsParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
	if in.SourceImageType != nil {
		in, out := &in.SourceImageType, &out.SourceImageType
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceURI != nil {
		in, out := &in.SourceURI, &out.SourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSourceDetailsParameters.
func (in *ImageSourceDetailsParameters) DeepCopy() *ImageSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(ImageSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSpec) DeepCopyInto(out *ImageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSpec.
func (in *ImageSpec) DeepCopy() *ImageSpec {
	if in == nil {
		return nil
	}
	out := new(ImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStatus) DeepCopyInto(out *ImageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageStatus.
func (in *ImageStatus) DeepCopy() *ImageStatus {
	if in == nil {
		return nil
	}
	out := new(ImageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfiguration) DeepCopyInto(out *InstanceConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfiguration.
func (in *InstanceConfiguration) DeepCopy() *InstanceConfiguration {
	if in == nil {
		return nil
	}
	out := new(InstanceConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationInitParameters) DeepCopyInto(out *InstanceConfigurationInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceDetails != nil {
		in, out := &in.InstanceDetails, &out.InstanceDetails
		*out = make([]InstanceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationInitParameters.
func (in *InstanceConfigurationInitParameters) DeepCopy() *InstanceConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationList) DeepCopyInto(out *InstanceConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationList.
func (in *InstanceConfigurationList) DeepCopy() *InstanceConfigurationList {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationObservation) DeepCopyInto(out *InstanceConfigurationObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DeferredFields != nil {
		in, out := &in.DeferredFields, &out.DeferredFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDetails != nil {
		in, out := &in.InstanceDetails, &out.InstanceDetails
		*out = make([]InstanceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationObservation.
func (in *InstanceConfigurationObservation) DeepCopy() *InstanceConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationParameters) DeepCopyInto(out *InstanceConfigurationParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceDetails != nil {
		in, out := &in.InstanceDetails, &out.InstanceDetails
		*out = make([]InstanceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationParameters.
func (in *InstanceConfigurationParameters) DeepCopy() *InstanceConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationSpec) DeepCopyInto(out *InstanceConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationSpec.
func (in *InstanceConfigurationSpec) DeepCopy() *InstanceConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationStatus) DeepCopyInto(out *InstanceConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationStatus.
func (in *InstanceConfigurationStatus) DeepCopy() *InstanceConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnection) DeepCopyInto(out *InstanceConsoleConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnection.
func (in *InstanceConsoleConnection) DeepCopy() *InstanceConsoleConnection {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceConsoleConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionInitParameters) DeepCopyInto(out *InstanceConsoleConnectionInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionInitParameters.
func (in *InstanceConsoleConnectionInitParameters) DeepCopy() *InstanceConsoleConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionList) DeepCopyInto(out *InstanceConsoleConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceConsoleConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionList.
func (in *InstanceConsoleConnectionList) DeepCopy() *InstanceConsoleConnectionList {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceConsoleConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionObservation) DeepCopyInto(out *InstanceConsoleConnectionObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.ServiceHostKeyFingerprint != nil {
		in, out := &in.ServiceHostKeyFingerprint, &out.ServiceHostKeyFingerprint
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.VncConnectionString != nil {
		in, out := &in.VncConnectionString, &out.VncConnectionString
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionObservation.
func (in *InstanceConsoleConnectionObservation) DeepCopy() *InstanceConsoleConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionParameters) DeepCopyInto(out *InstanceConsoleConnectionParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionParameters.
func (in *InstanceConsoleConnectionParameters) DeepCopy() *InstanceConsoleConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionSpec) DeepCopyInto(out *InstanceConsoleConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionSpec.
func (in *InstanceConsoleConnectionSpec) DeepCopy() *InstanceConsoleConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionStatus) DeepCopyInto(out *InstanceConsoleConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionStatus.
func (in *InstanceConsoleConnectionStatus) DeepCopy() *InstanceConsoleConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsInitParameters) DeepCopyInto(out *InstanceDetailsInitParameters) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]BlockVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]LaunchDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]InstanceDetailsSecondaryVnicsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsInitParameters.
func (in *InstanceDetailsInitParameters) DeepCopy() *InstanceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsObservation) DeepCopyInto(out *InstanceDetailsObservation) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]BlockVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]LaunchDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]InstanceDetailsSecondaryVnicsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsObservation.
func (in *InstanceDetailsObservation) DeepCopy() *InstanceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsParameters) DeepCopyInto(out *InstanceDetailsParameters) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]BlockVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]LaunchDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]InstanceDetailsSecondaryVnicsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsParameters.
func (in *InstanceDetailsParameters) DeepCopy() *InstanceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsInitParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsInitParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsInitParameters.
func (in *InstanceDetailsSecondaryVnicsInitParameters) DeepCopy() *InstanceDetailsSecondaryVnicsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsObservation) DeepCopyInto(out *InstanceDetailsSecondaryVnicsObservation) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsObservation.
func (in *InstanceDetailsSecondaryVnicsObservation) DeepCopy() *InstanceDetailsSecondaryVnicsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsParameters.
func (in *InstanceDetailsSecondaryVnicsParameters) DeepCopy() *InstanceDetailsSecondaryVnicsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]AgentConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Async != nil {
		in, out := &in.Async, &out.Async
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]AvailabilityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]CreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DedicatedVMHostIDRef != nil {
		in, out := &in.DedicatedVMHostIDRef, &out.DedicatedVMHostIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DedicatedVMHostIDSelector != nil {
		in, out := &in.DedicatedVMHostIDSelector, &out.DedicatedVMHostIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]InstanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]InstanceLaunchOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchVolumeAttachments != nil {
		in, out := &in.LaunchVolumeAttachments, &out.LaunchVolumeAttachments
		*out = make([]LaunchVolumeAttachmentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]LicensingConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlacementConstraintDetails != nil {
		in, out := &in.PlacementConstraintDetails, &out.PlacementConstraintDetails
		*out = make([]InstancePlacementConstraintDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]PlatformConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]PreemptibleInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.PreserveDataVolumesCreatedAtLaunch != nil {
		in, out := &in.PreserveDataVolumesCreatedAtLaunch, &out.PreserveDataVolumesCreatedAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]ShapeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UpdateOperationConstraint != nil {
		in, out := &in.UpdateOperationConstraint, &out.UpdateOperationConstraint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLaunchOptionsInitParameters) DeepCopyInto(out *InstanceLaunchOptionsInitParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLaunchOptionsInitParameters.
func (in *InstanceLaunchOptionsInitParameters) DeepCopy() *InstanceLaunchOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceLaunchOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLaunchOptionsObservation) DeepCopyInto(out *InstanceLaunchOptionsObservation) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLaunchOptionsObservation.
func (in *InstanceLaunchOptionsObservation) DeepCopy() *InstanceLaunchOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceLaunchOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLaunchOptionsParameters) DeepCopyInto(out *InstanceLaunchOptionsParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLaunchOptionsParameters.
func (in *InstanceLaunchOptionsParameters) DeepCopy() *InstanceLaunchOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceLaunchOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]AgentConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Async != nil {
		in, out := &in.Async, &out.Async
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]AvailabilityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]CreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]InstanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsCrossNumaNode != nil {
		in, out := &in.IsCrossNumaNode, &out.IsCrossNumaNode
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]InstanceLaunchOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchVolumeAttachments != nil {
		in, out := &in.LaunchVolumeAttachments, &out.LaunchVolumeAttachments
		*out = make([]LaunchVolumeAttachmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]LicensingConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlacementConstraintDetails != nil {
		in, out := &in.PlacementConstraintDetails, &out.PlacementConstraintDetails
		*out = make([]InstancePlacementConstraintDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]PlatformConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]PreemptibleInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.PreserveDataVolumesCreatedAtLaunch != nil {
		in, out := &in.PreserveDataVolumesCreatedAtLaunch, &out.PreserveDataVolumesCreatedAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecurityAttributesState != nil {
		in, out := &in.SecurityAttributesState, &out.SecurityAttributesState
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]ShapeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeMaintenanceRebootDue != nil {
		in, out := &in.TimeMaintenanceRebootDue, &out.TimeMaintenanceRebootDue
		*out = new(string)
		**out = **in
	}
	if in.UpdateOperationConstraint != nil {
		in, out := &in.UpdateOperationConstraint, &out.UpdateOperationConstraint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceOptionsInitParameters) DeepCopyInto(out *InstanceOptionsInitParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceOptionsInitParameters.
func (in *InstanceOptionsInitParameters) DeepCopy() *InstanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceOptionsObservation) DeepCopyInto(out *InstanceOptionsObservation) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceOptionsObservation.
func (in *InstanceOptionsObservation) DeepCopy() *InstanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceOptionsParameters) DeepCopyInto(out *InstanceOptionsParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceOptionsParameters.
func (in *InstanceOptionsParameters) DeepCopy() *InstanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]AgentConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Async != nil {
		in, out := &in.Async, &out.Async
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]AvailabilityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]CreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DedicatedVMHostIDRef != nil {
		in, out := &in.DedicatedVMHostIDRef, &out.DedicatedVMHostIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DedicatedVMHostIDSelector != nil {
		in, out := &in.DedicatedVMHostIDSelector, &out.DedicatedVMHostIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]InstanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]InstanceLaunchOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchVolumeAttachments != nil {
		in, out := &in.LaunchVolumeAttachments, &out.LaunchVolumeAttachments
		*out = make([]LaunchVolumeAttachmentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]LicensingConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlacementConstraintDetails != nil {
		in, out := &in.PlacementConstraintDetails, &out.PlacementConstraintDetails
		*out = make([]InstancePlacementConstraintDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]PlatformConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]PreemptibleInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.PreserveDataVolumesCreatedAtLaunch != nil {
		in, out := &in.PreserveDataVolumesCreatedAtLaunch, &out.PreserveDataVolumesCreatedAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]ShapeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UpdateOperationConstraint != nil {
		in, out := &in.UpdateOperationConstraint, &out.UpdateOperationConstraint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePlacementConstraintDetailsInitParameters) DeepCopyInto(out *InstancePlacementConstraintDetailsInitParameters) {
	*out = *in
	if in.ComputeBareMetalHostID != nil {
		in, out := &in.ComputeBareMetalHostID, &out.ComputeBareMetalHostID
		*out = new(string)
		**out = **in
	}
	if in.ComputeHostGroupID != nil {
		in, out := &in.ComputeHostGroupID, &out.ComputeHostGroupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePlacementConstraintDetailsInitParameters.
func (in *InstancePlacementConstraintDetailsInitParameters) DeepCopy() *InstancePlacementConstraintDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePlacementConstraintDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePlacementConstraintDetailsObservation) DeepCopyInto(out *InstancePlacementConstraintDetailsObservation) {
	*out = *in
	if in.ComputeBareMetalHostID != nil {
		in, out := &in.ComputeBareMetalHostID, &out.ComputeBareMetalHostID
		*out = new(string)
		**out = **in
	}
	if in.ComputeHostGroupID != nil {
		in, out := &in.ComputeHostGroupID, &out.ComputeHostGroupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePlacementConstraintDetailsObservation.
func (in *InstancePlacementConstraintDetailsObservation) DeepCopy() *InstancePlacementConstraintDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePlacementConstraintDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePlacementConstraintDetailsParameters) DeepCopyInto(out *InstancePlacementConstraintDetailsParameters) {
	*out = *in
	if in.ComputeBareMetalHostID != nil {
		in, out := &in.ComputeBareMetalHostID, &out.ComputeBareMetalHostID
		*out = new(string)
		**out = **in
	}
	if in.ComputeHostGroupID != nil {
		in, out := &in.ComputeHostGroupID, &out.ComputeHostGroupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePlacementConstraintDetailsParameters.
func (in *InstancePlacementConstraintDetailsParameters) DeepCopy() *InstancePlacementConstraintDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePlacementConstraintDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePool) DeepCopyInto(out *InstancePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePool.
func (in *InstancePool) DeepCopy() *InstancePool {
	if in == nil {
		return nil
	}
	out := new(InstancePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInitParameters) DeepCopyInto(out *InstancePoolInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDisplayNameFormatter != nil {
		in, out := &in.InstanceDisplayNameFormatter, &out.InstanceDisplayNameFormatter
		*out = new(string)
		**out = **in
	}
	if in.InstanceHostnameFormatter != nil {
		in, out := &in.InstanceHostnameFormatter, &out.InstanceHostnameFormatter
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]InstancePoolLoadBalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfigurations != nil {
		in, out := &in.PlacementConfigurations, &out.PlacementConfigurations
		*out = make([]InstancePoolPlacementConfigurationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInitParameters.
func (in *InstancePoolInitParameters) DeepCopy() *InstancePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstance) DeepCopyInto(out *InstancePoolInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstance.
func (in *InstancePoolInstance) DeepCopy() *InstancePoolInstance {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePoolInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceInitParameters) DeepCopyInto(out *InstancePoolInstanceInitParameters) {
	*out = *in
	if in.AutoTerminateInstanceOnDelete != nil {
		in, out := &in.AutoTerminateInstanceOnDelete, &out.AutoTerminateInstanceOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.DecrementSizeOnDelete != nil {
		in, out := &in.DecrementSizeOnDelete, &out.DecrementSizeOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceInitParameters.
func (in *InstancePoolInstanceInitParameters) DeepCopy() *InstancePoolInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceList) DeepCopyInto(out *InstancePoolInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstancePoolInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceList.
func (in *InstancePoolInstanceList) DeepCopy() *InstancePoolInstanceList {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePoolInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceObservation) DeepCopyInto(out *InstancePoolInstanceObservation) {
	*out = *in
	if in.AutoTerminateInstanceOnDelete != nil {
		in, out := &in.AutoTerminateInstanceOnDelete, &out.AutoTerminateInstanceOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DecrementSizeOnDelete != nil {
		in, out := &in.DecrementSizeOnDelete, &out.DecrementSizeOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerBackends != nil {
		in, out := &in.LoadBalancerBackends, &out.LoadBalancerBackends
		*out = make([]LoadBalancerBackendsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceObservation.
func (in *InstancePoolInstanceObservation) DeepCopy() *InstancePoolInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceParameters) DeepCopyInto(out *InstancePoolInstanceParameters) {
	*out = *in
	if in.AutoTerminateInstanceOnDelete != nil {
		in, out := &in.AutoTerminateInstanceOnDelete, &out.AutoTerminateInstanceOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.DecrementSizeOnDelete != nil {
		in, out := &in.DecrementSizeOnDelete, &out.DecrementSizeOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceParameters.
func (in *InstancePoolInstanceParameters) DeepCopy() *InstancePoolInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceSpec) DeepCopyInto(out *InstancePoolInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceSpec.
func (in *InstancePoolInstanceSpec) DeepCopy() *InstancePoolInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceStatus) DeepCopyInto(out *InstancePoolInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceStatus.
func (in *InstancePoolInstanceStatus) DeepCopy() *InstancePoolInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolList) DeepCopyInto(out *InstancePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstancePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolList.
func (in *InstancePoolList) DeepCopy() *InstancePoolList {
	if in == nil {
		return nil
	}
	out := new(InstancePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolLoadBalancersInitParameters) DeepCopyInto(out *InstancePoolLoadBalancersInitParameters) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.VnicSelection != nil {
		in, out := &in.VnicSelection, &out.VnicSelection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolLoadBalancersInitParameters.
func (in *InstancePoolLoadBalancersInitParameters) DeepCopy() *InstancePoolLoadBalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolLoadBalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolLoadBalancersObservation) DeepCopyInto(out *InstancePoolLoadBalancersObservation) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.VnicSelection != nil {
		in, out := &in.VnicSelection, &out.VnicSelection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolLoadBalancersObservation.
func (in *InstancePoolLoadBalancersObservation) DeepCopy() *InstancePoolLoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolLoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolLoadBalancersParameters) DeepCopyInto(out *InstancePoolLoadBalancersParameters) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.VnicSelection != nil {
		in, out := &in.VnicSelection, &out.VnicSelection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolLoadBalancersParameters.
func (in *InstancePoolLoadBalancersParameters) DeepCopy() *InstancePoolLoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolLoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolObservation) DeepCopyInto(out *InstancePoolObservation) {
	*out = *in
	if in.ActualSize != nil {
		in, out := &in.ActualSize, &out.ActualSize
		*out = new(float64)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDisplayNameFormatter != nil {
		in, out := &in.InstanceDisplayNameFormatter, &out.InstanceDisplayNameFormatter
		*out = new(string)
		**out = **in
	}
	if in.InstanceHostnameFormatter != nil {
		in, out := &in.InstanceHostnameFormatter, &out.InstanceHostnameFormatter
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]InstancePoolLoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfigurations != nil {
		in, out := &in.PlacementConfigurations, &out.PlacementConfigurations
		*out = make([]InstancePoolPlacementConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolObservation.
func (in *InstancePoolObservation) DeepCopy() *InstancePoolObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolParameters) DeepCopyInto(out *InstancePoolParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDisplayNameFormatter != nil {
		in, out := &in.InstanceDisplayNameFormatter, &out.InstanceDisplayNameFormatter
		*out = new(string)
		**out = **in
	}
	if in.InstanceHostnameFormatter != nil {
		in, out := &in.InstanceHostnameFormatter, &out.InstanceHostnameFormatter
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]InstancePoolLoadBalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfigurations != nil {
		in, out := &in.PlacementConfigurations, &out.PlacementConfigurations
		*out = make([]InstancePoolPlacementConfigurationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolParameters.
func (in *InstancePoolParameters) DeepCopy() *InstancePoolParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolPlacementConfigurationsInitParameters) DeepCopyInto(out *InstancePoolPlacementConfigurationsInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolPlacementConfigurationsInitParameters.
func (in *InstancePoolPlacementConfigurationsInitParameters) DeepCopy() *InstancePoolPlacementConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolPlacementConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolPlacementConfigurationsObservation) DeepCopyInto(out *InstancePoolPlacementConfigurationsObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolPlacementConfigurationsObservation.
func (in *InstancePoolPlacementConfigurationsObservation) DeepCopy() *InstancePoolPlacementConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolPlacementConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolPlacementConfigurationsParameters) DeepCopyInto(out *InstancePoolPlacementConfigurationsParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolPlacementConfigurationsParameters.
func (in *InstancePoolPlacementConfigurationsParameters) DeepCopy() *InstancePoolPlacementConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolPlacementConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolSpec) DeepCopyInto(out *InstancePoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolSpec.
func (in *InstancePoolSpec) DeepCopy() *InstancePoolSpec {
	if in == nil {
		return nil
	}
	out := new(InstancePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolStatus) DeepCopyInto(out *InstancePoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolStatus.
func (in *InstancePoolStatus) DeepCopy() *InstancePoolStatus {
	if in == nil {
		return nil
	}
	out := new(InstancePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolsInitParameters) DeepCopyInto(out *InstancePoolsInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolsInitParameters.
func (in *InstancePoolsInitParameters) DeepCopy() *InstancePoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolsObservation) DeepCopyInto(out *InstancePoolsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDisplayNameFormatter != nil {
		in, out := &in.InstanceDisplayNameFormatter, &out.InstanceDisplayNameFormatter
		*out = new(string)
		**out = **in
	}
	if in.InstanceHostnameFormatter != nil {
		in, out := &in.InstanceHostnameFormatter, &out.InstanceHostnameFormatter
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]LoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfigurations != nil {
		in, out := &in.PlacementConfigurations, &out.PlacementConfigurations
		*out = make([]PlacementConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolsObservation.
func (in *InstancePoolsObservation) DeepCopy() *InstancePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolsParameters) DeepCopyInto(out *InstancePoolsParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolsParameters.
func (in *InstancePoolsParameters) DeepCopy() *InstancePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReservationConfigsInitParameters) DeepCopyInto(out *InstanceReservationConfigsInitParameters) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.InstanceShape != nil {
		in, out := &in.InstanceShape, &out.InstanceShape
		*out = new(string)
		**out = **in
	}
	if in.InstanceShapeConfig != nil {
		in, out := &in.InstanceShapeConfig, &out.InstanceShapeConfig
		*out = make([]InstanceShapeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservedCount != nil {
		in, out := &in.ReservedCount, &out.ReservedCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReservationConfigsInitParameters.
func (in *InstanceReservationConfigsInitParameters) DeepCopy() *InstanceReservationConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceReservationConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReservationConfigsObservation) DeepCopyInto(out *InstanceReservationConfigsObservation) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.InstanceShape != nil {
		in, out := &in.InstanceShape, &out.InstanceShape
		*out = new(string)
		**out = **in
	}
	if in.InstanceShapeConfig != nil {
		in, out := &in.InstanceShapeConfig, &out.InstanceShapeConfig
		*out = make([]InstanceShapeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservedCount != nil {
		in, out := &in.ReservedCount, &out.ReservedCount
		*out = new(string)
		**out = **in
	}
	if in.UsedCount != nil {
		in, out := &in.UsedCount, &out.UsedCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReservationConfigsObservation.
func (in *InstanceReservationConfigsObservation) DeepCopy() *InstanceReservationConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceReservationConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReservationConfigsParameters) DeepCopyInto(out *InstanceReservationConfigsParameters) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.InstanceShape != nil {
		in, out := &in.InstanceShape, &out.InstanceShape
		*out = new(string)
		**out = **in
	}
	if in.InstanceShapeConfig != nil {
		in, out := &in.InstanceShapeConfig, &out.InstanceShapeConfig
		*out = make([]InstanceShapeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservedCount != nil {
		in, out := &in.ReservedCount, &out.ReservedCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReservationConfigsParameters.
func (in *InstanceReservationConfigsParameters) DeepCopy() *InstanceReservationConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceReservationConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceShapeConfigInitParameters) DeepCopyInto(out *InstanceShapeConfigInitParameters) {
	*out = *in
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceShapeConfigInitParameters.
func (in *InstanceShapeConfigInitParameters) DeepCopy() *InstanceShapeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceShapeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceShapeConfigObservation) DeepCopyInto(out *InstanceShapeConfigObservation) {
	*out = *in
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceShapeConfigObservation.
func (in *InstanceShapeConfigObservation) DeepCopy() *InstanceShapeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceShapeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceShapeConfigParameters) DeepCopyInto(out *InstanceShapeConfigParameters) {
	*out = *in
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceShapeConfigParameters.
func (in *InstanceShapeConfigParameters) DeepCopy() *InstanceShapeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceShapeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceImageFilterDetailsInitParameters) DeepCopyInto(out *InstanceSourceImageFilterDetailsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceImageFilterDetailsInitParameters.
func (in *InstanceSourceImageFilterDetailsInitParameters) DeepCopy() *InstanceSourceImageFilterDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceImageFilterDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceImageFilterDetailsObservation) DeepCopyInto(out *InstanceSourceImageFilterDetailsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceImageFilterDetailsObservation.
func (in *InstanceSourceImageFilterDetailsObservation) DeepCopy() *InstanceSourceImageFilterDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceImageFilterDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceImageFilterDetailsParameters) DeepCopyInto(out *InstanceSourceImageFilterDetailsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceImageFilterDetailsParameters.
func (in *InstanceSourceImageFilterDetailsParameters) DeepCopy() *InstanceSourceImageFilterDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceImageFilterDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *Ipv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *Ipv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(Ipv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *Ipv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *Ipv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(Ipv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchCreateVolumeDetailsInitParameters) DeepCopyInto(out *LaunchCreateVolumeDetailsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeCreationType != nil {
		in, out := &in.VolumeCreationType, &out.VolumeCreationType
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchCreateVolumeDetailsInitParameters.
func (in *LaunchCreateVolumeDetailsInitParameters) DeepCopy() *LaunchCreateVolumeDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchCreateVolumeDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchCreateVolumeDetailsObservation) DeepCopyInto(out *LaunchCreateVolumeDetailsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeCreationType != nil {
		in, out := &in.VolumeCreationType, &out.VolumeCreationType
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchCreateVolumeDetailsObservation.
func (in *LaunchCreateVolumeDetailsObservation) DeepCopy() *LaunchCreateVolumeDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchCreateVolumeDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchCreateVolumeDetailsParameters) DeepCopyInto(out *LaunchCreateVolumeDetailsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeCreationType != nil {
		in, out := &in.VolumeCreationType, &out.VolumeCreationType
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchCreateVolumeDetailsParameters.
func (in *LaunchCreateVolumeDetailsParameters) DeepCopy() *LaunchCreateVolumeDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchCreateVolumeDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigInitParameters) DeepCopyInto(out *LaunchDetailsAgentConfigInitParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]AgentConfigPluginsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigInitParameters.
func (in *LaunchDetailsAgentConfigInitParameters) DeepCopy() *LaunchDetailsAgentConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigObservation) DeepCopyInto(out *LaunchDetailsAgentConfigObservation) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]AgentConfigPluginsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigObservation.
func (in *LaunchDetailsAgentConfigObservation) DeepCopy() *LaunchDetailsAgentConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigParameters) DeepCopyInto(out *LaunchDetailsAgentConfigParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]AgentConfigPluginsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigParameters.
func (in *LaunchDetailsAgentConfigParameters) DeepCopy() *LaunchDetailsAgentConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigPluginsConfigInitParameters) DeepCopyInto(out *LaunchDetailsAgentConfigPluginsConfigInitParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigPluginsConfigInitParameters.
func (in *LaunchDetailsAgentConfigPluginsConfigInitParameters) DeepCopy() *LaunchDetailsAgentConfigPluginsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigPluginsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigPluginsConfigObservation) DeepCopyInto(out *LaunchDetailsAgentConfigPluginsConfigObservation) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigPluginsConfigObservation.
func (in *LaunchDetailsAgentConfigPluginsConfigObservation) DeepCopy() *LaunchDetailsAgentConfigPluginsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigPluginsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigPluginsConfigParameters) DeepCopyInto(out *LaunchDetailsAgentConfigPluginsConfigParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigPluginsConfigParameters.
func (in *LaunchDetailsAgentConfigPluginsConfigParameters) DeepCopy() *LaunchDetailsAgentConfigPluginsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigPluginsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAvailabilityConfigInitParameters) DeepCopyInto(out *LaunchDetailsAvailabilityConfigInitParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAvailabilityConfigInitParameters.
func (in *LaunchDetailsAvailabilityConfigInitParameters) DeepCopy() *LaunchDetailsAvailabilityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAvailabilityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAvailabilityConfigObservation) DeepCopyInto(out *LaunchDetailsAvailabilityConfigObservation) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAvailabilityConfigObservation.
func (in *LaunchDetailsAvailabilityConfigObservation) DeepCopy() *LaunchDetailsAvailabilityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAvailabilityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAvailabilityConfigParameters) DeepCopyInto(out *LaunchDetailsAvailabilityConfigParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAvailabilityConfigParameters.
func (in *LaunchDetailsAvailabilityConfigParameters) DeepCopy() *LaunchDetailsAvailabilityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAvailabilityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsInitParameters) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsInitParameters.
func (in *LaunchDetailsCreateVnicDetailsInitParameters) DeepCopy() *LaunchDetailsCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsObservation) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsObservation.
func (in *LaunchDetailsCreateVnicDetailsObservation) DeepCopy() *LaunchDetailsCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsParameters) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsParameters.
func (in *LaunchDetailsCreateVnicDetailsParameters) DeepCopy() *LaunchDetailsCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsInitParameters) DeepCopyInto(out *LaunchDetailsInitParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]LaunchDetailsAgentConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]LaunchDetailsAvailabilityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]LaunchDetailsCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]LaunchDetailsInstanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]LaunchDetailsLaunchOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]LaunchDetailsLicensingConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]LaunchDetailsPlatformConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]LaunchDetailsPreemptibleInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]LaunchDetailsShapeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]LaunchDetailsSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsInitParameters.
func (in *LaunchDetailsInitParameters) DeepCopy() *LaunchDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsInstanceOptionsInitParameters) DeepCopyInto(out *LaunchDetailsInstanceOptionsInitParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsInstanceOptionsInitParameters.
func (in *LaunchDetailsInstanceOptionsInitParameters) DeepCopy() *LaunchDetailsInstanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsInstanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsInstanceOptionsObservation) DeepCopyInto(out *LaunchDetailsInstanceOptionsObservation) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsInstanceOptionsObservation.
func (in *LaunchDetailsInstanceOptionsObservation) DeepCopy() *LaunchDetailsInstanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsInstanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsInstanceOptionsParameters) DeepCopyInto(out *LaunchDetailsInstanceOptionsParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsInstanceOptionsParameters.
func (in *LaunchDetailsInstanceOptionsParameters) DeepCopy() *LaunchDetailsInstanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsInstanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLaunchOptionsInitParameters) DeepCopyInto(out *LaunchDetailsLaunchOptionsInitParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLaunchOptionsInitParameters.
func (in *LaunchDetailsLaunchOptionsInitParameters) DeepCopy() *LaunchDetailsLaunchOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLaunchOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLaunchOptionsObservation) DeepCopyInto(out *LaunchDetailsLaunchOptionsObservation) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLaunchOptionsObservation.
func (in *LaunchDetailsLaunchOptionsObservation) DeepCopy() *LaunchDetailsLaunchOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLaunchOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLaunchOptionsParameters) DeepCopyInto(out *LaunchDetailsLaunchOptionsParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLaunchOptionsParameters.
func (in *LaunchDetailsLaunchOptionsParameters) DeepCopy() *LaunchDetailsLaunchOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLaunchOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLicensingConfigsInitParameters) DeepCopyInto(out *LaunchDetailsLicensingConfigsInitParameters) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLicensingConfigsInitParameters.
func (in *LaunchDetailsLicensingConfigsInitParameters) DeepCopy() *LaunchDetailsLicensingConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLicensingConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLicensingConfigsObservation) DeepCopyInto(out *LaunchDetailsLicensingConfigsObservation) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLicensingConfigsObservation.
func (in *LaunchDetailsLicensingConfigsObservation) DeepCopy() *LaunchDetailsLicensingConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLicensingConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLicensingConfigsParameters) DeepCopyInto(out *LaunchDetailsLicensingConfigsParameters) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLicensingConfigsParameters.
func (in *LaunchDetailsLicensingConfigsParameters) DeepCopy() *LaunchDetailsLicensingConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLicensingConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsObservation) DeepCopyInto(out *LaunchDetailsObservation) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]LaunchDetailsAgentConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]LaunchDetailsAvailabilityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]LaunchDetailsCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]LaunchDetailsInstanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]LaunchDetailsLaunchOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]LaunchDetailsLicensingConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]LaunchDetailsPlatformConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]LaunchDetailsPreemptibleInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]LaunchDetailsShapeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]LaunchDetailsSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsObservation.
func (in *LaunchDetailsObservation) DeepCopy() *LaunchDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsParameters) DeepCopyInto(out *LaunchDetailsParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]LaunchDetailsAgentConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]LaunchDetailsAvailabilityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]LaunchDetailsCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]LaunchDetailsInstanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]LaunchDetailsLaunchOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]LaunchDetailsLicensingConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]LaunchDetailsPlatformConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]LaunchDetailsPreemptibleInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]LaunchDetailsShapeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]LaunchDetailsSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsParameters.
func (in *LaunchDetailsParameters) DeepCopy() *LaunchDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPlatformConfigInitParameters) DeepCopyInto(out *LaunchDetailsPlatformConfigInitParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPlatformConfigInitParameters.
func (in *LaunchDetailsPlatformConfigInitParameters) DeepCopy() *LaunchDetailsPlatformConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPlatformConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPlatformConfigObservation) DeepCopyInto(out *LaunchDetailsPlatformConfigObservation) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPlatformConfigObservation.
func (in *LaunchDetailsPlatformConfigObservation) DeepCopy() *LaunchDetailsPlatformConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPlatformConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPlatformConfigParameters) DeepCopyInto(out *LaunchDetailsPlatformConfigParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPlatformConfigParameters.
func (in *LaunchDetailsPlatformConfigParameters) DeepCopy() *LaunchDetailsPlatformConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPlatformConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigInitParameters) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigInitParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptibleInstanceConfigPreemptionActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigInitParameters.
func (in *LaunchDetailsPreemptibleInstanceConfigInitParameters) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigObservation) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigObservation) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptibleInstanceConfigPreemptionActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigObservation.
func (in *LaunchDetailsPreemptibleInstanceConfigObservation) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigParameters) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptibleInstanceConfigPreemptionActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigParameters.
func (in *LaunchDetailsPreemptibleInstanceConfigParameters) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsShapeConfigInitParameters) DeepCopyInto(out *LaunchDetailsShapeConfigInitParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsShapeConfigInitParameters.
func (in *LaunchDetailsShapeConfigInitParameters) DeepCopy() *LaunchDetailsShapeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsShapeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsShapeConfigObservation) DeepCopyInto(out *LaunchDetailsShapeConfigObservation) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsShapeConfigObservation.
func (in *LaunchDetailsShapeConfigObservation) DeepCopy() *LaunchDetailsShapeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsShapeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsShapeConfigParameters) DeepCopyInto(out *LaunchDetailsShapeConfigParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsShapeConfigParameters.
func (in *LaunchDetailsShapeConfigParameters) DeepCopy() *LaunchDetailsShapeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsShapeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsInitParameters) DeepCopyInto(out *LaunchDetailsSourceDetailsInitParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]SourceDetailsInstanceSourceImageFilterDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsInitParameters.
func (in *LaunchDetailsSourceDetailsInitParameters) DeepCopy() *LaunchDetailsSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters) DeepCopyInto(out *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters) DeepCopy() *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation) DeepCopyInto(out *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation) DeepCopy() *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters) DeepCopyInto(out *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters) DeepCopy() *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsObservation) DeepCopyInto(out *LaunchDetailsSourceDetailsObservation) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]SourceDetailsInstanceSourceImageFilterDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsObservation.
func (in *LaunchDetailsSourceDetailsObservation) DeepCopy() *LaunchDetailsSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsParameters) DeepCopyInto(out *LaunchDetailsSourceDetailsParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]SourceDetailsInstanceSourceImageFilterDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsParameters.
func (in *LaunchDetailsSourceDetailsParameters) DeepCopy() *LaunchDetailsSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchOptionsInitParameters) DeepCopyInto(out *LaunchOptionsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchOptionsInitParameters.
func (in *LaunchOptionsInitParameters) DeepCopy() *LaunchOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchOptionsObservation) DeepCopyInto(out *LaunchOptionsObservation) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchOptionsObservation.
func (in *LaunchOptionsObservation) DeepCopy() *LaunchOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchOptionsParameters) DeepCopyInto(out *LaunchOptionsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchOptionsParameters.
func (in *LaunchOptionsParameters) DeepCopy() *LaunchOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchVolumeAttachmentsInitParameters) DeepCopyInto(out *LaunchVolumeAttachmentsInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.LaunchCreateVolumeDetails != nil {
		in, out := &in.LaunchCreateVolumeDetails, &out.LaunchCreateVolumeDetails
		*out = make([]LaunchCreateVolumeDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchVolumeAttachmentsInitParameters.
func (in *LaunchVolumeAttachmentsInitParameters) DeepCopy() *LaunchVolumeAttachmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchVolumeAttachmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchVolumeAttachmentsObservation) DeepCopyInto(out *LaunchVolumeAttachmentsObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.LaunchCreateVolumeDetails != nil {
		in, out := &in.LaunchCreateVolumeDetails, &out.LaunchCreateVolumeDetails
		*out = make([]LaunchCreateVolumeDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchVolumeAttachmentsObservation.
func (in *LaunchVolumeAttachmentsObservation) DeepCopy() *LaunchVolumeAttachmentsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchVolumeAttachmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchVolumeAttachmentsParameters) DeepCopyInto(out *LaunchVolumeAttachmentsParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.LaunchCreateVolumeDetails != nil {
		in, out := &in.LaunchCreateVolumeDetails, &out.LaunchCreateVolumeDetails
		*out = make([]LaunchCreateVolumeDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchVolumeAttachmentsParameters.
func (in *LaunchVolumeAttachmentsParameters) DeepCopy() *LaunchVolumeAttachmentsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchVolumeAttachmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicensingConfigsInitParameters) DeepCopyInto(out *LicensingConfigsInitParameters) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicensingConfigsInitParameters.
func (in *LicensingConfigsInitParameters) DeepCopy() *LicensingConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LicensingConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicensingConfigsObservation) DeepCopyInto(out *LicensingConfigsObservation) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicensingConfigsObservation.
func (in *LicensingConfigsObservation) DeepCopy() *LicensingConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(LicensingConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicensingConfigsParameters) DeepCopyInto(out *LicensingConfigsParameters) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicensingConfigsParameters.
func (in *LicensingConfigsParameters) DeepCopy() *LicensingConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(LicensingConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendsInitParameters) DeepCopyInto(out *LoadBalancerBackendsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendsInitParameters.
func (in *LoadBalancerBackendsInitParameters) DeepCopy() *LoadBalancerBackendsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendsObservation) DeepCopyInto(out *LoadBalancerBackendsObservation) {
	*out = *in
	if in.BackendHealthStatus != nil {
		in, out := &in.BackendHealthStatus, &out.BackendHealthStatus
		*out = new(string)
		**out = **in
	}
	if in.BackendName != nil {
		in, out := &in.BackendName, &out.BackendName
		*out = new(string)
		**out = **in
	}
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendsObservation.
func (in *LoadBalancerBackendsObservation) DeepCopy() *LoadBalancerBackendsObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendsParameters) DeepCopyInto(out *LoadBalancerBackendsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendsParameters.
func (in *LoadBalancerBackendsParameters) DeepCopy() *LoadBalancerBackendsParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersInitParameters) DeepCopyInto(out *LoadBalancersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersInitParameters.
func (in *LoadBalancersInitParameters) DeepCopy() *LoadBalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersObservation) DeepCopyInto(out *LoadBalancersObservation) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.VnicSelection != nil {
		in, out := &in.VnicSelection, &out.VnicSelection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersObservation.
func (in *LoadBalancersObservation) DeepCopy() *LoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersParameters) DeepCopyInto(out *LoadBalancersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersParameters.
func (in *LoadBalancersParameters) DeepCopy() *LoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsBlockVolumesInitParameters) DeepCopyInto(out *OptionsBlockVolumesInitParameters) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]BlockVolumesAttachDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]BlockVolumesCreateDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsBlockVolumesInitParameters.
func (in *OptionsBlockVolumesInitParameters) DeepCopy() *OptionsBlockVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsBlockVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsBlockVolumesObservation) DeepCopyInto(out *OptionsBlockVolumesObservation) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]BlockVolumesAttachDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]BlockVolumesCreateDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsBlockVolumesObservation.
func (in *OptionsBlockVolumesObservation) DeepCopy() *OptionsBlockVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsBlockVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsBlockVolumesParameters) DeepCopyInto(out *OptionsBlockVolumesParameters) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]BlockVolumesAttachDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]BlockVolumesCreateDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsBlockVolumesParameters.
func (in *OptionsBlockVolumesParameters) DeepCopy() *OptionsBlockVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsBlockVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsInitParameters) DeepCopyInto(out *OptionsInitParameters) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]OptionsBlockVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]OptionsLaunchDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]SecondaryVnicsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsInitParameters.
func (in *OptionsInitParameters) DeepCopy() *OptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAgentConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsAgentConfigInitParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]LaunchDetailsAgentConfigPluginsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAgentConfigInitParameters.
func (in *OptionsLaunchDetailsAgentConfigInitParameters) DeepCopy() *OptionsLaunchDetailsAgentConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAgentConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAgentConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsAgentConfigObservation) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]LaunchDetailsAgentConfigPluginsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAgentConfigObservation.
func (in *OptionsLaunchDetailsAgentConfigObservation) DeepCopy() *OptionsLaunchDetailsAgentConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAgentConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAgentConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsAgentConfigParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]LaunchDetailsAgentConfigPluginsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAgentConfigParameters.
func (in *OptionsLaunchDetailsAgentConfigParameters) DeepCopy() *OptionsLaunchDetailsAgentConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAgentConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAvailabilityConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsAvailabilityConfigInitParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAvailabilityConfigInitParameters.
func (in *OptionsLaunchDetailsAvailabilityConfigInitParameters) DeepCopy() *OptionsLaunchDetailsAvailabilityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAvailabilityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAvailabilityConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsAvailabilityConfigObservation) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAvailabilityConfigObservation.
func (in *OptionsLaunchDetailsAvailabilityConfigObservation) DeepCopy() *OptionsLaunchDetailsAvailabilityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAvailabilityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAvailabilityConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsAvailabilityConfigParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAvailabilityConfigParameters.
func (in *OptionsLaunchDetailsAvailabilityConfigParameters) DeepCopy() *OptionsLaunchDetailsAvailabilityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAvailabilityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsInitParameters.
func (in *OptionsLaunchDetailsCreateVnicDetailsInitParameters) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsObservation) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsObservation.
func (in *OptionsLaunchDetailsCreateVnicDetailsObservation) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsParameters) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsParameters.
func (in *OptionsLaunchDetailsCreateVnicDetailsParameters) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsInitParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]OptionsLaunchDetailsAgentConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]OptionsLaunchDetailsAvailabilityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]OptionsLaunchDetailsInstanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]OptionsLaunchDetailsLaunchOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]OptionsLaunchDetailsLicensingConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]OptionsLaunchDetailsPlatformConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]OptionsLaunchDetailsShapeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]OptionsLaunchDetailsSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsInitParameters.
func (in *OptionsLaunchDetailsInitParameters) DeepCopy() *OptionsLaunchDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsInstanceOptionsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsInstanceOptionsInitParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsInstanceOptionsInitParameters.
func (in *OptionsLaunchDetailsInstanceOptionsInitParameters) DeepCopy() *OptionsLaunchDetailsInstanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsInstanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsInstanceOptionsObservation) DeepCopyInto(out *OptionsLaunchDetailsInstanceOptionsObservation) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsInstanceOptionsObservation.
func (in *OptionsLaunchDetailsInstanceOptionsObservation) DeepCopy() *OptionsLaunchDetailsInstanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsInstanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsInstanceOptionsParameters) DeepCopyInto(out *OptionsLaunchDetailsInstanceOptionsParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsInstanceOptionsParameters.
func (in *OptionsLaunchDetailsInstanceOptionsParameters) DeepCopy() *OptionsLaunchDetailsInstanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsInstanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLaunchOptionsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsLaunchOptionsInitParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLaunchOptionsInitParameters.
func (in *OptionsLaunchDetailsLaunchOptionsInitParameters) DeepCopy() *OptionsLaunchDetailsLaunchOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLaunchOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLaunchOptionsObservation) DeepCopyInto(out *OptionsLaunchDetailsLaunchOptionsObservation) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLaunchOptionsObservation.
func (in *OptionsLaunchDetailsLaunchOptionsObservation) DeepCopy() *OptionsLaunchDetailsLaunchOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLaunchOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLaunchOptionsParameters) DeepCopyInto(out *OptionsLaunchDetailsLaunchOptionsParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLaunchOptionsParameters.
func (in *OptionsLaunchDetailsLaunchOptionsParameters) DeepCopy() *OptionsLaunchDetailsLaunchOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLaunchOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLicensingConfigsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsLicensingConfigsInitParameters) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLicensingConfigsInitParameters.
func (in *OptionsLaunchDetailsLicensingConfigsInitParameters) DeepCopy() *OptionsLaunchDetailsLicensingConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLicensingConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLicensingConfigsObservation) DeepCopyInto(out *OptionsLaunchDetailsLicensingConfigsObservation) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLicensingConfigsObservation.
func (in *OptionsLaunchDetailsLicensingConfigsObservation) DeepCopy() *OptionsLaunchDetailsLicensingConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLicensingConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLicensingConfigsParameters) DeepCopyInto(out *OptionsLaunchDetailsLicensingConfigsParameters) {
	*out = *in
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLicensingConfigsParameters.
func (in *OptionsLaunchDetailsLicensingConfigsParameters) DeepCopy() *OptionsLaunchDetailsLicensingConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLicensingConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsObservation) DeepCopyInto(out *OptionsLaunchDetailsObservation) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]OptionsLaunchDetailsAgentConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]OptionsLaunchDetailsAvailabilityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]OptionsLaunchDetailsInstanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]OptionsLaunchDetailsLaunchOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]OptionsLaunchDetailsLicensingConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]OptionsLaunchDetailsPlatformConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]OptionsLaunchDetailsPreemptibleInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]OptionsLaunchDetailsShapeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]OptionsLaunchDetailsSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsObservation.
func (in *OptionsLaunchDetailsObservation) DeepCopy() *OptionsLaunchDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsParameters) DeepCopyInto(out *OptionsLaunchDetailsParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]OptionsLaunchDetailsAgentConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]OptionsLaunchDetailsAvailabilityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]OptionsLaunchDetailsInstanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]OptionsLaunchDetailsLaunchOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingConfigs != nil {
		in, out := &in.LicensingConfigs, &out.LicensingConfigs
		*out = make([]OptionsLaunchDetailsLicensingConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]OptionsLaunchDetailsPlatformConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]OptionsLaunchDetailsPreemptibleInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]OptionsLaunchDetailsShapeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]OptionsLaunchDetailsSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsParameters.
func (in *OptionsLaunchDetailsParameters) DeepCopy() *OptionsLaunchDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPlatformConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsPlatformConfigInitParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPlatformConfigInitParameters.
func (in *OptionsLaunchDetailsPlatformConfigInitParameters) DeepCopy() *OptionsLaunchDetailsPlatformConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPlatformConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPlatformConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsPlatformConfigObservation) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPlatformConfigObservation.
func (in *OptionsLaunchDetailsPlatformConfigObservation) DeepCopy() *OptionsLaunchDetailsPlatformConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPlatformConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPlatformConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsPlatformConfigParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPlatformConfigParameters.
func (in *OptionsLaunchDetailsPlatformConfigParameters) DeepCopy() *OptionsLaunchDetailsPlatformConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPlatformConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters) DeepCopy() *OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsPreemptibleInstanceConfigObservation) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPreemptibleInstanceConfigObservation.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigObservation) DeepCopy() *OptionsLaunchDetailsPreemptibleInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPreemptibleInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsPreemptibleInstanceConfigParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPreemptibleInstanceConfigParameters.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigParameters) DeepCopy() *OptionsLaunchDetailsPreemptibleInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPreemptibleInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsShapeConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsShapeConfigInitParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsShapeConfigInitParameters.
func (in *OptionsLaunchDetailsShapeConfigInitParameters) DeepCopy() *OptionsLaunchDetailsShapeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsShapeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsShapeConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsShapeConfigObservation) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsShapeConfigObservation.
func (in *OptionsLaunchDetailsShapeConfigObservation) DeepCopy() *OptionsLaunchDetailsShapeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsShapeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsShapeConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsShapeConfigParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsShapeConfigParameters.
func (in *OptionsLaunchDetailsShapeConfigParameters) DeepCopy() *OptionsLaunchDetailsShapeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsShapeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsSourceDetailsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsSourceDetailsInitParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsSourceDetailsInitParameters.
func (in *OptionsLaunchDetailsSourceDetailsInitParameters) DeepCopy() *OptionsLaunchDetailsSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsSourceDetailsObservation) DeepCopyInto(out *OptionsLaunchDetailsSourceDetailsObservation) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsSourceDetailsObservation.
func (in *OptionsLaunchDetailsSourceDetailsObservation) DeepCopy() *OptionsLaunchDetailsSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsSourceDetailsParameters) DeepCopyInto(out *OptionsLaunchDetailsSourceDetailsParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsSourceDetailsParameters.
func (in *OptionsLaunchDetailsSourceDetailsParameters) DeepCopy() *OptionsLaunchDetailsSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsObservation) DeepCopyInto(out *OptionsObservation) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]OptionsBlockVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]OptionsLaunchDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]SecondaryVnicsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsObservation.
func (in *OptionsObservation) DeepCopy() *OptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsParameters) DeepCopyInto(out *OptionsParameters) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]OptionsBlockVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]OptionsLaunchDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]SecondaryVnicsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsParameters.
func (in *OptionsParameters) DeepCopy() *OptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationInitParameters) DeepCopyInto(out *PlacementConfigurationInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = new(string)
		**out = **in
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationPrimaryVnicSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationInitParameters.
func (in *PlacementConfigurationInitParameters) DeepCopy() *PlacementConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationObservation) DeepCopyInto(out *PlacementConfigurationObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = new(string)
		**out = **in
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationPrimaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationObservation.
func (in *PlacementConfigurationObservation) DeepCopy() *PlacementConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationParameters) DeepCopyInto(out *PlacementConfigurationParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = new(string)
		**out = **in
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationPrimaryVnicSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationParameters.
func (in *PlacementConfigurationParameters) DeepCopy() *PlacementConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationPrimaryVnicSubnetsInitParameters) DeepCopyInto(out *PlacementConfigurationPrimaryVnicSubnetsInitParameters) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationPrimaryVnicSubnetsInitParameters.
func (in *PlacementConfigurationPrimaryVnicSubnetsInitParameters) DeepCopy() *PlacementConfigurationPrimaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationPrimaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationPrimaryVnicSubnetsObservation) DeepCopyInto(out *PlacementConfigurationPrimaryVnicSubnetsObservation) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationPrimaryVnicSubnetsObservation.
func (in *PlacementConfigurationPrimaryVnicSubnetsObservation) DeepCopy() *PlacementConfigurationPrimaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationPrimaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationPrimaryVnicSubnetsParameters) DeepCopyInto(out *PlacementConfigurationPrimaryVnicSubnetsParameters) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationPrimaryVnicSubnetsParameters.
func (in *PlacementConfigurationPrimaryVnicSubnetsParameters) DeepCopy() *PlacementConfigurationPrimaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationPrimaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsInitParameters) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsInitParameters.
func (in *PlacementConfigurationSecondaryVnicSubnetsInitParameters) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsObservation) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsObservation.
func (in *PlacementConfigurationSecondaryVnicSubnetsObservation) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsParameters) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsParameters.
func (in *PlacementConfigurationSecondaryVnicSubnetsParameters) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsInitParameters) DeepCopyInto(out *PlacementConfigurationsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsInitParameters.
func (in *PlacementConfigurationsInitParameters) DeepCopy() *PlacementConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsObservation) DeepCopyInto(out *PlacementConfigurationsObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PrimaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]SecondaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsObservation.
func (in *PlacementConfigurationsObservation) DeepCopy() *PlacementConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsParameters) DeepCopyInto(out *PlacementConfigurationsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsParameters.
func (in *PlacementConfigurationsParameters) DeepCopy() *PlacementConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsInitParameters) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsInitParameters) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsInitParameters.
func (in *PlacementConfigurationsPrimaryVnicSubnetsInitParameters) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsObservation) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsObservation) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsObservation.
func (in *PlacementConfigurationsPrimaryVnicSubnetsObservation) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsParameters) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsParameters) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsParameters.
func (in *PlacementConfigurationsPrimaryVnicSubnetsParameters) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsInitParameters) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsInitParameters.
func (in *PlacementConfigurationsSecondaryVnicSubnetsInitParameters) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsObservation) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsObservation.
func (in *PlacementConfigurationsSecondaryVnicSubnetsObservation) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsParameters) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsParameters.
func (in *PlacementConfigurationsSecondaryVnicSubnetsParameters) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintDetailsInitParameters) DeepCopyInto(out *PlacementConstraintDetailsInitParameters) {
	*out = *in
	if in.ComputeBareMetalHostID != nil {
		in, out := &in.ComputeBareMetalHostID, &out.ComputeBareMetalHostID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintDetailsInitParameters.
func (in *PlacementConstraintDetailsInitParameters) DeepCopy() *PlacementConstraintDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintDetailsObservation) DeepCopyInto(out *PlacementConstraintDetailsObservation) {
	*out = *in
	if in.ComputeBareMetalHostID != nil {
		in, out := &in.ComputeBareMetalHostID, &out.ComputeBareMetalHostID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintDetailsObservation.
func (in *PlacementConstraintDetailsObservation) DeepCopy() *PlacementConstraintDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintDetailsParameters) DeepCopyInto(out *PlacementConstraintDetailsParameters) {
	*out = *in
	if in.ComputeBareMetalHostID != nil {
		in, out := &in.ComputeBareMetalHostID, &out.ComputeBareMetalHostID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintDetailsParameters.
func (in *PlacementConstraintDetailsParameters) DeepCopy() *PlacementConstraintDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformConfigInitParameters) DeepCopyInto(out *PlatformConfigInitParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformConfigInitParameters.
func (in *PlatformConfigInitParameters) DeepCopy() *PlatformConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlatformConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformConfigObservation) DeepCopyInto(out *PlatformConfigObservation) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformConfigObservation.
func (in *PlatformConfigObservation) DeepCopy() *PlatformConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PlatformConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformConfigParameters) DeepCopyInto(out *PlatformConfigParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformConfigParameters.
func (in *PlatformConfigParameters) DeepCopy() *PlatformConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PlatformConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginsConfigInitParameters) DeepCopyInto(out *PluginsConfigInitParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginsConfigInitParameters.
func (in *PluginsConfigInitParameters) DeepCopy() *PluginsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PluginsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginsConfigObservation) DeepCopyInto(out *PluginsConfigObservation) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginsConfigObservation.
func (in *PluginsConfigObservation) DeepCopy() *PluginsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PluginsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginsConfigParameters) DeepCopyInto(out *PluginsConfigParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginsConfigParameters.
func (in *PluginsConfigParameters) DeepCopy() *PluginsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PluginsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigInitParameters) DeepCopyInto(out *PreemptibleInstanceConfigInitParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptionActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigInitParameters.
func (in *PreemptibleInstanceConfigInitParameters) DeepCopy() *PreemptibleInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigObservation) DeepCopyInto(out *PreemptibleInstanceConfigObservation) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptionActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigObservation.
func (in *PreemptibleInstanceConfigObservation) DeepCopy() *PreemptibleInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigParameters) DeepCopyInto(out *PreemptibleInstanceConfigParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptionActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigParameters.
func (in *PreemptibleInstanceConfigParameters) DeepCopy() *PreemptibleInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigPreemptionActionInitParameters) DeepCopyInto(out *PreemptibleInstanceConfigPreemptionActionInitParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigPreemptionActionInitParameters.
func (in *PreemptibleInstanceConfigPreemptionActionInitParameters) DeepCopy() *PreemptibleInstanceConfigPreemptionActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigPreemptionActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigPreemptionActionObservation) DeepCopyInto(out *PreemptibleInstanceConfigPreemptionActionObservation) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigPreemptionActionObservation.
func (in *PreemptibleInstanceConfigPreemptionActionObservation) DeepCopy() *PreemptibleInstanceConfigPreemptionActionObservation {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigPreemptionActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigPreemptionActionParameters) DeepCopyInto(out *PreemptibleInstanceConfigPreemptionActionParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigPreemptionActionParameters.
func (in *PreemptibleInstanceConfigPreemptionActionParameters) DeepCopy() *PreemptibleInstanceConfigPreemptionActionParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigPreemptionActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptionActionInitParameters) DeepCopyInto(out *PreemptionActionInitParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptionActionInitParameters.
func (in *PreemptionActionInitParameters) DeepCopy() *PreemptionActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptionActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptionActionObservation) DeepCopyInto(out *PreemptionActionObservation) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptionActionObservation.
func (in *PreemptionActionObservation) DeepCopy() *PreemptionActionObservation {
	if in == nil {
		return nil
	}
	out := new(PreemptionActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptionActionParameters) DeepCopyInto(out *PreemptionActionParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptionActionParameters.
func (in *PreemptionActionParameters) DeepCopy() *PreemptionActionParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptionActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsInitParameters) DeepCopyInto(out *PrimaryVnicSubnetsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsInitParameters.
func (in *PrimaryVnicSubnetsInitParameters) DeepCopy() *PrimaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsObservation) DeepCopyInto(out *PrimaryVnicSubnetsObservation) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]Ipv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsObservation.
func (in *PrimaryVnicSubnetsObservation) DeepCopy() *PrimaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsParameters) DeepCopyInto(out *PrimaryVnicSubnetsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsParameters.
func (in *PrimaryVnicSubnetsParameters) DeepCopy() *PrimaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsInitParameters) DeepCopyInto(out *SecondaryVnicSubnetsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsInitParameters.
func (in *SecondaryVnicSubnetsInitParameters) DeepCopy() *SecondaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsObservation) DeepCopyInto(out *SecondaryVnicSubnetsObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsObservation.
func (in *SecondaryVnicSubnetsObservation) DeepCopy() *SecondaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsParameters) DeepCopyInto(out *SecondaryVnicSubnetsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsParameters.
func (in *SecondaryVnicSubnetsParameters) DeepCopy() *SecondaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsInitParameters) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsInitParameters.
func (in *SecondaryVnicsCreateVnicDetailsInitParameters) DeepCopy() *SecondaryVnicsCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsObservation) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsObservation.
func (in *SecondaryVnicsCreateVnicDetailsObservation) DeepCopy() *SecondaryVnicsCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsParameters) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecurityAttributes != nil {
		in, out := &in.SecurityAttributes, &out.SecurityAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsParameters.
func (in *SecondaryVnicsCreateVnicDetailsParameters) DeepCopy() *SecondaryVnicsCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsInitParameters) DeepCopyInto(out *SecondaryVnicsInitParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsInitParameters.
func (in *SecondaryVnicsInitParameters) DeepCopy() *SecondaryVnicsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsObservation) DeepCopyInto(out *SecondaryVnicsObservation) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsObservation.
func (in *SecondaryVnicsObservation) DeepCopy() *SecondaryVnicsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsParameters) DeepCopyInto(out *SecondaryVnicsParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsParameters.
func (in *SecondaryVnicsParameters) DeepCopy() *SecondaryVnicsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeConfigInitParameters) DeepCopyInto(out *ShapeConfigInitParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeConfigInitParameters.
func (in *ShapeConfigInitParameters) DeepCopy() *ShapeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShapeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeConfigObservation) DeepCopyInto(out *ShapeConfigObservation) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.GpuDescription != nil {
		in, out := &in.GpuDescription, &out.GpuDescription
		*out = new(string)
		**out = **in
	}
	if in.Gpus != nil {
		in, out := &in.Gpus, &out.Gpus
		*out = new(float64)
		**out = **in
	}
	if in.LocalDiskDescription != nil {
		in, out := &in.LocalDiskDescription, &out.LocalDiskDescription
		*out = new(string)
		**out = **in
	}
	if in.LocalDisks != nil {
		in, out := &in.LocalDisks, &out.LocalDisks
		*out = new(float64)
		**out = **in
	}
	if in.LocalDisksTotalSizeInGbs != nil {
		in, out := &in.LocalDisksTotalSizeInGbs, &out.LocalDisksTotalSizeInGbs
		*out = new(float64)
		**out = **in
	}
	if in.MaxVnicAttachments != nil {
		in, out := &in.MaxVnicAttachments, &out.MaxVnicAttachments
		*out = new(float64)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.NetworkingBandwidthInGbps != nil {
		in, out := &in.NetworkingBandwidthInGbps, &out.NetworkingBandwidthInGbps
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.ProcessorDescription != nil {
		in, out := &in.ProcessorDescription, &out.ProcessorDescription
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeConfigObservation.
func (in *ShapeConfigObservation) DeepCopy() *ShapeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ShapeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeConfigParameters) DeepCopyInto(out *ShapeConfigParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeConfigParameters.
func (in *ShapeConfigParameters) DeepCopy() *ShapeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ShapeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagement) DeepCopyInto(out *ShapeManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagement.
func (in *ShapeManagement) DeepCopy() *ShapeManagement {
	if in == nil {
		return nil
	}
	out := new(ShapeManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShapeManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementInitParameters) DeepCopyInto(out *ShapeManagementInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ShapeName != nil {
		in, out := &in.ShapeName, &out.ShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementInitParameters.
func (in *ShapeManagementInitParameters) DeepCopy() *ShapeManagementInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementList) DeepCopyInto(out *ShapeManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShapeManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementList.
func (in *ShapeManagementList) DeepCopy() *ShapeManagementList {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShapeManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementObservation) DeepCopyInto(out *ShapeManagementObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ShapeName != nil {
		in, out := &in.ShapeName, &out.ShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementObservation.
func (in *ShapeManagementObservation) DeepCopy() *ShapeManagementObservation {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementParameters) DeepCopyInto(out *ShapeManagementParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ShapeName != nil {
		in, out := &in.ShapeName, &out.ShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementParameters.
func (in *ShapeManagementParameters) DeepCopy() *ShapeManagementParameters {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementSpec) DeepCopyInto(out *ShapeManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementSpec.
func (in *ShapeManagementSpec) DeepCopy() *ShapeManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementStatus) DeepCopyInto(out *ShapeManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementStatus.
func (in *ShapeManagementStatus) DeepCopy() *ShapeManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInitParameters) DeepCopyInto(out *SourceDetailsInitParameters) {
	*out = *in
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]InstanceSourceImageFilterDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPreserveBootVolumeEnabled != nil {
		in, out := &in.IsPreserveBootVolumeEnabled, &out.IsPreserveBootVolumeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceIDRef != nil {
		in, out := &in.SourceIDRef, &out.SourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIDSelector != nil {
		in, out := &in.SourceIDSelector, &out.SourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInitParameters.
func (in *SourceDetailsInitParameters) DeepCopy() *SourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInstanceSourceImageFilterDetailsInitParameters) DeepCopyInto(out *SourceDetailsInstanceSourceImageFilterDetailsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInstanceSourceImageFilterDetailsInitParameters.
func (in *SourceDetailsInstanceSourceImageFilterDetailsInitParameters) DeepCopy() *SourceDetailsInstanceSourceImageFilterDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInstanceSourceImageFilterDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInstanceSourceImageFilterDetailsObservation) DeepCopyInto(out *SourceDetailsInstanceSourceImageFilterDetailsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInstanceSourceImageFilterDetailsObservation.
func (in *SourceDetailsInstanceSourceImageFilterDetailsObservation) DeepCopy() *SourceDetailsInstanceSourceImageFilterDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInstanceSourceImageFilterDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInstanceSourceImageFilterDetailsParameters) DeepCopyInto(out *SourceDetailsInstanceSourceImageFilterDetailsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInstanceSourceImageFilterDetailsParameters.
func (in *SourceDetailsInstanceSourceImageFilterDetailsParameters) DeepCopy() *SourceDetailsInstanceSourceImageFilterDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInstanceSourceImageFilterDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsObservation) DeepCopyInto(out *SourceDetailsObservation) {
	*out = *in
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]InstanceSourceImageFilterDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPreserveBootVolumeEnabled != nil {
		in, out := &in.IsPreserveBootVolumeEnabled, &out.IsPreserveBootVolumeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsObservation.
func (in *SourceDetailsObservation) DeepCopy() *SourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsParameters) DeepCopyInto(out *SourceDetailsParameters) {
	*out = *in
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]InstanceSourceImageFilterDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPreserveBootVolumeEnabled != nil {
		in, out := &in.IsPreserveBootVolumeEnabled, &out.IsPreserveBootVolumeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceIDRef != nil {
		in, out := &in.SourceIDRef, &out.SourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIDSelector != nil {
		in, out := &in.SourceIDSelector, &out.SourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsParameters.
func (in *SourceDetailsParameters) DeepCopy() *SourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}
