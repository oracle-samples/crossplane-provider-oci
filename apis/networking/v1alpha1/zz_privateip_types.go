/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PrivateIpInitParameters struct {

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The hostname for the private IP. Used for DNS. The value is the hostname portion of the private IP's fully qualified domain name (FQDN) (for example, bminstance1 in FQDN bminstance1.subnet123.vcn1.oraclevcn.com). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel *string `json:"hostnameLabel,omitempty" tf:"hostname_label,omitempty"`

	// A private IP address of your choice. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet.  Example: 10.0.3.3
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// (Updatable) Lifetime of the IP address. There are two types of IPv6 IPs:
	Lifetime *string `json:"lifetime,omitempty" tf:"lifetime,omitempty"`

	// (Updatable) The OCID of the route table the IP address or VNIC will use. For more information, see Source Based Routing.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The OCID of the subnet from which the private IP is to be drawn. The IP address, if supplied, must be valid for the given subnet.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Use this attribute only with the Oracle Cloud VMware Solution.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.Vlan
	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	// Reference to a Vlan in networking to populate vlanId.
	// +kubebuilder:validation:Optional
	VlanIDRef *v1.Reference `json:"vlanIdRef,omitempty" tf:"-"`

	// Selector for a Vlan in networking to populate vlanId.
	// +kubebuilder:validation:Optional
	VlanIDSelector *v1.Selector `json:"vlanIdSelector,omitempty" tf:"-"`

	// (Updatable) The OCID of the VNIC to assign the private IP to. The VNIC and private IP must be in the same subnet.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.VnicAttachment
	VnicID *string `json:"vnicId,omitempty" tf:"vnic_id,omitempty"`

	// Reference to a VnicAttachment in networking to populate vnicId.
	// +kubebuilder:validation:Optional
	VnicIDRef *v1.Reference `json:"vnicIdRef,omitempty" tf:"-"`

	// Selector for a VnicAttachment in networking to populate vnicId.
	// +kubebuilder:validation:Optional
	VnicIDSelector *v1.Selector `json:"vnicIdSelector,omitempty" tf:"-"`
}

type PrivateIpObservation struct {

	// The private IP's availability domain. This attribute will be null if this is a secondary private IP assigned to a VNIC that is in a regional subnet.  Example: Uocm:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// The OCID of the compartment containing the private IP.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The hostname for the private IP. Used for DNS. The value is the hostname portion of the private IP's fully qualified domain name (FQDN) (for example, bminstance1 in FQDN bminstance1.subnet123.vcn1.oraclevcn.com). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	HostnameLabel *string `json:"hostnameLabel,omitempty" tf:"hostname_label,omitempty"`

	// The private IP's Oracle ID (OCID).
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A private IP address of your choice. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet.  Example: 10.0.3.3
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// State of the IP address. If an IP address is assigned to a VNIC it is ASSIGNED, otherwise it is AVAILABLE.
	IPState *string `json:"ipState,omitempty" tf:"ip_state,omitempty"`

	// Whether this private IP is the primary one on the VNIC. Primary private IPs are unassigned and deleted automatically when the VNIC is terminated.  Example: true
	IsPrimary *bool `json:"isPrimary,omitempty" tf:"is_primary,omitempty"`

	IsReserved *bool `json:"isReserved,omitempty" tf:"is_reserved,omitempty"`

	// (Updatable) Lifetime of the IP address. There are two types of IPv6 IPs:
	Lifetime *string `json:"lifetime,omitempty" tf:"lifetime,omitempty"`

	// (Updatable) The OCID of the route table the IP address or VNIC will use. For more information, see Source Based Routing.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The OCID of the subnet from which the private IP is to be drawn. The IP address, if supplied, must be valid for the given subnet.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The date and time the private IP was created, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// Use this attribute only with the Oracle Cloud VMware Solution.
	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	// (Updatable) The OCID of the VNIC to assign the private IP to. The VNIC and private IP must be in the same subnet.
	VnicID *string `json:"vnicId,omitempty" tf:"vnic_id,omitempty"`
}

type PrivateIpParameters struct {

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The hostname for the private IP. Used for DNS. The value is the hostname portion of the private IP's fully qualified domain name (FQDN) (for example, bminstance1 in FQDN bminstance1.subnet123.vcn1.oraclevcn.com). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
	// +kubebuilder:validation:Optional
	HostnameLabel *string `json:"hostnameLabel,omitempty" tf:"hostname_label,omitempty"`

	// A private IP address of your choice. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet.  Example: 10.0.3.3
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// (Updatable) Lifetime of the IP address. There are two types of IPv6 IPs:
	// +kubebuilder:validation:Optional
	Lifetime *string `json:"lifetime,omitempty" tf:"lifetime,omitempty"`

	// (Updatable) The OCID of the route table the IP address or VNIC will use. For more information, see Source Based Routing.
	// +kubebuilder:validation:Optional
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The OCID of the subnet from which the private IP is to be drawn. The IP address, if supplied, must be valid for the given subnet.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Use this attribute only with the Oracle Cloud VMware Solution.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.Vlan
	// +kubebuilder:validation:Optional
	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	// Reference to a Vlan in networking to populate vlanId.
	// +kubebuilder:validation:Optional
	VlanIDRef *v1.Reference `json:"vlanIdRef,omitempty" tf:"-"`

	// Selector for a Vlan in networking to populate vlanId.
	// +kubebuilder:validation:Optional
	VlanIDSelector *v1.Selector `json:"vlanIdSelector,omitempty" tf:"-"`

	// (Updatable) The OCID of the VNIC to assign the private IP to. The VNIC and private IP must be in the same subnet.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.VnicAttachment
	// +kubebuilder:validation:Optional
	VnicID *string `json:"vnicId,omitempty" tf:"vnic_id,omitempty"`

	// Reference to a VnicAttachment in networking to populate vnicId.
	// +kubebuilder:validation:Optional
	VnicIDRef *v1.Reference `json:"vnicIdRef,omitempty" tf:"-"`

	// Selector for a VnicAttachment in networking to populate vnicId.
	// +kubebuilder:validation:Optional
	VnicIDSelector *v1.Selector `json:"vnicIdSelector,omitempty" tf:"-"`
}

// PrivateIpSpec defines the desired state of PrivateIp
type PrivateIpSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PrivateIpParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PrivateIpInitParameters `json:"initProvider,omitempty"`
}

// PrivateIpStatus defines the observed state of PrivateIp.
type PrivateIpStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrivateIpObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PrivateIp is the Schema for the PrivateIps API. Provides the Private Ip resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type PrivateIp struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PrivateIpSpec   `json:"spec"`
	Status            PrivateIpStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrivateIpList contains a list of PrivateIps
type PrivateIpList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrivateIp `json:"items"`
}

// Repository type metadata.
var (
	PrivateIp_Kind             = "PrivateIp"
	PrivateIp_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrivateIp_Kind}.String()
	PrivateIp_KindAPIVersion   = PrivateIp_Kind + "." + CRDGroupVersion.String()
	PrivateIp_GroupVersionKind = CRDGroupVersion.WithKind(PrivateIp_Kind)
)

func init() {
	SchemeBuilder.Register(&PrivateIp{}, &PrivateIpList{})
}
