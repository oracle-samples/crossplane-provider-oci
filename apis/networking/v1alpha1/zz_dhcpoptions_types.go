/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DhcpOptionsInitParameters struct {

	// (Updatable) The OCID of the compartment to contain the set of DHCP options.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) The search domain name type of DHCP options
	DomainNameType *string `json:"domainNameType,omitempty" tf:"domain_name_type,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) A set of DHCP options.
	Options []OptionsInitParameters `json:"options,omitempty" tf:"options,omitempty"`

	// The OCID of the VCN the set of DHCP options belongs to.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.Vcn
	VcnID *string `json:"vcnId,omitempty" tf:"vcn_id,omitempty"`

	// Reference to a Vcn in networking to populate vcnId.
	// +kubebuilder:validation:Optional
	VcnIDRef *v1.Reference `json:"vcnIdRef,omitempty" tf:"-"`

	// Selector for a Vcn in networking to populate vcnId.
	// +kubebuilder:validation:Optional
	VcnIDSelector *v1.Selector `json:"vcnIdSelector,omitempty" tf:"-"`
}

type DhcpOptionsObservation struct {

	// (Updatable) The OCID of the compartment to contain the set of DHCP options.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) The search domain name type of DHCP options
	DomainNameType *string `json:"domainNameType,omitempty" tf:"domain_name_type,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// Oracle ID (OCID) for the set of DHCP options.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Updatable) A set of DHCP options.
	Options []OptionsObservation `json:"options,omitempty" tf:"options,omitempty"`

	// The current state of the set of DHCP options.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Date and time the set of DHCP options was created, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The OCID of the VCN the set of DHCP options belongs to.
	VcnID *string `json:"vcnId,omitempty" tf:"vcn_id,omitempty"`
}

type DhcpOptionsParameters struct {

	// (Updatable) The OCID of the compartment to contain the set of DHCP options.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) The search domain name type of DHCP options
	// +kubebuilder:validation:Optional
	DomainNameType *string `json:"domainNameType,omitempty" tf:"domain_name_type,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) A set of DHCP options.
	// +kubebuilder:validation:Optional
	Options []OptionsParameters `json:"options,omitempty" tf:"options,omitempty"`

	// The OCID of the VCN the set of DHCP options belongs to.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.Vcn
	// +kubebuilder:validation:Optional
	VcnID *string `json:"vcnId,omitempty" tf:"vcn_id,omitempty"`

	// Reference to a Vcn in networking to populate vcnId.
	// +kubebuilder:validation:Optional
	VcnIDRef *v1.Reference `json:"vcnIdRef,omitempty" tf:"-"`

	// Selector for a Vcn in networking to populate vcnId.
	// +kubebuilder:validation:Optional
	VcnIDSelector *v1.Selector `json:"vcnIdSelector,omitempty" tf:"-"`
}

type OptionsInitParameters struct {

	// (Applicable when type=DomainNameServer) (Updatable) If you set serverType to CustomDnsServer, specify the IP address of at least one DNS server of your choice (three maximum).
	CustomDNSServers []*string `json:"customDnsServers,omitempty" tf:"custom_dns_servers,omitempty"`

	// (Updatable) A single search domain name according to RFC 952 and RFC 1123. During a DNS query, the OS will append this search domain name to the value being queried.
	SearchDomainNames []*string `json:"searchDomainNames,omitempty" tf:"search_domain_names,omitempty"`

	// (Updatable)
	ServerType *string `json:"serverType,omitempty" tf:"server_type,omitempty"`

	// (Updatable) The specific DHCP option. Either DomainNameServer (for DhcpDnsOption) or SearchDomain (for DhcpSearchDomainOption).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OptionsObservation struct {

	// (Applicable when type=DomainNameServer) (Updatable) If you set serverType to CustomDnsServer, specify the IP address of at least one DNS server of your choice (three maximum).
	CustomDNSServers []*string `json:"customDnsServers,omitempty" tf:"custom_dns_servers,omitempty"`

	// (Updatable) A single search domain name according to RFC 952 and RFC 1123. During a DNS query, the OS will append this search domain name to the value being queried.
	SearchDomainNames []*string `json:"searchDomainNames,omitempty" tf:"search_domain_names,omitempty"`

	// (Updatable)
	ServerType *string `json:"serverType,omitempty" tf:"server_type,omitempty"`

	// (Updatable) The specific DHCP option. Either DomainNameServer (for DhcpDnsOption) or SearchDomain (for DhcpSearchDomainOption).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OptionsParameters struct {

	// (Applicable when type=DomainNameServer) (Updatable) If you set serverType to CustomDnsServer, specify the IP address of at least one DNS server of your choice (three maximum).
	// +kubebuilder:validation:Optional
	CustomDNSServers []*string `json:"customDnsServers,omitempty" tf:"custom_dns_servers,omitempty"`

	// (Updatable) A single search domain name according to RFC 952 and RFC 1123. During a DNS query, the OS will append this search domain name to the value being queried.
	// +kubebuilder:validation:Optional
	SearchDomainNames []*string `json:"searchDomainNames,omitempty" tf:"search_domain_names,omitempty"`

	// (Updatable)
	// +kubebuilder:validation:Optional
	ServerType *string `json:"serverType,omitempty" tf:"server_type,omitempty"`

	// (Updatable) The specific DHCP option. Either DomainNameServer (for DhcpDnsOption) or SearchDomain (for DhcpSearchDomainOption).
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// DhcpOptionsSpec defines the desired state of DhcpOptions
type DhcpOptionsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DhcpOptionsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DhcpOptionsInitParameters `json:"initProvider,omitempty"`
}

// DhcpOptionsStatus defines the observed state of DhcpOptions.
type DhcpOptionsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DhcpOptionsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DhcpOptions is the Schema for the DhcpOptionss API. Provides the Dhcp Options resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type DhcpOptions struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.options) || (has(self.initProvider) && has(self.initProvider.options))",message="spec.forProvider.options is a required parameter"
	Spec   DhcpOptionsSpec   `json:"spec"`
	Status DhcpOptionsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DhcpOptionsList contains a list of DhcpOptionss
type DhcpOptionsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DhcpOptions `json:"items"`
}

// Repository type metadata.
var (
	DhcpOptions_Kind             = "DhcpOptions"
	DhcpOptions_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DhcpOptions_Kind}.String()
	DhcpOptions_KindAPIVersion   = DhcpOptions_Kind + "." + CRDGroupVersion.String()
	DhcpOptions_GroupVersionKind = CRDGroupVersion.WithKind(DhcpOptions_Kind)
)

func init() {
	SchemeBuilder.Register(&DhcpOptions{}, &DhcpOptionsList{})
}
