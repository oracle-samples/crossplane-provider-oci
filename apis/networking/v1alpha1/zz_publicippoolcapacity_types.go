/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PublicIpPoolCapacityInitParameters struct {

	// The OCID of the Byoip Range Id object to which the cidr block belongs.
	ByoipID *string `json:"byoipId,omitempty" tf:"byoip_id,omitempty"`

	// The CIDR IP address range to be added to the Public Ip Pool. Example: 10.0.1.0/24
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The OCID of the pool object created by the current tenancy
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.PublicIpPool
	PublicIPPoolID *string `json:"publicIpPoolId,omitempty" tf:"public_ip_pool_id,omitempty"`

	// Reference to a PublicIpPool in networking to populate publicIpPoolId.
	// +kubebuilder:validation:Optional
	PublicIPPoolIDRef *v1.Reference `json:"publicIpPoolIdRef,omitempty" tf:"-"`

	// Selector for a PublicIpPool in networking to populate publicIpPoolId.
	// +kubebuilder:validation:Optional
	PublicIPPoolIDSelector *v1.Selector `json:"publicIpPoolIdSelector,omitempty" tf:"-"`
}

type PublicIpPoolCapacityObservation struct {

	// The OCID of the Byoip Range Id object to which the cidr block belongs.
	ByoipID *string `json:"byoipId,omitempty" tf:"byoip_id,omitempty"`

	// The CIDR IP address range to be added to the Public Ip Pool. Example: 10.0.1.0/24
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the pool object created by the current tenancy
	PublicIPPoolID *string `json:"publicIpPoolId,omitempty" tf:"public_ip_pool_id,omitempty"`
}

type PublicIpPoolCapacityParameters struct {

	// The OCID of the Byoip Range Id object to which the cidr block belongs.
	// +kubebuilder:validation:Optional
	ByoipID *string `json:"byoipId,omitempty" tf:"byoip_id,omitempty"`

	// The CIDR IP address range to be added to the Public Ip Pool. Example: 10.0.1.0/24
	// +kubebuilder:validation:Optional
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The OCID of the pool object created by the current tenancy
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.PublicIpPool
	// +kubebuilder:validation:Optional
	PublicIPPoolID *string `json:"publicIpPoolId,omitempty" tf:"public_ip_pool_id,omitempty"`

	// Reference to a PublicIpPool in networking to populate publicIpPoolId.
	// +kubebuilder:validation:Optional
	PublicIPPoolIDRef *v1.Reference `json:"publicIpPoolIdRef,omitempty" tf:"-"`

	// Selector for a PublicIpPool in networking to populate publicIpPoolId.
	// +kubebuilder:validation:Optional
	PublicIPPoolIDSelector *v1.Selector `json:"publicIpPoolIdSelector,omitempty" tf:"-"`
}

// PublicIpPoolCapacitySpec defines the desired state of PublicIpPoolCapacity
type PublicIpPoolCapacitySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PublicIpPoolCapacityParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PublicIpPoolCapacityInitParameters `json:"initProvider,omitempty"`
}

// PublicIpPoolCapacityStatus defines the observed state of PublicIpPoolCapacity.
type PublicIpPoolCapacityStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PublicIpPoolCapacityObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PublicIpPoolCapacity is the Schema for the PublicIpPoolCapacitys API. Provides the Public Ip Pool Capacity resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type PublicIpPoolCapacity struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.byoipId) || (has(self.initProvider) && has(self.initProvider.byoipId))",message="spec.forProvider.byoipId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.cidrBlock) || (has(self.initProvider) && has(self.initProvider.cidrBlock))",message="spec.forProvider.cidrBlock is a required parameter"
	Spec   PublicIpPoolCapacitySpec   `json:"spec"`
	Status PublicIpPoolCapacityStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PublicIpPoolCapacityList contains a list of PublicIpPoolCapacitys
type PublicIpPoolCapacityList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PublicIpPoolCapacity `json:"items"`
}

// Repository type metadata.
var (
	PublicIpPoolCapacity_Kind             = "PublicIpPoolCapacity"
	PublicIpPoolCapacity_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PublicIpPoolCapacity_Kind}.String()
	PublicIpPoolCapacity_KindAPIVersion   = PublicIpPoolCapacity_Kind + "." + CRDGroupVersion.String()
	PublicIpPoolCapacity_GroupVersionKind = CRDGroupVersion.WithKind(PublicIpPoolCapacity_Kind)
)

func init() {
	SchemeBuilder.Register(&PublicIpPoolCapacity{}, &PublicIpPoolCapacityList{})
}
