/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LoadBalancerListenerInitParameters struct {

	// (Updatable) The name of the associated backend set.  Example: example_backend_set
	DefaultBackendSetName *string `json:"defaultBackendSetName,omitempty" tf:"default_backend_set_name,omitempty"`

	// (Updatable) IP version associated with the listener.
	IPVersion *string `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// (Updatable) Property to enable/disable PPv2 feature for this listener.
	IsPpv2Enabled *bool `json:"isPpv2Enabled,omitempty" tf:"is_ppv2enabled,omitempty"`

	// (Updatable) The duration for L3IP idle timeout in seconds. Example: 200
	L3IpIdleTimeout *float64 `json:"l3ipIdleTimeout,omitempty" tf:"l3ip_idle_timeout,omitempty"`

	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: example_listener
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The OCID of the network load balancer to update.
	// +crossplane:generate:reference:type=LoadBalancerNetworkLoadBalancer
	NetworkLoadBalancerID *string `json:"networkLoadBalancerId,omitempty" tf:"network_load_balancer_id,omitempty"`

	// Reference to a LoadBalancerNetworkLoadBalancer to populate networkLoadBalancerId.
	// +kubebuilder:validation:Optional
	NetworkLoadBalancerIDRef *v1.Reference `json:"networkLoadBalancerIdRef,omitempty" tf:"-"`

	// Selector for a LoadBalancerNetworkLoadBalancer to populate networkLoadBalancerId.
	// +kubebuilder:validation:Optional
	NetworkLoadBalancerIDSelector *v1.Selector `json:"networkLoadBalancerIdSelector,omitempty" tf:"-"`

	// (Updatable) The communication port for the listener.  Example: 80
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// (Updatable) The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP with the wildcard port. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). "ListNetworkLoadBalancersProtocols" API is deprecated and it will not return the updated values. Use the allowed values for the protocol instead.  Example: TCP
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (Updatable) The duration for TCP idle timeout in seconds. Example: 300
	TCPIdleTimeout *float64 `json:"tcpIdleTimeout,omitempty" tf:"tcp_idle_timeout,omitempty"`

	// (Updatable) The duration for UDP idle timeout in seconds. Example: 120
	UDPIdleTimeout *float64 `json:"udpIdleTimeout,omitempty" tf:"udp_idle_timeout,omitempty"`
}

type LoadBalancerListenerObservation struct {

	// (Updatable) The name of the associated backend set.  Example: example_backend_set
	DefaultBackendSetName *string `json:"defaultBackendSetName,omitempty" tf:"default_backend_set_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Updatable) IP version associated with the listener.
	IPVersion *string `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// (Updatable) Property to enable/disable PPv2 feature for this listener.
	IsPpv2Enabled *bool `json:"isPpv2Enabled,omitempty" tf:"is_ppv2enabled,omitempty"`

	// (Updatable) The duration for L3IP idle timeout in seconds. Example: 200
	L3IpIdleTimeout *float64 `json:"l3ipIdleTimeout,omitempty" tf:"l3ip_idle_timeout,omitempty"`

	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: example_listener
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The OCID of the network load balancer to update.
	NetworkLoadBalancerID *string `json:"networkLoadBalancerId,omitempty" tf:"network_load_balancer_id,omitempty"`

	// (Updatable) The communication port for the listener.  Example: 80
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// (Updatable) The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP with the wildcard port. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). "ListNetworkLoadBalancersProtocols" API is deprecated and it will not return the updated values. Use the allowed values for the protocol instead.  Example: TCP
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (Updatable) The duration for TCP idle timeout in seconds. Example: 300
	TCPIdleTimeout *float64 `json:"tcpIdleTimeout,omitempty" tf:"tcp_idle_timeout,omitempty"`

	// (Updatable) The duration for UDP idle timeout in seconds. Example: 120
	UDPIdleTimeout *float64 `json:"udpIdleTimeout,omitempty" tf:"udp_idle_timeout,omitempty"`
}

type LoadBalancerListenerParameters struct {

	// (Updatable) The name of the associated backend set.  Example: example_backend_set
	// +kubebuilder:validation:Optional
	DefaultBackendSetName *string `json:"defaultBackendSetName,omitempty" tf:"default_backend_set_name,omitempty"`

	// (Updatable) IP version associated with the listener.
	// +kubebuilder:validation:Optional
	IPVersion *string `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// (Updatable) Property to enable/disable PPv2 feature for this listener.
	// +kubebuilder:validation:Optional
	IsPpv2Enabled *bool `json:"isPpv2Enabled,omitempty" tf:"is_ppv2enabled,omitempty"`

	// (Updatable) The duration for L3IP idle timeout in seconds. Example: 200
	// +kubebuilder:validation:Optional
	L3IpIdleTimeout *float64 `json:"l3ipIdleTimeout,omitempty" tf:"l3ip_idle_timeout,omitempty"`

	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: example_listener
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The OCID of the network load balancer to update.
	// +crossplane:generate:reference:type=LoadBalancerNetworkLoadBalancer
	// +kubebuilder:validation:Optional
	NetworkLoadBalancerID *string `json:"networkLoadBalancerId,omitempty" tf:"network_load_balancer_id,omitempty"`

	// Reference to a LoadBalancerNetworkLoadBalancer to populate networkLoadBalancerId.
	// +kubebuilder:validation:Optional
	NetworkLoadBalancerIDRef *v1.Reference `json:"networkLoadBalancerIdRef,omitempty" tf:"-"`

	// Selector for a LoadBalancerNetworkLoadBalancer to populate networkLoadBalancerId.
	// +kubebuilder:validation:Optional
	NetworkLoadBalancerIDSelector *v1.Selector `json:"networkLoadBalancerIdSelector,omitempty" tf:"-"`

	// (Updatable) The communication port for the listener.  Example: 80
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// (Updatable) The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP with the wildcard port. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). "ListNetworkLoadBalancersProtocols" API is deprecated and it will not return the updated values. Use the allowed values for the protocol instead.  Example: TCP
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (Updatable) The duration for TCP idle timeout in seconds. Example: 300
	// +kubebuilder:validation:Optional
	TCPIdleTimeout *float64 `json:"tcpIdleTimeout,omitempty" tf:"tcp_idle_timeout,omitempty"`

	// (Updatable) The duration for UDP idle timeout in seconds. Example: 120
	// +kubebuilder:validation:Optional
	UDPIdleTimeout *float64 `json:"udpIdleTimeout,omitempty" tf:"udp_idle_timeout,omitempty"`
}

// LoadBalancerListenerSpec defines the desired state of LoadBalancerListener
type LoadBalancerListenerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LoadBalancerListenerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LoadBalancerListenerInitParameters `json:"initProvider,omitempty"`
}

// LoadBalancerListenerStatus defines the observed state of LoadBalancerListener.
type LoadBalancerListenerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LoadBalancerListenerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// LoadBalancerListener is the Schema for the LoadBalancerListeners API. Provides the Listener resource in Oracle Cloud Infrastructure Network Load Balancer service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type LoadBalancerListener struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.defaultBackendSetName) || (has(self.initProvider) && has(self.initProvider.defaultBackendSetName))",message="spec.forProvider.defaultBackendSetName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.port) || (has(self.initProvider) && has(self.initProvider.port))",message="spec.forProvider.port is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protocol) || (has(self.initProvider) && has(self.initProvider.protocol))",message="spec.forProvider.protocol is a required parameter"
	Spec   LoadBalancerListenerSpec   `json:"spec"`
	Status LoadBalancerListenerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LoadBalancerListenerList contains a list of LoadBalancerListeners
type LoadBalancerListenerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LoadBalancerListener `json:"items"`
}

// Repository type metadata.
var (
	LoadBalancerListener_Kind             = "LoadBalancerListener"
	LoadBalancerListener_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LoadBalancerListener_Kind}.String()
	LoadBalancerListener_KindAPIVersion   = LoadBalancerListener_Kind + "." + CRDGroupVersion.String()
	LoadBalancerListener_GroupVersionKind = CRDGroupVersion.WithKind(LoadBalancerListener_Kind)
)

func init() {
	SchemeBuilder.Register(&LoadBalancerListener{}, &LoadBalancerListenerList{})
}
