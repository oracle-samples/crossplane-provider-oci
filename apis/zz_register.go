/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/oracle/provider-oci/apis/artifacts/v1alpha1"
	v1alpha1certificatesmanagement "github.com/oracle/provider-oci/apis/certificatesmanagement/v1alpha1"
	v1alpha1containerengine "github.com/oracle/provider-oci/apis/containerengine/v1alpha1"
	v1alpha1core "github.com/oracle/provider-oci/apis/core/v1alpha1"
	v1alpha1dns "github.com/oracle/provider-oci/apis/dns/v1alpha1"
	v1alpha1events "github.com/oracle/provider-oci/apis/events/v1alpha1"
	v1alpha1file "github.com/oracle/provider-oci/apis/file/v1alpha1"
	v1alpha1functions "github.com/oracle/provider-oci/apis/functions/v1alpha1"
	v1alpha1healthchecks "github.com/oracle/provider-oci/apis/healthchecks/v1alpha1"
	v1alpha1identity "github.com/oracle/provider-oci/apis/identity/v1alpha1"
	v1alpha1kms "github.com/oracle/provider-oci/apis/kms/v1alpha1"
	v1alpha1loadbalancer "github.com/oracle/provider-oci/apis/loadbalancer/v1alpha1"
	v1alpha1logging "github.com/oracle/provider-oci/apis/logging/v1alpha1"
	v1alpha1monitoring "github.com/oracle/provider-oci/apis/monitoring/v1alpha1"
	v1alpha1network "github.com/oracle/provider-oci/apis/network/v1alpha1"
	v1alpha1objectstorage "github.com/oracle/provider-oci/apis/objectstorage/v1alpha1"
	v1alpha1ons "github.com/oracle/provider-oci/apis/ons/v1alpha1"
	v1alpha1servicemesh "github.com/oracle/provider-oci/apis/servicemesh/v1alpha1"
	v1alpha1streaming "github.com/oracle/provider-oci/apis/streaming/v1alpha1"
	v1alpha1apis "github.com/oracle/provider-oci/apis/v1alpha1"
	v1beta1 "github.com/oracle/provider-oci/apis/v1beta1"
	v1alpha1vault "github.com/oracle/provider-oci/apis/vault/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1certificatesmanagement.SchemeBuilder.AddToScheme,
		v1alpha1containerengine.SchemeBuilder.AddToScheme,
		v1alpha1core.SchemeBuilder.AddToScheme,
		v1alpha1dns.SchemeBuilder.AddToScheme,
		v1alpha1events.SchemeBuilder.AddToScheme,
		v1alpha1file.SchemeBuilder.AddToScheme,
		v1alpha1functions.SchemeBuilder.AddToScheme,
		v1alpha1healthchecks.SchemeBuilder.AddToScheme,
		v1alpha1identity.SchemeBuilder.AddToScheme,
		v1alpha1kms.SchemeBuilder.AddToScheme,
		v1alpha1loadbalancer.SchemeBuilder.AddToScheme,
		v1alpha1logging.SchemeBuilder.AddToScheme,
		v1alpha1monitoring.SchemeBuilder.AddToScheme,
		v1alpha1network.SchemeBuilder.AddToScheme,
		v1alpha1objectstorage.SchemeBuilder.AddToScheme,
		v1alpha1ons.SchemeBuilder.AddToScheme,
		v1alpha1servicemesh.SchemeBuilder.AddToScheme,
		v1alpha1streaming.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
		v1alpha1vault.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
