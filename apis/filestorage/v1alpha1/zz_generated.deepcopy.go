//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Export) DeepCopyInto(out *Export) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Export.
func (in *Export) DeepCopy() *Export {
	if in == nil {
		return nil
	}
	out := new(Export)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Export) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportInitParameters) DeepCopyInto(out *ExportInitParameters) {
	*out = *in
	if in.ExportOptions != nil {
		in, out := &in.ExportOptions, &out.ExportOptions
		*out = make([]ExportOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExportSetID != nil {
		in, out := &in.ExportSetID, &out.ExportSetID
		*out = new(string)
		**out = **in
	}
	if in.ExportSetIDRef != nil {
		in, out := &in.ExportSetIDRef, &out.ExportSetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExportSetIDSelector != nil {
		in, out := &in.ExportSetIDSelector, &out.ExportSetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FileSystemIDRef != nil {
		in, out := &in.FileSystemIDRef, &out.FileSystemIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemIDSelector != nil {
		in, out := &in.FileSystemIDSelector, &out.FileSystemIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsIdmapGroupsForSysAuth != nil {
		in, out := &in.IsIdmapGroupsForSysAuth, &out.IsIdmapGroupsForSysAuth
		*out = new(bool)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]LocksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportInitParameters.
func (in *ExportInitParameters) DeepCopy() *ExportInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExportInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportList) DeepCopyInto(out *ExportList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Export, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportList.
func (in *ExportList) DeepCopy() *ExportList {
	if in == nil {
		return nil
	}
	out := new(ExportList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExportList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportObservation) DeepCopyInto(out *ExportObservation) {
	*out = *in
	if in.ExportOptions != nil {
		in, out := &in.ExportOptions, &out.ExportOptions
		*out = make([]ExportOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExportSetID != nil {
		in, out := &in.ExportSetID, &out.ExportSetID
		*out = new(string)
		**out = **in
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsIdmapGroupsForSysAuth != nil {
		in, out := &in.IsIdmapGroupsForSysAuth, &out.IsIdmapGroupsForSysAuth
		*out = new(bool)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]LocksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportObservation.
func (in *ExportObservation) DeepCopy() *ExportObservation {
	if in == nil {
		return nil
	}
	out := new(ExportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportOptionsInitParameters) DeepCopyInto(out *ExportOptionsInitParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AllowedAuth != nil {
		in, out := &in.AllowedAuth, &out.AllowedAuth
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AnonymousGID != nil {
		in, out := &in.AnonymousGID, &out.AnonymousGID
		*out = new(string)
		**out = **in
	}
	if in.AnonymousUID != nil {
		in, out := &in.AnonymousUID, &out.AnonymousUID
		*out = new(string)
		**out = **in
	}
	if in.IdentitySquash != nil {
		in, out := &in.IdentitySquash, &out.IdentitySquash
		*out = new(string)
		**out = **in
	}
	if in.IsAnonymousAccessAllowed != nil {
		in, out := &in.IsAnonymousAccessAllowed, &out.IsAnonymousAccessAllowed
		*out = new(bool)
		**out = **in
	}
	if in.RequirePrivilegedSourcePort != nil {
		in, out := &in.RequirePrivilegedSourcePort, &out.RequirePrivilegedSourcePort
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportOptionsInitParameters.
func (in *ExportOptionsInitParameters) DeepCopy() *ExportOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExportOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportOptionsObservation) DeepCopyInto(out *ExportOptionsObservation) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AllowedAuth != nil {
		in, out := &in.AllowedAuth, &out.AllowedAuth
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AnonymousGID != nil {
		in, out := &in.AnonymousGID, &out.AnonymousGID
		*out = new(string)
		**out = **in
	}
	if in.AnonymousUID != nil {
		in, out := &in.AnonymousUID, &out.AnonymousUID
		*out = new(string)
		**out = **in
	}
	if in.IdentitySquash != nil {
		in, out := &in.IdentitySquash, &out.IdentitySquash
		*out = new(string)
		**out = **in
	}
	if in.IsAnonymousAccessAllowed != nil {
		in, out := &in.IsAnonymousAccessAllowed, &out.IsAnonymousAccessAllowed
		*out = new(bool)
		**out = **in
	}
	if in.RequirePrivilegedSourcePort != nil {
		in, out := &in.RequirePrivilegedSourcePort, &out.RequirePrivilegedSourcePort
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportOptionsObservation.
func (in *ExportOptionsObservation) DeepCopy() *ExportOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExportOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportOptionsParameters) DeepCopyInto(out *ExportOptionsParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AllowedAuth != nil {
		in, out := &in.AllowedAuth, &out.AllowedAuth
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AnonymousGID != nil {
		in, out := &in.AnonymousGID, &out.AnonymousGID
		*out = new(string)
		**out = **in
	}
	if in.AnonymousUID != nil {
		in, out := &in.AnonymousUID, &out.AnonymousUID
		*out = new(string)
		**out = **in
	}
	if in.IdentitySquash != nil {
		in, out := &in.IdentitySquash, &out.IdentitySquash
		*out = new(string)
		**out = **in
	}
	if in.IsAnonymousAccessAllowed != nil {
		in, out := &in.IsAnonymousAccessAllowed, &out.IsAnonymousAccessAllowed
		*out = new(bool)
		**out = **in
	}
	if in.RequirePrivilegedSourcePort != nil {
		in, out := &in.RequirePrivilegedSourcePort, &out.RequirePrivilegedSourcePort
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportOptionsParameters.
func (in *ExportOptionsParameters) DeepCopy() *ExportOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExportOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportParameters) DeepCopyInto(out *ExportParameters) {
	*out = *in
	if in.ExportOptions != nil {
		in, out := &in.ExportOptions, &out.ExportOptions
		*out = make([]ExportOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExportSetID != nil {
		in, out := &in.ExportSetID, &out.ExportSetID
		*out = new(string)
		**out = **in
	}
	if in.ExportSetIDRef != nil {
		in, out := &in.ExportSetIDRef, &out.ExportSetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExportSetIDSelector != nil {
		in, out := &in.ExportSetIDSelector, &out.ExportSetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FileSystemIDRef != nil {
		in, out := &in.FileSystemIDRef, &out.FileSystemIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemIDSelector != nil {
		in, out := &in.FileSystemIDSelector, &out.FileSystemIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsIdmapGroupsForSysAuth != nil {
		in, out := &in.IsIdmapGroupsForSysAuth, &out.IsIdmapGroupsForSysAuth
		*out = new(bool)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]LocksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportParameters.
func (in *ExportParameters) DeepCopy() *ExportParameters {
	if in == nil {
		return nil
	}
	out := new(ExportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportSet) DeepCopyInto(out *ExportSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportSet.
func (in *ExportSet) DeepCopy() *ExportSet {
	if in == nil {
		return nil
	}
	out := new(ExportSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExportSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportSetInitParameters) DeepCopyInto(out *ExportSetInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.MaxFsStatBytes != nil {
		in, out := &in.MaxFsStatBytes, &out.MaxFsStatBytes
		*out = new(string)
		**out = **in
	}
	if in.MaxFsStatFiles != nil {
		in, out := &in.MaxFsStatFiles, &out.MaxFsStatFiles
		*out = new(string)
		**out = **in
	}
	if in.MountTargetID != nil {
		in, out := &in.MountTargetID, &out.MountTargetID
		*out = new(string)
		**out = **in
	}
	if in.MountTargetIDRef != nil {
		in, out := &in.MountTargetIDRef, &out.MountTargetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MountTargetIDSelector != nil {
		in, out := &in.MountTargetIDSelector, &out.MountTargetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportSetInitParameters.
func (in *ExportSetInitParameters) DeepCopy() *ExportSetInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExportSetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportSetList) DeepCopyInto(out *ExportSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExportSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportSetList.
func (in *ExportSetList) DeepCopy() *ExportSetList {
	if in == nil {
		return nil
	}
	out := new(ExportSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExportSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportSetObservation) DeepCopyInto(out *ExportSetObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxFsStatBytes != nil {
		in, out := &in.MaxFsStatBytes, &out.MaxFsStatBytes
		*out = new(string)
		**out = **in
	}
	if in.MaxFsStatFiles != nil {
		in, out := &in.MaxFsStatFiles, &out.MaxFsStatFiles
		*out = new(string)
		**out = **in
	}
	if in.MountTargetID != nil {
		in, out := &in.MountTargetID, &out.MountTargetID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportSetObservation.
func (in *ExportSetObservation) DeepCopy() *ExportSetObservation {
	if in == nil {
		return nil
	}
	out := new(ExportSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportSetParameters) DeepCopyInto(out *ExportSetParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.MaxFsStatBytes != nil {
		in, out := &in.MaxFsStatBytes, &out.MaxFsStatBytes
		*out = new(string)
		**out = **in
	}
	if in.MaxFsStatFiles != nil {
		in, out := &in.MaxFsStatFiles, &out.MaxFsStatFiles
		*out = new(string)
		**out = **in
	}
	if in.MountTargetID != nil {
		in, out := &in.MountTargetID, &out.MountTargetID
		*out = new(string)
		**out = **in
	}
	if in.MountTargetIDRef != nil {
		in, out := &in.MountTargetIDRef, &out.MountTargetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MountTargetIDSelector != nil {
		in, out := &in.MountTargetIDSelector, &out.MountTargetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportSetParameters.
func (in *ExportSetParameters) DeepCopy() *ExportSetParameters {
	if in == nil {
		return nil
	}
	out := new(ExportSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportSetSpec) DeepCopyInto(out *ExportSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportSetSpec.
func (in *ExportSetSpec) DeepCopy() *ExportSetSpec {
	if in == nil {
		return nil
	}
	out := new(ExportSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportSetStatus) DeepCopyInto(out *ExportSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportSetStatus.
func (in *ExportSetStatus) DeepCopy() *ExportSetStatus {
	if in == nil {
		return nil
	}
	out := new(ExportSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportSpec) DeepCopyInto(out *ExportSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportSpec.
func (in *ExportSpec) DeepCopy() *ExportSpec {
	if in == nil {
		return nil
	}
	out := new(ExportSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportStatus) DeepCopyInto(out *ExportStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportStatus.
func (in *ExportStatus) DeepCopy() *ExportStatus {
	if in == nil {
		return nil
	}
	out := new(ExportStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystem) DeepCopyInto(out *FileSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystem.
func (in *FileSystem) DeepCopy() *FileSystem {
	if in == nil {
		return nil
	}
	out := new(FileSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FileSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemInitParameters) DeepCopyInto(out *FileSystemInitParameters) {
	*out = *in
	if in.AreQuotaRulesEnabled != nil {
		in, out := &in.AreQuotaRulesEnabled, &out.AreQuotaRulesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CloneAttachStatus != nil {
		in, out := &in.CloneAttachStatus, &out.CloneAttachStatus
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DetachCloneTrigger != nil {
		in, out := &in.DetachCloneTrigger, &out.DetachCloneTrigger
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FilesystemSnapshotPolicyID != nil {
		in, out := &in.FilesystemSnapshotPolicyID, &out.FilesystemSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]FileSystemLocksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemInitParameters.
func (in *FileSystemInitParameters) DeepCopy() *FileSystemInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemList) DeepCopyInto(out *FileSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FileSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemList.
func (in *FileSystemList) DeepCopy() *FileSystemList {
	if in == nil {
		return nil
	}
	out := new(FileSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FileSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemLocksInitParameters) DeepCopyInto(out *FileSystemLocksInitParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemLocksInitParameters.
func (in *FileSystemLocksInitParameters) DeepCopy() *FileSystemLocksInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemLocksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemLocksObservation) DeepCopyInto(out *FileSystemLocksObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemLocksObservation.
func (in *FileSystemLocksObservation) DeepCopy() *FileSystemLocksObservation {
	if in == nil {
		return nil
	}
	out := new(FileSystemLocksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemLocksParameters) DeepCopyInto(out *FileSystemLocksParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemLocksParameters.
func (in *FileSystemLocksParameters) DeepCopy() *FileSystemLocksParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemLocksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemObservation) DeepCopyInto(out *FileSystemObservation) {
	*out = *in
	if in.AreQuotaRulesEnabled != nil {
		in, out := &in.AreQuotaRulesEnabled, &out.AreQuotaRulesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CloneAttachStatus != nil {
		in, out := &in.CloneAttachStatus, &out.CloneAttachStatus
		*out = new(string)
		**out = **in
	}
	if in.CloneCount != nil {
		in, out := &in.CloneCount, &out.CloneCount
		*out = new(float64)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DetachCloneTrigger != nil {
		in, out := &in.DetachCloneTrigger, &out.DetachCloneTrigger
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FilesystemSnapshotPolicyID != nil {
		in, out := &in.FilesystemSnapshotPolicyID, &out.FilesystemSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCloneParent != nil {
		in, out := &in.IsCloneParent, &out.IsCloneParent
		*out = new(bool)
		**out = **in
	}
	if in.IsHydrated != nil {
		in, out := &in.IsHydrated, &out.IsHydrated
		*out = new(bool)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.IsTargetable != nil {
		in, out := &in.IsTargetable, &out.IsTargetable
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]FileSystemLocksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MeteredBytes != nil {
		in, out := &in.MeteredBytes, &out.MeteredBytes
		*out = new(string)
		**out = **in
	}
	if in.QuotaEnforcementState != nil {
		in, out := &in.QuotaEnforcementState, &out.QuotaEnforcementState
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSourceCount != nil {
		in, out := &in.ReplicationSourceCount, &out.ReplicationSourceCount
		*out = new(float64)
		**out = **in
	}
	if in.ReplicationTargetID != nil {
		in, out := &in.ReplicationTargetID, &out.ReplicationTargetID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemObservation.
func (in *FileSystemObservation) DeepCopy() *FileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(FileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemParameters) DeepCopyInto(out *FileSystemParameters) {
	*out = *in
	if in.AreQuotaRulesEnabled != nil {
		in, out := &in.AreQuotaRulesEnabled, &out.AreQuotaRulesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CloneAttachStatus != nil {
		in, out := &in.CloneAttachStatus, &out.CloneAttachStatus
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DetachCloneTrigger != nil {
		in, out := &in.DetachCloneTrigger, &out.DetachCloneTrigger
		*out = new(float64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FilesystemSnapshotPolicyID != nil {
		in, out := &in.FilesystemSnapshotPolicyID, &out.FilesystemSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]FileSystemLocksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemParameters.
func (in *FileSystemParameters) DeepCopy() *FileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemSpec) DeepCopyInto(out *FileSystemSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemSpec.
func (in *FileSystemSpec) DeepCopy() *FileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(FileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemStatus) DeepCopyInto(out *FileSystemStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemStatus.
func (in *FileSystemStatus) DeepCopy() *FileSystemStatus {
	if in == nil {
		return nil
	}
	out := new(FileSystemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KerberosInitParameters) DeepCopyInto(out *KerberosInitParameters) {
	*out = *in
	if in.BackupKeyTabSecretVersion != nil {
		in, out := &in.BackupKeyTabSecretVersion, &out.BackupKeyTabSecretVersion
		*out = new(float64)
		**out = **in
	}
	if in.CurrentKeyTabSecretVersion != nil {
		in, out := &in.CurrentKeyTabSecretVersion, &out.CurrentKeyTabSecretVersion
		*out = new(float64)
		**out = **in
	}
	if in.IsKerberosEnabled != nil {
		in, out := &in.IsKerberosEnabled, &out.IsKerberosEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KerberosRealm != nil {
		in, out := &in.KerberosRealm, &out.KerberosRealm
		*out = new(string)
		**out = **in
	}
	if in.KeyTabSecretID != nil {
		in, out := &in.KeyTabSecretID, &out.KeyTabSecretID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KerberosInitParameters.
func (in *KerberosInitParameters) DeepCopy() *KerberosInitParameters {
	if in == nil {
		return nil
	}
	out := new(KerberosInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KerberosObservation) DeepCopyInto(out *KerberosObservation) {
	*out = *in
	if in.BackupKeyTabSecretVersion != nil {
		in, out := &in.BackupKeyTabSecretVersion, &out.BackupKeyTabSecretVersion
		*out = new(float64)
		**out = **in
	}
	if in.CurrentKeyTabSecretVersion != nil {
		in, out := &in.CurrentKeyTabSecretVersion, &out.CurrentKeyTabSecretVersion
		*out = new(float64)
		**out = **in
	}
	if in.IsKerberosEnabled != nil {
		in, out := &in.IsKerberosEnabled, &out.IsKerberosEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KerberosRealm != nil {
		in, out := &in.KerberosRealm, &out.KerberosRealm
		*out = new(string)
		**out = **in
	}
	if in.KeyTabSecretID != nil {
		in, out := &in.KeyTabSecretID, &out.KeyTabSecretID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KerberosObservation.
func (in *KerberosObservation) DeepCopy() *KerberosObservation {
	if in == nil {
		return nil
	}
	out := new(KerberosObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KerberosParameters) DeepCopyInto(out *KerberosParameters) {
	*out = *in
	if in.BackupKeyTabSecretVersion != nil {
		in, out := &in.BackupKeyTabSecretVersion, &out.BackupKeyTabSecretVersion
		*out = new(float64)
		**out = **in
	}
	if in.CurrentKeyTabSecretVersion != nil {
		in, out := &in.CurrentKeyTabSecretVersion, &out.CurrentKeyTabSecretVersion
		*out = new(float64)
		**out = **in
	}
	if in.IsKerberosEnabled != nil {
		in, out := &in.IsKerberosEnabled, &out.IsKerberosEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KerberosRealm != nil {
		in, out := &in.KerberosRealm, &out.KerberosRealm
		*out = new(string)
		**out = **in
	}
	if in.KeyTabSecretID != nil {
		in, out := &in.KeyTabSecretID, &out.KeyTabSecretID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KerberosParameters.
func (in *KerberosParameters) DeepCopy() *KerberosParameters {
	if in == nil {
		return nil
	}
	out := new(KerberosParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LdapIdmapInitParameters) DeepCopyInto(out *LdapIdmapInitParameters) {
	*out = *in
	if in.CacheLifetimeSeconds != nil {
		in, out := &in.CacheLifetimeSeconds, &out.CacheLifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.CacheRefreshIntervalSeconds != nil {
		in, out := &in.CacheRefreshIntervalSeconds, &out.CacheRefreshIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupSearchBase != nil {
		in, out := &in.GroupSearchBase, &out.GroupSearchBase
		*out = new(string)
		**out = **in
	}
	if in.NegativeCacheLifetimeSeconds != nil {
		in, out := &in.NegativeCacheLifetimeSeconds, &out.NegativeCacheLifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OutboundConnector1Id != nil {
		in, out := &in.OutboundConnector1Id, &out.OutboundConnector1Id
		*out = new(string)
		**out = **in
	}
	if in.OutboundConnector2Id != nil {
		in, out := &in.OutboundConnector2Id, &out.OutboundConnector2Id
		*out = new(string)
		**out = **in
	}
	if in.SchemaType != nil {
		in, out := &in.SchemaType, &out.SchemaType
		*out = new(string)
		**out = **in
	}
	if in.UserSearchBase != nil {
		in, out := &in.UserSearchBase, &out.UserSearchBase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LdapIdmapInitParameters.
func (in *LdapIdmapInitParameters) DeepCopy() *LdapIdmapInitParameters {
	if in == nil {
		return nil
	}
	out := new(LdapIdmapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LdapIdmapObservation) DeepCopyInto(out *LdapIdmapObservation) {
	*out = *in
	if in.CacheLifetimeSeconds != nil {
		in, out := &in.CacheLifetimeSeconds, &out.CacheLifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.CacheRefreshIntervalSeconds != nil {
		in, out := &in.CacheRefreshIntervalSeconds, &out.CacheRefreshIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupSearchBase != nil {
		in, out := &in.GroupSearchBase, &out.GroupSearchBase
		*out = new(string)
		**out = **in
	}
	if in.NegativeCacheLifetimeSeconds != nil {
		in, out := &in.NegativeCacheLifetimeSeconds, &out.NegativeCacheLifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OutboundConnector1Id != nil {
		in, out := &in.OutboundConnector1Id, &out.OutboundConnector1Id
		*out = new(string)
		**out = **in
	}
	if in.OutboundConnector2Id != nil {
		in, out := &in.OutboundConnector2Id, &out.OutboundConnector2Id
		*out = new(string)
		**out = **in
	}
	if in.SchemaType != nil {
		in, out := &in.SchemaType, &out.SchemaType
		*out = new(string)
		**out = **in
	}
	if in.UserSearchBase != nil {
		in, out := &in.UserSearchBase, &out.UserSearchBase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LdapIdmapObservation.
func (in *LdapIdmapObservation) DeepCopy() *LdapIdmapObservation {
	if in == nil {
		return nil
	}
	out := new(LdapIdmapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LdapIdmapParameters) DeepCopyInto(out *LdapIdmapParameters) {
	*out = *in
	if in.CacheLifetimeSeconds != nil {
		in, out := &in.CacheLifetimeSeconds, &out.CacheLifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.CacheRefreshIntervalSeconds != nil {
		in, out := &in.CacheRefreshIntervalSeconds, &out.CacheRefreshIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupSearchBase != nil {
		in, out := &in.GroupSearchBase, &out.GroupSearchBase
		*out = new(string)
		**out = **in
	}
	if in.NegativeCacheLifetimeSeconds != nil {
		in, out := &in.NegativeCacheLifetimeSeconds, &out.NegativeCacheLifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OutboundConnector1Id != nil {
		in, out := &in.OutboundConnector1Id, &out.OutboundConnector1Id
		*out = new(string)
		**out = **in
	}
	if in.OutboundConnector2Id != nil {
		in, out := &in.OutboundConnector2Id, &out.OutboundConnector2Id
		*out = new(string)
		**out = **in
	}
	if in.SchemaType != nil {
		in, out := &in.SchemaType, &out.SchemaType
		*out = new(string)
		**out = **in
	}
	if in.UserSearchBase != nil {
		in, out := &in.UserSearchBase, &out.UserSearchBase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LdapIdmapParameters.
func (in *LdapIdmapParameters) DeepCopy() *LdapIdmapParameters {
	if in == nil {
		return nil
	}
	out := new(LdapIdmapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocksInitParameters) DeepCopyInto(out *LocksInitParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocksInitParameters.
func (in *LocksInitParameters) DeepCopy() *LocksInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocksObservation) DeepCopyInto(out *LocksObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocksObservation.
func (in *LocksObservation) DeepCopy() *LocksObservation {
	if in == nil {
		return nil
	}
	out := new(LocksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocksParameters) DeepCopyInto(out *LocksParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocksParameters.
func (in *LocksParameters) DeepCopy() *LocksParameters {
	if in == nil {
		return nil
	}
	out := new(LocksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTarget) DeepCopyInto(out *MountTarget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTarget.
func (in *MountTarget) DeepCopy() *MountTarget {
	if in == nil {
		return nil
	}
	out := new(MountTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MountTarget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetInitParameters) DeepCopyInto(out *MountTargetInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IdmapType != nil {
		in, out := &in.IdmapType, &out.IdmapType
		*out = new(string)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Kerberos != nil {
		in, out := &in.Kerberos, &out.Kerberos
		*out = make([]KerberosInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LdapIdmap != nil {
		in, out := &in.LdapIdmap, &out.LdapIdmap
		*out = make([]LdapIdmapInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]MountTargetLocksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequestedThroughput != nil {
		in, out := &in.RequestedThroughput, &out.RequestedThroughput
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetInitParameters.
func (in *MountTargetInitParameters) DeepCopy() *MountTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(MountTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetList) DeepCopyInto(out *MountTargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MountTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetList.
func (in *MountTargetList) DeepCopy() *MountTargetList {
	if in == nil {
		return nil
	}
	out := new(MountTargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MountTargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetLocksInitParameters) DeepCopyInto(out *MountTargetLocksInitParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetLocksInitParameters.
func (in *MountTargetLocksInitParameters) DeepCopy() *MountTargetLocksInitParameters {
	if in == nil {
		return nil
	}
	out := new(MountTargetLocksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetLocksObservation) DeepCopyInto(out *MountTargetLocksObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetLocksObservation.
func (in *MountTargetLocksObservation) DeepCopy() *MountTargetLocksObservation {
	if in == nil {
		return nil
	}
	out := new(MountTargetLocksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetLocksParameters) DeepCopyInto(out *MountTargetLocksParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetLocksParameters.
func (in *MountTargetLocksParameters) DeepCopy() *MountTargetLocksParameters {
	if in == nil {
		return nil
	}
	out := new(MountTargetLocksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetObservation) DeepCopyInto(out *MountTargetObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExportSetID != nil {
		in, out := &in.ExportSetID, &out.ExportSetID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IdmapType != nil {
		in, out := &in.IdmapType, &out.IdmapType
		*out = new(string)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Kerberos != nil {
		in, out := &in.Kerberos, &out.Kerberos
		*out = make([]KerberosObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LdapIdmap != nil {
		in, out := &in.LdapIdmap, &out.LdapIdmap
		*out = make([]LdapIdmapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]MountTargetLocksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObservedThroughput != nil {
		in, out := &in.ObservedThroughput, &out.ObservedThroughput
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPIds != nil {
		in, out := &in.PrivateIPIds, &out.PrivateIPIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequestedThroughput != nil {
		in, out := &in.RequestedThroughput, &out.RequestedThroughput
		*out = new(string)
		**out = **in
	}
	if in.ReservedStorageCapacity != nil {
		in, out := &in.ReservedStorageCapacity, &out.ReservedStorageCapacity
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeBillingCycleEnd != nil {
		in, out := &in.TimeBillingCycleEnd, &out.TimeBillingCycleEnd
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetObservation.
func (in *MountTargetObservation) DeepCopy() *MountTargetObservation {
	if in == nil {
		return nil
	}
	out := new(MountTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetParameters) DeepCopyInto(out *MountTargetParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IdmapType != nil {
		in, out := &in.IdmapType, &out.IdmapType
		*out = new(string)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Kerberos != nil {
		in, out := &in.Kerberos, &out.Kerberos
		*out = make([]KerberosParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LdapIdmap != nil {
		in, out := &in.LdapIdmap, &out.LdapIdmap
		*out = make([]LdapIdmapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]MountTargetLocksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequestedThroughput != nil {
		in, out := &in.RequestedThroughput, &out.RequestedThroughput
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetParameters.
func (in *MountTargetParameters) DeepCopy() *MountTargetParameters {
	if in == nil {
		return nil
	}
	out := new(MountTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetSpec) DeepCopyInto(out *MountTargetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetSpec.
func (in *MountTargetSpec) DeepCopy() *MountTargetSpec {
	if in == nil {
		return nil
	}
	out := new(MountTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountTargetStatus) DeepCopyInto(out *MountTargetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountTargetStatus.
func (in *MountTargetStatus) DeepCopy() *MountTargetStatus {
	if in == nil {
		return nil
	}
	out := new(MountTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Replication) DeepCopyInto(out *Replication) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Replication.
func (in *Replication) DeepCopy() *Replication {
	if in == nil {
		return nil
	}
	out := new(Replication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Replication) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationInitParameters) DeepCopyInto(out *ReplicationInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]ReplicationLocksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplicationInterval != nil {
		in, out := &in.ReplicationInterval, &out.ReplicationInterval
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceIDRef != nil {
		in, out := &in.SourceIDRef, &out.SourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIDSelector != nil {
		in, out := &in.SourceIDSelector, &out.SourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetIDRef != nil {
		in, out := &in.TargetIDRef, &out.TargetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetIDSelector != nil {
		in, out := &in.TargetIDSelector, &out.TargetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationInitParameters.
func (in *ReplicationInitParameters) DeepCopy() *ReplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationList) DeepCopyInto(out *ReplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Replication, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationList.
func (in *ReplicationList) DeepCopy() *ReplicationList {
	if in == nil {
		return nil
	}
	out := new(ReplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationLocksInitParameters) DeepCopyInto(out *ReplicationLocksInitParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationLocksInitParameters.
func (in *ReplicationLocksInitParameters) DeepCopy() *ReplicationLocksInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationLocksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationLocksObservation) DeepCopyInto(out *ReplicationLocksObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationLocksObservation.
func (in *ReplicationLocksObservation) DeepCopy() *ReplicationLocksObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicationLocksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationLocksParameters) DeepCopyInto(out *ReplicationLocksParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationLocksParameters.
func (in *ReplicationLocksParameters) DeepCopy() *ReplicationLocksParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationLocksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationObservation) DeepCopyInto(out *ReplicationObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeltaProgress != nil {
		in, out := &in.DeltaProgress, &out.DeltaProgress
		*out = new(string)
		**out = **in
	}
	if in.DeltaStatus != nil {
		in, out := &in.DeltaStatus, &out.DeltaStatus
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.LastSnapshotID != nil {
		in, out := &in.LastSnapshotID, &out.LastSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]ReplicationLocksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryPointTime != nil {
		in, out := &in.RecoveryPointTime, &out.RecoveryPointTime
		*out = new(string)
		**out = **in
	}
	if in.ReplicationInterval != nil {
		in, out := &in.ReplicationInterval, &out.ReplicationInterval
		*out = new(string)
		**out = **in
	}
	if in.ReplicationTargetID != nil {
		in, out := &in.ReplicationTargetID, &out.ReplicationTargetID
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationObservation.
func (in *ReplicationObservation) DeepCopy() *ReplicationObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationParameters) DeepCopyInto(out *ReplicationParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]ReplicationLocksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplicationInterval != nil {
		in, out := &in.ReplicationInterval, &out.ReplicationInterval
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceIDRef != nil {
		in, out := &in.SourceIDRef, &out.SourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIDSelector != nil {
		in, out := &in.SourceIDSelector, &out.SourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetIDRef != nil {
		in, out := &in.TargetIDRef, &out.TargetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetIDSelector != nil {
		in, out := &in.TargetIDSelector, &out.TargetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationParameters.
func (in *ReplicationParameters) DeepCopy() *ReplicationParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSpec) DeepCopyInto(out *ReplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSpec.
func (in *ReplicationSpec) DeepCopy() *ReplicationSpec {
	if in == nil {
		return nil
	}
	out := new(ReplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationStatus) DeepCopyInto(out *ReplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationStatus.
func (in *ReplicationStatus) DeepCopy() *ReplicationStatus {
	if in == nil {
		return nil
	}
	out := new(ReplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Snapshot) DeepCopyInto(out *Snapshot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Snapshot.
func (in *Snapshot) DeepCopy() *Snapshot {
	if in == nil {
		return nil
	}
	out := new(Snapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Snapshot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotInitParameters) DeepCopyInto(out *SnapshotInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FileSystemIDRef != nil {
		in, out := &in.FileSystemIDRef, &out.FileSystemIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemIDSelector != nil {
		in, out := &in.FileSystemIDSelector, &out.FileSystemIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]SnapshotLocksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotInitParameters.
func (in *SnapshotInitParameters) DeepCopy() *SnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotList) DeepCopyInto(out *SnapshotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Snapshot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotList.
func (in *SnapshotList) DeepCopy() *SnapshotList {
	if in == nil {
		return nil
	}
	out := new(SnapshotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLocksInitParameters) DeepCopyInto(out *SnapshotLocksInitParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLocksInitParameters.
func (in *SnapshotLocksInitParameters) DeepCopy() *SnapshotLocksInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotLocksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLocksObservation) DeepCopyInto(out *SnapshotLocksObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLocksObservation.
func (in *SnapshotLocksObservation) DeepCopy() *SnapshotLocksObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotLocksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLocksParameters) DeepCopyInto(out *SnapshotLocksParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.RelatedResourceID != nil {
		in, out := &in.RelatedResourceID, &out.RelatedResourceID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLocksParameters.
func (in *SnapshotLocksParameters) DeepCopy() *SnapshotLocksParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotLocksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotObservation) DeepCopyInto(out *SnapshotObservation) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FilesystemSnapshotPolicyID != nil {
		in, out := &in.FilesystemSnapshotPolicyID, &out.FilesystemSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCloneSource != nil {
		in, out := &in.IsCloneSource, &out.IsCloneSource
		*out = new(bool)
		**out = **in
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.LifecycleDetails != nil {
		in, out := &in.LifecycleDetails, &out.LifecycleDetails
		*out = new(string)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]SnapshotLocksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProvenanceID != nil {
		in, out := &in.ProvenanceID, &out.ProvenanceID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotTime != nil {
		in, out := &in.SnapshotTime, &out.SnapshotTime
		*out = new(string)
		**out = **in
	}
	if in.SnapshotType != nil {
		in, out := &in.SnapshotType, &out.SnapshotType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotObservation.
func (in *SnapshotObservation) DeepCopy() *SnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotParameters) DeepCopyInto(out *SnapshotParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FileSystemIDRef != nil {
		in, out := &in.FileSystemIDRef, &out.FileSystemIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemIDSelector != nil {
		in, out := &in.FileSystemIDSelector, &out.FileSystemIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsLockOverride != nil {
		in, out := &in.IsLockOverride, &out.IsLockOverride
		*out = new(bool)
		**out = **in
	}
	if in.Locks != nil {
		in, out := &in.Locks, &out.Locks
		*out = make([]SnapshotLocksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotParameters.
func (in *SnapshotParameters) DeepCopy() *SnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotSpec) DeepCopyInto(out *SnapshotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotSpec.
func (in *SnapshotSpec) DeepCopy() *SnapshotSpec {
	if in == nil {
		return nil
	}
	out := new(SnapshotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotStatus) DeepCopyInto(out *SnapshotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotStatus.
func (in *SnapshotStatus) DeepCopy() *SnapshotStatus {
	if in == nil {
		return nil
	}
	out := new(SnapshotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInitParameters) DeepCopyInto(out *SourceDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInitParameters.
func (in *SourceDetailsInitParameters) DeepCopy() *SourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsObservation) DeepCopyInto(out *SourceDetailsObservation) {
	*out = *in
	if in.ParentFileSystemID != nil {
		in, out := &in.ParentFileSystemID, &out.ParentFileSystemID
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsObservation.
func (in *SourceDetailsObservation) DeepCopy() *SourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsParameters) DeepCopyInto(out *SourceDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsParameters.
func (in *SourceDetailsParameters) DeepCopy() *SourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}
