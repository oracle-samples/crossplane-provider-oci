/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterNetworkObservation struct {

	// The OCID of the hpc island used by the cluster network.
	HpcIslandID *string `json:"hpcIslandId,omitempty" tf:"hpc_island_id,omitempty"`

	// The OCID of the cluster network.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Updatable) The data to create the instance pools in the cluster network.
	// +kubebuilder:validation:Required
	InstancePools []InstancePoolsObservation `json:"instancePools,omitempty" tf:"instance_pools,omitempty"`

	// The list of network block OCIDs of the HPC island.
	NetworkBlockIds []*string `json:"networkBlockIds,omitempty" tf:"network_block_ids,omitempty"`

	// The status of the interaction between the instance pool and the load balancer.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the instance pool was created, in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The date and time the resource was updated, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated,omitempty"`
}

type ClusterNetworkParameters struct {

	// (Updatable) The OCID of the compartment containing the cluster network.
	// +kubebuilder:validation:Required
	CompartmentID *string `json:"compartmentId" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The data to create the instance pools in the cluster network.
	// +kubebuilder:validation:Required
	InstancePools []InstancePoolsParameters `json:"instancePools" tf:"instance_pools,omitempty"`

	// The location for where the instance pools in a cluster network will place instances.
	// +kubebuilder:validation:Required
	PlacementConfiguration []PlacementConfigurationParameters `json:"placementConfiguration" tf:"placement_configuration,omitempty"`
}

type InstancePoolsObservation struct {

	// (Updatable) The OCID of the compartment containing the cluster network.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// The OCID of the cluster network.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The load balancers attached to the instance pool.
	LoadBalancers []LoadBalancersObservation `json:"loadBalancers,omitempty" tf:"load_balancers,omitempty"`

	// The placement configurations for the instance pool.
	PlacementConfigurations []PlacementConfigurationsObservation `json:"placementConfigurations,omitempty" tf:"placement_configurations,omitempty"`

	// The status of the interaction between the instance pool and the load balancer.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the instance pool was created, in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`
}

type InstancePoolsParameters struct {

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The OCID of the instance configuration associated with the instance pool.
	// +kubebuilder:validation:Required
	InstanceConfigurationID *string `json:"instanceConfigurationId" tf:"instance_configuration_id,omitempty"`

	// (Updatable) The number of instances that should be in the instance pool.
	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`
}

type LoadBalancersObservation struct {

	// The name of the backend set on the load balancer.
	BackendSetName *string `json:"backendSetName,omitempty" tf:"backend_set_name,omitempty"`

	// The OCID of the cluster network.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the instance pool of the load balancer attachment.
	InstancePoolID *string `json:"instancePoolId,omitempty" tf:"instance_pool_id,omitempty"`

	// The OCID of the load balancer attached to the instance pool.
	LoadBalancerID *string `json:"loadBalancerId,omitempty" tf:"load_balancer_id,omitempty"`

	// The port value used for the backends.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The status of the interaction between the instance pool and the load balancer.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
	VnicSelection *string `json:"vnicSelection,omitempty" tf:"vnic_selection,omitempty"`
}

type LoadBalancersParameters struct {
}

type PlacementConfigurationObservation struct {
}

type PlacementConfigurationParameters struct {

	// The availability domain to place instances.  Example: Uocm:PHX-AD-1
	// +kubebuilder:validation:Required
	AvailabilityDomain *string `json:"availabilityDomain" tf:"availability_domain,omitempty"`

	// The OCID of the primary subnet to place instances.
	// +kubebuilder:validation:Required
	PrimarySubnetID *string `json:"primarySubnetId" tf:"primary_subnet_id,omitempty"`

	// The set of secondary VNIC data for instances in the pool.
	// +kubebuilder:validation:Optional
	SecondaryVnicSubnets []PlacementConfigurationSecondaryVnicSubnetsParameters `json:"secondaryVnicSubnets,omitempty" tf:"secondary_vnic_subnets,omitempty"`
}

type PlacementConfigurationSecondaryVnicSubnetsObservation struct {
}

type PlacementConfigurationSecondaryVnicSubnetsParameters struct {

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The subnet OCID for the secondary VNIC.
	// +kubebuilder:validation:Required
	SubnetID *string `json:"subnetId" tf:"subnet_id,omitempty"`
}

type PlacementConfigurationsObservation struct {

	// The availability domain to place instances.  Example: Uocm:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// The fault domains to place instances.
	FaultDomains []*string `json:"faultDomains,omitempty" tf:"fault_domains,omitempty"`

	// The OCID of the primary subnet to place instances.
	PrimarySubnetID *string `json:"primarySubnetId,omitempty" tf:"primary_subnet_id,omitempty"`

	// The set of secondary VNIC data for instances in the pool.
	SecondaryVnicSubnets []SecondaryVnicSubnetsObservation `json:"secondaryVnicSubnets,omitempty" tf:"secondary_vnic_subnets,omitempty"`
}

type PlacementConfigurationsParameters struct {
}

type SecondaryVnicSubnetsObservation struct {

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The subnet OCID for the secondary VNIC.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`
}

type SecondaryVnicSubnetsParameters struct {
}

// ClusterNetworkSpec defines the desired state of ClusterNetwork
type ClusterNetworkSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterNetworkParameters `json:"forProvider"`
}

// ClusterNetworkStatus defines the observed state of ClusterNetwork.
type ClusterNetworkStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterNetworkObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterNetwork is the Schema for the ClusterNetworks API. Provides the Cluster Network resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type ClusterNetwork struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClusterNetworkSpec   `json:"spec"`
	Status            ClusterNetworkStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterNetworkList contains a list of ClusterNetworks
type ClusterNetworkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ClusterNetwork `json:"items"`
}

// Repository type metadata.
var (
	ClusterNetwork_Kind             = "ClusterNetwork"
	ClusterNetwork_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ClusterNetwork_Kind}.String()
	ClusterNetwork_KindAPIVersion   = ClusterNetwork_Kind + "." + CRDGroupVersion.String()
	ClusterNetwork_GroupVersionKind = CRDGroupVersion.WithKind(ClusterNetwork_Kind)
)

func init() {
	SchemeBuilder.Register(&ClusterNetwork{}, &ClusterNetworkList{})
}
