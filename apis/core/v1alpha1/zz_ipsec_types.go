/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IpsecInitParameters struct {

	// (Updatable) The OCID of the compartment to contain the IPSec connection.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// The OCID of the Cpe object.
	// +crossplane:generate:reference:type=Cpe
	CpeID *string `json:"cpeId,omitempty" tf:"cpe_id,omitempty"`

	// Reference to a Cpe to populate cpeId.
	// +kubebuilder:validation:Optional
	CpeIDRef *v1.Reference `json:"cpeIdRef,omitempty" tf:"-"`

	// Selector for a Cpe to populate cpeId.
	// +kubebuilder:validation:Optional
	CpeIDSelector *v1.Selector `json:"cpeIdSelector,omitempty" tf:"-"`

	// (Updatable) Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier you provide here must correspond to the value for cpeLocalIdentifierType.
	CpeLocalIdentifier *string `json:"cpeLocalIdentifier,omitempty" tf:"cpe_local_identifier,omitempty"`

	// (Updatable) The type of identifier for your CPE device. The value you provide here must correspond to the value for cpeLocalIdentifier.
	CpeLocalIdentifierType *string `json:"cpeLocalIdentifierType,omitempty" tf:"cpe_local_identifier_type,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The OCID of the DRG.
	// +crossplane:generate:reference:type=Drg
	DrgID *string `json:"drgId,omitempty" tf:"drg_id,omitempty"`

	// Reference to a Drg to populate drgId.
	// +kubebuilder:validation:Optional
	DrgIDRef *v1.Reference `json:"drgIdRef,omitempty" tf:"-"`

	// Selector for a Drg to populate drgId.
	// +kubebuilder:validation:Optional
	DrgIDSelector *v1.Selector `json:"drgIdSelector,omitempty" tf:"-"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) Static routes to the CPE. A static route's CIDR must not be a multicast address or class E address.
	StaticRoutes []*string `json:"staticRoutes,omitempty" tf:"static_routes,omitempty"`

	// (Non-updatable) Tunnel configuration for private ipsec connection over fastconnect.
	TunnelConfiguration []TunnelConfigurationInitParameters `json:"tunnelConfiguration,omitempty" tf:"tunnel_configuration,omitempty"`
}

type IpsecObservation struct {

	// (Updatable) The OCID of the compartment to contain the IPSec connection.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// The OCID of the Cpe object.
	CpeID *string `json:"cpeId,omitempty" tf:"cpe_id,omitempty"`

	// (Updatable) Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier you provide here must correspond to the value for cpeLocalIdentifierType.
	CpeLocalIdentifier *string `json:"cpeLocalIdentifier,omitempty" tf:"cpe_local_identifier,omitempty"`

	// (Updatable) The type of identifier for your CPE device. The value you provide here must correspond to the value for cpeLocalIdentifier.
	CpeLocalIdentifierType *string `json:"cpeLocalIdentifierType,omitempty" tf:"cpe_local_identifier_type,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The OCID of the DRG.
	DrgID *string `json:"drgId,omitempty" tf:"drg_id,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// The IPSec connection's Oracle ID (OCID).
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IPSec connection's current state.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (Updatable) Static routes to the CPE. A static route's CIDR must not be a multicast address or class E address.
	StaticRoutes []*string `json:"staticRoutes,omitempty" tf:"static_routes,omitempty"`

	// The date and time the IPSec connection was created, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The transport type used for the IPSec connection.
	TransportType *string `json:"transportType,omitempty" tf:"transport_type,omitempty"`

	// (Non-updatable) Tunnel configuration for private ipsec connection over fastconnect.
	TunnelConfiguration []TunnelConfigurationObservation `json:"tunnelConfiguration,omitempty" tf:"tunnel_configuration,omitempty"`
}

type IpsecParameters struct {

	// (Updatable) The OCID of the compartment to contain the IPSec connection.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// The OCID of the Cpe object.
	// +crossplane:generate:reference:type=Cpe
	// +kubebuilder:validation:Optional
	CpeID *string `json:"cpeId,omitempty" tf:"cpe_id,omitempty"`

	// Reference to a Cpe to populate cpeId.
	// +kubebuilder:validation:Optional
	CpeIDRef *v1.Reference `json:"cpeIdRef,omitempty" tf:"-"`

	// Selector for a Cpe to populate cpeId.
	// +kubebuilder:validation:Optional
	CpeIDSelector *v1.Selector `json:"cpeIdSelector,omitempty" tf:"-"`

	// (Updatable) Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier you provide here must correspond to the value for cpeLocalIdentifierType.
	// +kubebuilder:validation:Optional
	CpeLocalIdentifier *string `json:"cpeLocalIdentifier,omitempty" tf:"cpe_local_identifier,omitempty"`

	// (Updatable) The type of identifier for your CPE device. The value you provide here must correspond to the value for cpeLocalIdentifier.
	// +kubebuilder:validation:Optional
	CpeLocalIdentifierType *string `json:"cpeLocalIdentifierType,omitempty" tf:"cpe_local_identifier_type,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The OCID of the DRG.
	// +crossplane:generate:reference:type=Drg
	// +kubebuilder:validation:Optional
	DrgID *string `json:"drgId,omitempty" tf:"drg_id,omitempty"`

	// Reference to a Drg to populate drgId.
	// +kubebuilder:validation:Optional
	DrgIDRef *v1.Reference `json:"drgIdRef,omitempty" tf:"-"`

	// Selector for a Drg to populate drgId.
	// +kubebuilder:validation:Optional
	DrgIDSelector *v1.Selector `json:"drgIdSelector,omitempty" tf:"-"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) Static routes to the CPE. A static route's CIDR must not be a multicast address or class E address.
	// +kubebuilder:validation:Optional
	StaticRoutes []*string `json:"staticRoutes,omitempty" tf:"static_routes,omitempty"`

	// (Non-updatable) Tunnel configuration for private ipsec connection over fastconnect.
	// +kubebuilder:validation:Optional
	TunnelConfiguration []TunnelConfigurationParameters `json:"tunnelConfiguration,omitempty" tf:"tunnel_configuration,omitempty"`
}

type TunnelConfigurationInitParameters struct {
	AssociatedVirtualCircuits []*string `json:"associatedVirtualCircuits,omitempty" tf:"associated_virtual_circuits,omitempty"`

	// The IPSec connection's Oracle ID (OCID).
	DrgRouteTableID *string `json:"drgRouteTableId,omitempty" tf:"drg_route_table_id,omitempty"`

	OracleTunnelIP *string `json:"oracleTunnelIp,omitempty" tf:"oracle_tunnel_ip,omitempty"`
}

type TunnelConfigurationObservation struct {
	AssociatedVirtualCircuits []*string `json:"associatedVirtualCircuits,omitempty" tf:"associated_virtual_circuits,omitempty"`

	// The IPSec connection's Oracle ID (OCID).
	DrgRouteTableID *string `json:"drgRouteTableId,omitempty" tf:"drg_route_table_id,omitempty"`

	OracleTunnelIP *string `json:"oracleTunnelIp,omitempty" tf:"oracle_tunnel_ip,omitempty"`
}

type TunnelConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AssociatedVirtualCircuits []*string `json:"associatedVirtualCircuits,omitempty" tf:"associated_virtual_circuits,omitempty"`

	// The IPSec connection's Oracle ID (OCID).
	// +kubebuilder:validation:Optional
	DrgRouteTableID *string `json:"drgRouteTableId,omitempty" tf:"drg_route_table_id,omitempty"`

	// +kubebuilder:validation:Optional
	OracleTunnelIP *string `json:"oracleTunnelIp,omitempty" tf:"oracle_tunnel_ip,omitempty"`
}

// IpsecSpec defines the desired state of Ipsec
type IpsecSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IpsecParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IpsecInitParameters `json:"initProvider,omitempty"`
}

// IpsecStatus defines the observed state of Ipsec.
type IpsecStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IpsecObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Ipsec is the Schema for the Ipsecs API. Provides the Ip Sec Connection resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type Ipsec struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.staticRoutes) || (has(self.initProvider) && has(self.initProvider.staticRoutes))",message="spec.forProvider.staticRoutes is a required parameter"
	Spec   IpsecSpec   `json:"spec"`
	Status IpsecStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IpsecList contains a list of Ipsecs
type IpsecList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Ipsec `json:"items"`
}

// Repository type metadata.
var (
	Ipsec_Kind             = "Ipsec"
	Ipsec_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Ipsec_Kind}.String()
	Ipsec_KindAPIVersion   = Ipsec_Kind + "." + CRDGroupVersion.String()
	Ipsec_GroupVersionKind = CRDGroupVersion.WithKind(Ipsec_Kind)
)

func init() {
	SchemeBuilder.Register(&Ipsec{}, &IpsecList{})
}
