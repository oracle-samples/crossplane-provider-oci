/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterConfigObservation struct {
}

type ClusterConfigParameters struct {

	// (Updatable) The OCID of the HpcIsland.
	// +kubebuilder:validation:Required
	HpcIslandID *string `json:"hpcIslandId" tf:"hpc_island_id,omitempty"`

	// (Updatable) The list of OCID of the network blocks.
	// +kubebuilder:validation:Optional
	NetworkBlockIds []*string `json:"networkBlockIds,omitempty" tf:"network_block_ids,omitempty"`
}

type ComputeCapacityReservationObservation struct {

	// The OCID of the compute capacity reservation.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Updatable) The capacity configurations for the capacity reservation.
	// +kubebuilder:validation:Required
	InstanceReservationConfigs []InstanceReservationConfigsObservation `json:"instanceReservationConfigs,omitempty" tf:"instance_reservation_configs,omitempty"`

	// The number of instances for which capacity will be held with this compute capacity reservation. This number is the sum of the values of the reservedCount fields for all of the instance capacity configurations under this reservation. The purpose of this field is to calculate the percentage usage of the reservation.
	ReservedInstanceCount *string `json:"reservedInstanceCount,omitempty" tf:"reserved_instance_count,omitempty"`

	// The current state of the compute capacity reservation.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the compute capacity reservation was created, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The date and time the compute capacity reservation was updated, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated,omitempty"`

	// The total number of instances currently consuming space in this compute capacity reservation. This number is the sum of the values of the usedCount fields for all of the instance capacity configurations under this reservation. The purpose of this field is to calculate the percentage usage of the reservation.
	UsedInstanceCount *string `json:"usedInstanceCount,omitempty" tf:"used_instance_count,omitempty"`
}

type ComputeCapacityReservationParameters struct {

	// The availability domain of this compute capacity reservation.  Example: Uocm:PHX-AD-1
	// +kubebuilder:validation:Required
	AvailabilityDomain *string `json:"availabilityDomain" tf:"availability_domain,omitempty"`

	// (Updatable) The OCID of the compartment containing the capacity reservation.
	// +kubebuilder:validation:Required
	CompartmentID *string `json:"compartmentId" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The capacity configurations for the capacity reservation.
	// +kubebuilder:validation:Required
	InstanceReservationConfigs []InstanceReservationConfigsParameters `json:"instanceReservationConfigs" tf:"instance_reservation_configs,omitempty"`

	// (Updatable) Whether this capacity reservation is the default. For more information, see Capacity Reservations.
	// +kubebuilder:validation:Optional
	IsDefaultReservation *bool `json:"isDefaultReservation,omitempty" tf:"is_default_reservation,omitempty"`
}

type InstanceReservationConfigsObservation struct {

	// The amount of capacity in use out of the total capacity reserved in this capacity configuration.
	UsedCount *string `json:"usedCount,omitempty" tf:"used_count,omitempty"`
}

type InstanceReservationConfigsParameters struct {

	// (Updatable) The HPC cluster configuration requested when launching instances in a compute capacity reservation.
	// +kubebuilder:validation:Optional
	ClusterConfig []ClusterConfigParameters `json:"clusterConfig,omitempty" tf:"cluster_config,omitempty"`

	// (Updatable) The fault domain to use for instances created using this capacity configuration. For more information, see Fault Domains. If you do not specify the fault domain, the capacity is available for an instance that does not specify a fault domain. To change the fault domain for a reservation, delete the reservation and create a new one in the preferred fault domain.
	// +kubebuilder:validation:Optional
	FaultDomain *string `json:"faultDomain,omitempty" tf:"fault_domain,omitempty"`

	// (Updatable) The shape requested when launching instances using reserved capacity. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance. You can list all available shapes by calling ListComputeCapacityReservationInstanceShapes.
	// +kubebuilder:validation:Required
	InstanceShape *string `json:"instanceShape" tf:"instance_shape,omitempty"`

	// (Updatable) The shape configuration requested when launching instances in a compute capacity reservation.
	// +kubebuilder:validation:Optional
	InstanceShapeConfig []InstanceShapeConfigParameters `json:"instanceShapeConfig,omitempty" tf:"instance_shape_config,omitempty"`

	// (Updatable) The total number of instances that can be launched from the capacity configuration.
	// +kubebuilder:validation:Required
	ReservedCount *string `json:"reservedCount" tf:"reserved_count,omitempty"`
}

type InstanceShapeConfigObservation struct {
}

type InstanceShapeConfigParameters struct {

	// (Updatable) The total amount of memory available to the instance, in gigabytes.
	// +kubebuilder:validation:Optional
	MemoryInGbs *float64 `json:"memoryInGbs,omitempty" tf:"memory_in_gbs,omitempty"`

	// (Updatable) The total number of OCPUs available to the instance.
	// +kubebuilder:validation:Optional
	Ocpus *float64 `json:"ocpus,omitempty" tf:"ocpus,omitempty"`
}

// ComputeCapacityReservationSpec defines the desired state of ComputeCapacityReservation
type ComputeCapacityReservationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ComputeCapacityReservationParameters `json:"forProvider"`
}

// ComputeCapacityReservationStatus defines the observed state of ComputeCapacityReservation.
type ComputeCapacityReservationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ComputeCapacityReservationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ComputeCapacityReservation is the Schema for the ComputeCapacityReservations API. Provides the Compute Capacity Reservation resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type ComputeCapacityReservation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ComputeCapacityReservationSpec   `json:"spec"`
	Status            ComputeCapacityReservationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ComputeCapacityReservationList contains a list of ComputeCapacityReservations
type ComputeCapacityReservationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ComputeCapacityReservation `json:"items"`
}

// Repository type metadata.
var (
	ComputeCapacityReservation_Kind             = "ComputeCapacityReservation"
	ComputeCapacityReservation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ComputeCapacityReservation_Kind}.String()
	ComputeCapacityReservation_KindAPIVersion   = ComputeCapacityReservation_Kind + "." + CRDGroupVersion.String()
	ComputeCapacityReservation_GroupVersionKind = CRDGroupVersion.WithKind(ComputeCapacityReservation_Kind)
)

func init() {
	SchemeBuilder.Register(&ComputeCapacityReservation{}, &ComputeCapacityReservationList{})
}
