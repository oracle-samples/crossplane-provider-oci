/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IPv6Observation struct {

	// The OCID of the compartment containing the IPv6. This is the same as the VNIC's compartment.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// The OCID of the IPv6.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IPv6's current state.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The OCID of the subnet the VNIC is in.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The date and time the IPv6 was created, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`
}

type IPv6Parameters struct {

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// An IPv6 address of your choice. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns an IPv6 address from the subnet. The subnet is the one that contains the VNIC you specify in vnicId.  Example: 2001:DB8::
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The IPv6 CIDR allocated to the subnet. This is required if more than one IPv6 CIDR exists on the subnet.
	// +kubebuilder:validation:Optional
	Ipv6SubnetCidr *string `json:"ipv6subnetCidr,omitempty" tf:"ipv6subnet_cidr,omitempty"`

	// (Updatable) The OCID of the VNIC to assign the IPv6 to. The IPv6 will be in the VNIC's subnet.
	// +kubebuilder:validation:Required
	VnicID *string `json:"vnicId" tf:"vnic_id,omitempty"`
}

// IPv6Spec defines the desired state of IPv6
type IPv6Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IPv6Parameters `json:"forProvider"`
}

// IPv6Status defines the observed state of IPv6.
type IPv6Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IPv6Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// IPv6 is the Schema for the IPv6s API. Provides the Ipv6 resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type IPv6 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IPv6Spec   `json:"spec"`
	Status            IPv6Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IPv6List contains a list of IPv6s
type IPv6List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []IPv6 `json:"items"`
}

// Repository type metadata.
var (
	IPv6_Kind             = "IPv6"
	IPv6_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: IPv6_Kind}.String()
	IPv6_KindAPIVersion   = IPv6_Kind + "." + CRDGroupVersion.String()
	IPv6_GroupVersionKind = CRDGroupVersion.WithKind(IPv6_Kind)
)

func init() {
	SchemeBuilder.Register(&IPv6{}, &IPv6List{})
}
