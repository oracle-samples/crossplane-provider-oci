/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppCatalogListingResourceVersionAgreementObservation struct {

	// EULA link
	EulaLink *string `json:"eulaLink,omitempty" tf:"eula_link,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Oracle TOU link
	OracleTermsOfUseLink *string `json:"oracleTermsOfUseLink,omitempty" tf:"oracle_terms_of_use_link,omitempty"`

	// A generated signature for this agreement retrieval operation which should be used in the create subscription call.
	Signature *string `json:"signature,omitempty" tf:"signature,omitempty"`

	// Date and time the agreements were retrieved, in RFC3339 format. Example: 2018-03-20T12:32:53.532Z
	TimeRetrieved *string `json:"timeRetrieved,omitempty" tf:"time_retrieved,omitempty"`
}

type AppCatalogListingResourceVersionAgreementParameters struct {

	// The OCID of the listing.
	// +kubebuilder:validation:Required
	ListingID *string `json:"listingId" tf:"listing_id,omitempty"`

	// Listing Resource Version.
	// +kubebuilder:validation:Required
	ListingResourceVersion *string `json:"listingResourceVersion" tf:"listing_resource_version,omitempty"`
}

// AppCatalogListingResourceVersionAgreementSpec defines the desired state of AppCatalogListingResourceVersionAgreement
type AppCatalogListingResourceVersionAgreementSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AppCatalogListingResourceVersionAgreementParameters `json:"forProvider"`
}

// AppCatalogListingResourceVersionAgreementStatus defines the observed state of AppCatalogListingResourceVersionAgreement.
type AppCatalogListingResourceVersionAgreementStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AppCatalogListingResourceVersionAgreementObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppCatalogListingResourceVersionAgreement is the Schema for the AppCatalogListingResourceVersionAgreements API. Provides details about a specific AppCatalogListingResourceVersionAgreement
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type AppCatalogListingResourceVersionAgreement struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppCatalogListingResourceVersionAgreementSpec   `json:"spec"`
	Status            AppCatalogListingResourceVersionAgreementStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppCatalogListingResourceVersionAgreementList contains a list of AppCatalogListingResourceVersionAgreements
type AppCatalogListingResourceVersionAgreementList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppCatalogListingResourceVersionAgreement `json:"items"`
}

// Repository type metadata.
var (
	AppCatalogListingResourceVersionAgreement_Kind             = "AppCatalogListingResourceVersionAgreement"
	AppCatalogListingResourceVersionAgreement_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AppCatalogListingResourceVersionAgreement_Kind}.String()
	AppCatalogListingResourceVersionAgreement_KindAPIVersion   = AppCatalogListingResourceVersionAgreement_Kind + "." + CRDGroupVersion.String()
	AppCatalogListingResourceVersionAgreement_GroupVersionKind = CRDGroupVersion.WithKind(AppCatalogListingResourceVersionAgreement_Kind)
)

func init() {
	SchemeBuilder.Register(&AppCatalogListingResourceVersionAgreement{}, &AppCatalogListingResourceVersionAgreementList{})
}
