/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DrgAttachmentManagementInitParameters struct {

	// The type for the network resource attached to the DRG.
	AttachmentType *string `json:"attachmentType,omitempty" tf:"attachment_type,omitempty"`

	// The OCID of the compartment.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The OCID of the DRG.
	// +crossplane:generate:reference:type=Drg
	DrgID *string `json:"drgId,omitempty" tf:"drg_id,omitempty"`

	// Reference to a Drg to populate drgId.
	// +kubebuilder:validation:Optional
	DrgIDRef *v1.Reference `json:"drgIdRef,omitempty" tf:"-"`

	// Selector for a Drg to populate drgId.
	// +kubebuilder:validation:Optional
	DrgIDSelector *v1.Selector `json:"drgIdSelector,omitempty" tf:"-"`

	// (Updatable) The OCID of the DRG route table assigned to the DRG attachment.
	// +crossplane:generate:reference:type=DrgRouteTable
	DrgRouteTableID *string `json:"drgRouteTableId,omitempty" tf:"drg_route_table_id,omitempty"`

	// Reference to a DrgRouteTable to populate drgRouteTableId.
	// +kubebuilder:validation:Optional
	DrgRouteTableIDRef *v1.Reference `json:"drgRouteTableIdRef,omitempty" tf:"-"`

	// Selector for a DrgRouteTable to populate drgRouteTableId.
	// +kubebuilder:validation:Optional
	DrgRouteTableIDSelector *v1.Selector `json:"drgRouteTableIdSelector,omitempty" tf:"-"`

	// The OCID of the export route distribution used to specify how routes in the assigned DRG route table are advertised to the attachment. If this value is null, no routes are advertised through this attachment.
	ExportDrgRouteDistributionID *string `json:"exportDrgRouteDistributionId,omitempty" tf:"export_drg_route_distribution_id,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable)
	NetworkDetails []DrgAttachmentManagementNetworkDetailsInitParameters `json:"networkDetails,omitempty" tf:"network_details,omitempty"`

	// The OCID of the resource (virtual circuit, VCN, IPSec tunnel, or remote peering connection) attached to the DRG.
	// +crossplane:generate:reference:type=Vcn
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Vcn to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Vcn to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// (Updatable) An optional property when set to true during update disables the export of route Distribution by setting export_drg_route_distribution_id to null.
	RemoveExportDrgRouteDistributionTrigger *bool `json:"removeExportDrgRouteDistributionTrigger,omitempty" tf:"remove_export_drg_route_distribution_trigger,omitempty"`

	// The OCID of the route table the DRG attachment is using.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The OCID of the VCN.
	VcnID *string `json:"vcnId,omitempty" tf:"vcn_id,omitempty"`
}

type DrgAttachmentManagementNetworkDetailsInitParameters struct {

	// The OCID of the network attached to the DRG.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the route table the DRG attachment is using.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The type can be one of these values: IPSEC_TUNNEL, REMOTE_PEERING_CONNECTION, VCN,VIRTUAL_CIRCUIT
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DrgAttachmentManagementNetworkDetailsObservation struct {

	// The OCID of the network attached to the DRG.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IPSec connection that contains the attached IPSec tunnel.
	IpsecConnectionID *string `json:"ipsecConnectionId,omitempty" tf:"ipsec_connection_id,omitempty"`

	// The OCID of the route table the DRG attachment is using.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The type can be one of these values: IPSEC_TUNNEL, REMOTE_PEERING_CONNECTION, VCN,VIRTUAL_CIRCUIT
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DrgAttachmentManagementNetworkDetailsParameters struct {

	// The OCID of the network attached to the DRG.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// The OCID of the route table the DRG attachment is using.
	// +kubebuilder:validation:Optional
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The type can be one of these values: IPSEC_TUNNEL, REMOTE_PEERING_CONNECTION, VCN,VIRTUAL_CIRCUIT
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type DrgAttachmentManagementObservation struct {

	// The type for the network resource attached to the DRG.
	AttachmentType *string `json:"attachmentType,omitempty" tf:"attachment_type,omitempty"`

	// The OCID of the compartment.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The OCID of the DRG.
	DrgID *string `json:"drgId,omitempty" tf:"drg_id,omitempty"`

	// (Updatable) The OCID of the DRG route table assigned to the DRG attachment.
	DrgRouteTableID *string `json:"drgRouteTableId,omitempty" tf:"drg_route_table_id,omitempty"`

	// The OCID of the export route distribution used to specify how routes in the assigned DRG route table are advertised to the attachment. If this value is null, no routes are advertised through this attachment.
	ExportDrgRouteDistributionID *string `json:"exportDrgRouteDistributionId,omitempty" tf:"export_drg_route_distribution_id,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// The OCID of the network attached to the DRG.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates whether the DRG attachment and attached network live in a different tenancy than the DRG.  Example: false
	IsCrossTenancy *bool `json:"isCrossTenancy,omitempty" tf:"is_cross_tenancy,omitempty"`

	// (Updatable)
	NetworkDetails []DrgAttachmentManagementNetworkDetailsObservation `json:"networkDetails,omitempty" tf:"network_details,omitempty"`

	// The OCID of the resource (virtual circuit, VCN, IPSec tunnel, or remote peering connection) attached to the DRG.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// (Updatable) An optional property when set to true during update disables the export of route Distribution by setting export_drg_route_distribution_id to null.
	RemoveExportDrgRouteDistributionTrigger *bool `json:"removeExportDrgRouteDistributionTrigger,omitempty" tf:"remove_export_drg_route_distribution_trigger,omitempty"`

	// The OCID of the route table the DRG attachment is using.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the DRG attachment was created, in the format defined by RFC3339.  Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The OCID of the VCN.
	VcnID *string `json:"vcnId,omitempty" tf:"vcn_id,omitempty"`
}

type DrgAttachmentManagementParameters struct {

	// The type for the network resource attached to the DRG.
	// +kubebuilder:validation:Optional
	AttachmentType *string `json:"attachmentType,omitempty" tf:"attachment_type,omitempty"`

	// The OCID of the compartment.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The OCID of the DRG.
	// +crossplane:generate:reference:type=Drg
	// +kubebuilder:validation:Optional
	DrgID *string `json:"drgId,omitempty" tf:"drg_id,omitempty"`

	// Reference to a Drg to populate drgId.
	// +kubebuilder:validation:Optional
	DrgIDRef *v1.Reference `json:"drgIdRef,omitempty" tf:"-"`

	// Selector for a Drg to populate drgId.
	// +kubebuilder:validation:Optional
	DrgIDSelector *v1.Selector `json:"drgIdSelector,omitempty" tf:"-"`

	// (Updatable) The OCID of the DRG route table assigned to the DRG attachment.
	// +crossplane:generate:reference:type=DrgRouteTable
	// +kubebuilder:validation:Optional
	DrgRouteTableID *string `json:"drgRouteTableId,omitempty" tf:"drg_route_table_id,omitempty"`

	// Reference to a DrgRouteTable to populate drgRouteTableId.
	// +kubebuilder:validation:Optional
	DrgRouteTableIDRef *v1.Reference `json:"drgRouteTableIdRef,omitempty" tf:"-"`

	// Selector for a DrgRouteTable to populate drgRouteTableId.
	// +kubebuilder:validation:Optional
	DrgRouteTableIDSelector *v1.Selector `json:"drgRouteTableIdSelector,omitempty" tf:"-"`

	// The OCID of the export route distribution used to specify how routes in the assigned DRG route table are advertised to the attachment. If this value is null, no routes are advertised through this attachment.
	// +kubebuilder:validation:Optional
	ExportDrgRouteDistributionID *string `json:"exportDrgRouteDistributionId,omitempty" tf:"export_drg_route_distribution_id,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable)
	// +kubebuilder:validation:Optional
	NetworkDetails []DrgAttachmentManagementNetworkDetailsParameters `json:"networkDetails,omitempty" tf:"network_details,omitempty"`

	// The OCID of the resource (virtual circuit, VCN, IPSec tunnel, or remote peering connection) attached to the DRG.
	// +crossplane:generate:reference:type=Vcn
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Vcn to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Vcn to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// (Updatable) An optional property when set to true during update disables the export of route Distribution by setting export_drg_route_distribution_id to null.
	// +kubebuilder:validation:Optional
	RemoveExportDrgRouteDistributionTrigger *bool `json:"removeExportDrgRouteDistributionTrigger,omitempty" tf:"remove_export_drg_route_distribution_trigger,omitempty"`

	// The OCID of the route table the DRG attachment is using.
	// +kubebuilder:validation:Optional
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The OCID of the VCN.
	// +kubebuilder:validation:Optional
	VcnID *string `json:"vcnId,omitempty" tf:"vcn_id,omitempty"`
}

// DrgAttachmentManagementSpec defines the desired state of DrgAttachmentManagement
type DrgAttachmentManagementSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DrgAttachmentManagementParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DrgAttachmentManagementInitParameters `json:"initProvider,omitempty"`
}

// DrgAttachmentManagementStatus defines the observed state of DrgAttachmentManagement.
type DrgAttachmentManagementStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DrgAttachmentManagementObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DrgAttachmentManagement is the Schema for the DrgAttachmentManagements API. Provides details about specific Drg Attachment Management resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type DrgAttachmentManagement struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.attachmentType) || (has(self.initProvider) && has(self.initProvider.attachmentType))",message="spec.forProvider.attachmentType is a required parameter"
	Spec   DrgAttachmentManagementSpec   `json:"spec"`
	Status DrgAttachmentManagementStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DrgAttachmentManagementList contains a list of DrgAttachmentManagements
type DrgAttachmentManagementList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DrgAttachmentManagement `json:"items"`
}

// Repository type metadata.
var (
	DrgAttachmentManagement_Kind             = "DrgAttachmentManagement"
	DrgAttachmentManagement_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DrgAttachmentManagement_Kind}.String()
	DrgAttachmentManagement_KindAPIVersion   = DrgAttachmentManagement_Kind + "." + CRDGroupVersion.String()
	DrgAttachmentManagement_GroupVersionKind = CRDGroupVersion.WithKind(DrgAttachmentManagement_Kind)
)

func init() {
	SchemeBuilder.Register(&DrgAttachmentManagement{}, &DrgAttachmentManagementList{})
}
