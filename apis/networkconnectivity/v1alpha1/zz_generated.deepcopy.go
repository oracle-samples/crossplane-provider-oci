//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPSessionInfoInitParameters) DeepCopyInto(out *BGPSessionInfoInitParameters) {
	*out = *in
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIP != nil {
		in, out := &in.CustomerInterfaceIP, &out.CustomerInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIPv6 != nil {
		in, out := &in.CustomerInterfaceIPv6, &out.CustomerInterfaceIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIP != nil {
		in, out := &in.OracleInterfaceIP, &out.OracleInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIPv6 != nil {
		in, out := &in.OracleInterfaceIPv6, &out.OracleInterfaceIPv6
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPSessionInfoInitParameters.
func (in *BGPSessionInfoInitParameters) DeepCopy() *BGPSessionInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(BGPSessionInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPSessionInfoObservation) DeepCopyInto(out *BGPSessionInfoObservation) {
	*out = *in
	if in.BGPIPv6State != nil {
		in, out := &in.BGPIPv6State, &out.BGPIPv6State
		*out = new(string)
		**out = **in
	}
	if in.BGPIpv6State != nil {
		in, out := &in.BGPIpv6State, &out.BGPIpv6State
		*out = new(string)
		**out = **in
	}
	if in.BGPState != nil {
		in, out := &in.BGPState, &out.BGPState
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIP != nil {
		in, out := &in.CustomerInterfaceIP, &out.CustomerInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIPv6 != nil {
		in, out := &in.CustomerInterfaceIPv6, &out.CustomerInterfaceIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPAsn != nil {
		in, out := &in.OracleBGPAsn, &out.OracleBGPAsn
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIP != nil {
		in, out := &in.OracleInterfaceIP, &out.OracleInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIPv6 != nil {
		in, out := &in.OracleInterfaceIPv6, &out.OracleInterfaceIPv6
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPSessionInfoObservation.
func (in *BGPSessionInfoObservation) DeepCopy() *BGPSessionInfoObservation {
	if in == nil {
		return nil
	}
	out := new(BGPSessionInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPSessionInfoParameters) DeepCopyInto(out *BGPSessionInfoParameters) {
	*out = *in
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIP != nil {
		in, out := &in.CustomerInterfaceIP, &out.CustomerInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIPv6 != nil {
		in, out := &in.CustomerInterfaceIPv6, &out.CustomerInterfaceIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIP != nil {
		in, out := &in.OracleInterfaceIP, &out.OracleInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIPv6 != nil {
		in, out := &in.OracleInterfaceIPv6, &out.OracleInterfaceIPv6
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPSessionInfoParameters.
func (in *BGPSessionInfoParameters) DeepCopy() *BGPSessionInfoParameters {
	if in == nil {
		return nil
	}
	out := new(BGPSessionInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cpe) DeepCopyInto(out *Cpe) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cpe.
func (in *Cpe) DeepCopy() *Cpe {
	if in == nil {
		return nil
	}
	out := new(Cpe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cpe) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeInitParameters) DeepCopyInto(out *CpeInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CpeDeviceShapeID != nil {
		in, out := &in.CpeDeviceShapeID, &out.CpeDeviceShapeID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeInitParameters.
func (in *CpeInitParameters) DeepCopy() *CpeInitParameters {
	if in == nil {
		return nil
	}
	out := new(CpeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeList) DeepCopyInto(out *CpeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cpe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeList.
func (in *CpeList) DeepCopy() *CpeList {
	if in == nil {
		return nil
	}
	out := new(CpeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CpeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeObservation) DeepCopyInto(out *CpeObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeDeviceShapeID != nil {
		in, out := &in.CpeDeviceShapeID, &out.CpeDeviceShapeID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeObservation.
func (in *CpeObservation) DeepCopy() *CpeObservation {
	if in == nil {
		return nil
	}
	out := new(CpeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeParameters) DeepCopyInto(out *CpeParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CpeDeviceShapeID != nil {
		in, out := &in.CpeDeviceShapeID, &out.CpeDeviceShapeID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeParameters.
func (in *CpeParameters) DeepCopy() *CpeParameters {
	if in == nil {
		return nil
	}
	out := new(CpeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeSpec) DeepCopyInto(out *CpeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeSpec.
func (in *CpeSpec) DeepCopy() *CpeSpec {
	if in == nil {
		return nil
	}
	out := new(CpeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeStatus) DeepCopyInto(out *CpeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeStatus.
func (in *CpeStatus) DeepCopy() *CpeStatus {
	if in == nil {
		return nil
	}
	out := new(CpeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnect) DeepCopyInto(out *CrossConnect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnect.
func (in *CrossConnect) DeepCopy() *CrossConnect {
	if in == nil {
		return nil
	}
	out := new(CrossConnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossConnect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroup) DeepCopyInto(out *CrossConnectGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroup.
func (in *CrossConnectGroup) DeepCopy() *CrossConnectGroup {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossConnectGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupInitParameters) DeepCopyInto(out *CrossConnectGroupInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]CrossConnectGroupMacsecPropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupInitParameters.
func (in *CrossConnectGroupInitParameters) DeepCopy() *CrossConnectGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupList) DeepCopyInto(out *CrossConnectGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CrossConnectGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupList.
func (in *CrossConnectGroupList) DeepCopy() *CrossConnectGroupList {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossConnectGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupMacsecPropertiesInitParameters) DeepCopyInto(out *CrossConnectGroupMacsecPropertiesInitParameters) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]MacsecPropertiesPrimaryKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupMacsecPropertiesInitParameters.
func (in *CrossConnectGroupMacsecPropertiesInitParameters) DeepCopy() *CrossConnectGroupMacsecPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupMacsecPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupMacsecPropertiesObservation) DeepCopyInto(out *CrossConnectGroupMacsecPropertiesObservation) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]MacsecPropertiesPrimaryKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupMacsecPropertiesObservation.
func (in *CrossConnectGroupMacsecPropertiesObservation) DeepCopy() *CrossConnectGroupMacsecPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupMacsecPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupMacsecPropertiesParameters) DeepCopyInto(out *CrossConnectGroupMacsecPropertiesParameters) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]MacsecPropertiesPrimaryKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupMacsecPropertiesParameters.
func (in *CrossConnectGroupMacsecPropertiesParameters) DeepCopy() *CrossConnectGroupMacsecPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupMacsecPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupObservation) DeepCopyInto(out *CrossConnectGroupObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]CrossConnectGroupMacsecPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OciLogicalDeviceName != nil {
		in, out := &in.OciLogicalDeviceName, &out.OciLogicalDeviceName
		*out = new(string)
		**out = **in
	}
	if in.OciPhysicalDeviceName != nil {
		in, out := &in.OciPhysicalDeviceName, &out.OciPhysicalDeviceName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupObservation.
func (in *CrossConnectGroupObservation) DeepCopy() *CrossConnectGroupObservation {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupParameters) DeepCopyInto(out *CrossConnectGroupParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]CrossConnectGroupMacsecPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupParameters.
func (in *CrossConnectGroupParameters) DeepCopy() *CrossConnectGroupParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupSpec) DeepCopyInto(out *CrossConnectGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupSpec.
func (in *CrossConnectGroupSpec) DeepCopy() *CrossConnectGroupSpec {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupStatus) DeepCopyInto(out *CrossConnectGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupStatus.
func (in *CrossConnectGroupStatus) DeepCopy() *CrossConnectGroupStatus {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectInitParameters) DeepCopyInto(out *CrossConnectInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectGroupID != nil {
		in, out := &in.CrossConnectGroupID, &out.CrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FarCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.FarCrossConnectOrCrossConnectGroupID, &out.FarCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]MacsecPropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NearCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.NearCrossConnectOrCrossConnectGroupID, &out.NearCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.PortSpeedShapeName != nil {
		in, out := &in.PortSpeedShapeName, &out.PortSpeedShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectInitParameters.
func (in *CrossConnectInitParameters) DeepCopy() *CrossConnectInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectList) DeepCopyInto(out *CrossConnectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CrossConnect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectList.
func (in *CrossConnectList) DeepCopy() *CrossConnectList {
	if in == nil {
		return nil
	}
	out := new(CrossConnectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossConnectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectMappingsInitParameters) DeepCopyInto(out *CrossConnectMappingsInitParameters) {
	*out = *in
	if in.BGPMd5AuthKey != nil {
		in, out := &in.BGPMd5AuthKey, &out.BGPMd5AuthKey
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.CrossConnectOrCrossConnectGroupID, &out.CrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIP != nil {
		in, out := &in.CustomerBGPPeeringIP, &out.CustomerBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIPv6 != nil {
		in, out := &in.CustomerBGPPeeringIPv6, &out.CustomerBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIP != nil {
		in, out := &in.OracleBGPPeeringIP, &out.OracleBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIPv6 != nil {
		in, out := &in.OracleBGPPeeringIPv6, &out.OracleBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.Vlan != nil {
		in, out := &in.Vlan, &out.Vlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectMappingsInitParameters.
func (in *CrossConnectMappingsInitParameters) DeepCopy() *CrossConnectMappingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectMappingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectMappingsObservation) DeepCopyInto(out *CrossConnectMappingsObservation) {
	*out = *in
	if in.BGPMd5AuthKey != nil {
		in, out := &in.BGPMd5AuthKey, &out.BGPMd5AuthKey
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.CrossConnectOrCrossConnectGroupID, &out.CrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIP != nil {
		in, out := &in.CustomerBGPPeeringIP, &out.CustomerBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIPv6 != nil {
		in, out := &in.CustomerBGPPeeringIPv6, &out.CustomerBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIP != nil {
		in, out := &in.OracleBGPPeeringIP, &out.OracleBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIPv6 != nil {
		in, out := &in.OracleBGPPeeringIPv6, &out.OracleBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.Vlan != nil {
		in, out := &in.Vlan, &out.Vlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectMappingsObservation.
func (in *CrossConnectMappingsObservation) DeepCopy() *CrossConnectMappingsObservation {
	if in == nil {
		return nil
	}
	out := new(CrossConnectMappingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectMappingsParameters) DeepCopyInto(out *CrossConnectMappingsParameters) {
	*out = *in
	if in.BGPMd5AuthKey != nil {
		in, out := &in.BGPMd5AuthKey, &out.BGPMd5AuthKey
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.CrossConnectOrCrossConnectGroupID, &out.CrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIP != nil {
		in, out := &in.CustomerBGPPeeringIP, &out.CustomerBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIPv6 != nil {
		in, out := &in.CustomerBGPPeeringIPv6, &out.CustomerBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIP != nil {
		in, out := &in.OracleBGPPeeringIP, &out.OracleBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIPv6 != nil {
		in, out := &in.OracleBGPPeeringIPv6, &out.OracleBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.Vlan != nil {
		in, out := &in.Vlan, &out.Vlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectMappingsParameters.
func (in *CrossConnectMappingsParameters) DeepCopy() *CrossConnectMappingsParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectMappingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectObservation) DeepCopyInto(out *CrossConnectObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectGroupID != nil {
		in, out := &in.CrossConnectGroupID, &out.CrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FarCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.FarCrossConnectOrCrossConnectGroupID, &out.FarCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]MacsecPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NearCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.NearCrossConnectOrCrossConnectGroupID, &out.NearCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.OciLogicalDeviceName != nil {
		in, out := &in.OciLogicalDeviceName, &out.OciLogicalDeviceName
		*out = new(string)
		**out = **in
	}
	if in.OciPhysicalDeviceName != nil {
		in, out := &in.OciPhysicalDeviceName, &out.OciPhysicalDeviceName
		*out = new(string)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpeedShapeName != nil {
		in, out := &in.PortSpeedShapeName, &out.PortSpeedShapeName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectObservation.
func (in *CrossConnectObservation) DeepCopy() *CrossConnectObservation {
	if in == nil {
		return nil
	}
	out := new(CrossConnectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectParameters) DeepCopyInto(out *CrossConnectParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectGroupID != nil {
		in, out := &in.CrossConnectGroupID, &out.CrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FarCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.FarCrossConnectOrCrossConnectGroupID, &out.FarCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]MacsecPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NearCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.NearCrossConnectOrCrossConnectGroupID, &out.NearCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.PortSpeedShapeName != nil {
		in, out := &in.PortSpeedShapeName, &out.PortSpeedShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectParameters.
func (in *CrossConnectParameters) DeepCopy() *CrossConnectParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectSpec) DeepCopyInto(out *CrossConnectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectSpec.
func (in *CrossConnectSpec) DeepCopy() *CrossConnectSpec {
	if in == nil {
		return nil
	}
	out := new(CrossConnectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectStatus) DeepCopyInto(out *CrossConnectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectStatus.
func (in *CrossConnectStatus) DeepCopy() *CrossConnectStatus {
	if in == nil {
		return nil
	}
	out := new(CrossConnectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDrgRouteTablesInitParameters) DeepCopyInto(out *DefaultDrgRouteTablesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDrgRouteTablesInitParameters.
func (in *DefaultDrgRouteTablesInitParameters) DeepCopy() *DefaultDrgRouteTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultDrgRouteTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDrgRouteTablesObservation) DeepCopyInto(out *DefaultDrgRouteTablesObservation) {
	*out = *in
	if in.IpsecTunnel != nil {
		in, out := &in.IpsecTunnel, &out.IpsecTunnel
		*out = new(string)
		**out = **in
	}
	if in.RemotePeeringConnection != nil {
		in, out := &in.RemotePeeringConnection, &out.RemotePeeringConnection
		*out = new(string)
		**out = **in
	}
	if in.Vcn != nil {
		in, out := &in.Vcn, &out.Vcn
		*out = new(string)
		**out = **in
	}
	if in.VirtualCircuit != nil {
		in, out := &in.VirtualCircuit, &out.VirtualCircuit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDrgRouteTablesObservation.
func (in *DefaultDrgRouteTablesObservation) DeepCopy() *DefaultDrgRouteTablesObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultDrgRouteTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDrgRouteTablesParameters) DeepCopyInto(out *DefaultDrgRouteTablesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDrgRouteTablesParameters.
func (in *DefaultDrgRouteTablesParameters) DeepCopy() *DefaultDrgRouteTablesParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultDrgRouteTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdConfigInitParameters) DeepCopyInto(out *DpdConfigInitParameters) {
	*out = *in
	if in.DpdMode != nil {
		in, out := &in.DpdMode, &out.DpdMode
		*out = new(string)
		**out = **in
	}
	if in.DpdTimeoutInSec != nil {
		in, out := &in.DpdTimeoutInSec, &out.DpdTimeoutInSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdConfigInitParameters.
func (in *DpdConfigInitParameters) DeepCopy() *DpdConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DpdConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdConfigObservation) DeepCopyInto(out *DpdConfigObservation) {
	*out = *in
	if in.DpdMode != nil {
		in, out := &in.DpdMode, &out.DpdMode
		*out = new(string)
		**out = **in
	}
	if in.DpdTimeoutInSec != nil {
		in, out := &in.DpdTimeoutInSec, &out.DpdTimeoutInSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdConfigObservation.
func (in *DpdConfigObservation) DeepCopy() *DpdConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DpdConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdConfigParameters) DeepCopyInto(out *DpdConfigParameters) {
	*out = *in
	if in.DpdMode != nil {
		in, out := &in.DpdMode, &out.DpdMode
		*out = new(string)
		**out = **in
	}
	if in.DpdTimeoutInSec != nil {
		in, out := &in.DpdTimeoutInSec, &out.DpdTimeoutInSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdConfigParameters.
func (in *DpdConfigParameters) DeepCopy() *DpdConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DpdConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Drg) DeepCopyInto(out *Drg) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Drg.
func (in *Drg) DeepCopy() *Drg {
	if in == nil {
		return nil
	}
	out := new(Drg)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Drg) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAllAttachmentsInitParameters) DeepCopyInto(out *DrgAllAttachmentsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAllAttachmentsInitParameters.
func (in *DrgAllAttachmentsInitParameters) DeepCopy() *DrgAllAttachmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAllAttachmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAllAttachmentsObservation) DeepCopyInto(out *DrgAllAttachmentsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAllAttachmentsObservation.
func (in *DrgAllAttachmentsObservation) DeepCopy() *DrgAllAttachmentsObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAllAttachmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAllAttachmentsParameters) DeepCopyInto(out *DrgAllAttachmentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAllAttachmentsParameters.
func (in *DrgAllAttachmentsParameters) DeepCopy() *DrgAllAttachmentsParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAllAttachmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachment) DeepCopyInto(out *DrgAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachment.
func (in *DrgAttachment) DeepCopy() *DrgAttachment {
	if in == nil {
		return nil
	}
	out := new(DrgAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentInitParameters) DeepCopyInto(out *DrgAttachmentInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableIDRef != nil {
		in, out := &in.DrgRouteTableIDRef, &out.DrgRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableIDSelector != nil {
		in, out := &in.DrgRouteTableIDSelector, &out.DrgRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]NetworkDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentInitParameters.
func (in *DrgAttachmentInitParameters) DeepCopy() *DrgAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentList) DeepCopyInto(out *DrgAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentList.
func (in *DrgAttachmentList) DeepCopy() *DrgAttachmentList {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagement) DeepCopyInto(out *DrgAttachmentManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagement.
func (in *DrgAttachmentManagement) DeepCopy() *DrgAttachmentManagement {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementInitParameters) DeepCopyInto(out *DrgAttachmentManagementInitParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableIDRef != nil {
		in, out := &in.DrgRouteTableIDRef, &out.DrgRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableIDSelector != nil {
		in, out := &in.DrgRouteTableIDSelector, &out.DrgRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]DrgAttachmentManagementNetworkDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NetworkIDRef != nil {
		in, out := &in.NetworkIDRef, &out.NetworkIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkIDSelector != nil {
		in, out := &in.NetworkIDSelector, &out.NetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementInitParameters.
func (in *DrgAttachmentManagementInitParameters) DeepCopy() *DrgAttachmentManagementInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementList) DeepCopyInto(out *DrgAttachmentManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgAttachmentManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementList.
func (in *DrgAttachmentManagementList) DeepCopy() *DrgAttachmentManagementList {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementNetworkDetailsInitParameters) DeepCopyInto(out *DrgAttachmentManagementNetworkDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementNetworkDetailsInitParameters.
func (in *DrgAttachmentManagementNetworkDetailsInitParameters) DeepCopy() *DrgAttachmentManagementNetworkDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementNetworkDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementNetworkDetailsObservation) DeepCopyInto(out *DrgAttachmentManagementNetworkDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IpsecConnectionID != nil {
		in, out := &in.IpsecConnectionID, &out.IpsecConnectionID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementNetworkDetailsObservation.
func (in *DrgAttachmentManagementNetworkDetailsObservation) DeepCopy() *DrgAttachmentManagementNetworkDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementNetworkDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementNetworkDetailsParameters) DeepCopyInto(out *DrgAttachmentManagementNetworkDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementNetworkDetailsParameters.
func (in *DrgAttachmentManagementNetworkDetailsParameters) DeepCopy() *DrgAttachmentManagementNetworkDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementNetworkDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementObservation) DeepCopyInto(out *DrgAttachmentManagementObservation) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]DrgAttachmentManagementNetworkDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementObservation.
func (in *DrgAttachmentManagementObservation) DeepCopy() *DrgAttachmentManagementObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementParameters) DeepCopyInto(out *DrgAttachmentManagementParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableIDRef != nil {
		in, out := &in.DrgRouteTableIDRef, &out.DrgRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableIDSelector != nil {
		in, out := &in.DrgRouteTableIDSelector, &out.DrgRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]DrgAttachmentManagementNetworkDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NetworkIDRef != nil {
		in, out := &in.NetworkIDRef, &out.NetworkIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkIDSelector != nil {
		in, out := &in.NetworkIDSelector, &out.NetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementParameters.
func (in *DrgAttachmentManagementParameters) DeepCopy() *DrgAttachmentManagementParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementSpec) DeepCopyInto(out *DrgAttachmentManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementSpec.
func (in *DrgAttachmentManagementSpec) DeepCopy() *DrgAttachmentManagementSpec {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementStatus) DeepCopyInto(out *DrgAttachmentManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementStatus.
func (in *DrgAttachmentManagementStatus) DeepCopy() *DrgAttachmentManagementStatus {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentObservation) DeepCopyInto(out *DrgAttachmentObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]NetworkDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentObservation.
func (in *DrgAttachmentObservation) DeepCopy() *DrgAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentParameters) DeepCopyInto(out *DrgAttachmentParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableIDRef != nil {
		in, out := &in.DrgRouteTableIDRef, &out.DrgRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableIDSelector != nil {
		in, out := &in.DrgRouteTableIDSelector, &out.DrgRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]NetworkDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentParameters.
func (in *DrgAttachmentParameters) DeepCopy() *DrgAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentSpec) DeepCopyInto(out *DrgAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentSpec.
func (in *DrgAttachmentSpec) DeepCopy() *DrgAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentStatus) DeepCopyInto(out *DrgAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentStatus.
func (in *DrgAttachmentStatus) DeepCopy() *DrgAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsList) DeepCopyInto(out *DrgAttachmentsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsList.
func (in *DrgAttachmentsList) DeepCopy() *DrgAttachmentsList {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListInitParameters) DeepCopyInto(out *DrgAttachmentsListInitParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListInitParameters.
func (in *DrgAttachmentsListInitParameters) DeepCopy() *DrgAttachmentsListInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListList) DeepCopyInto(out *DrgAttachmentsListList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgAttachmentsList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListList.
func (in *DrgAttachmentsListList) DeepCopy() *DrgAttachmentsListList {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentsListList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListObservation) DeepCopyInto(out *DrgAttachmentsListObservation) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgAllAttachments != nil {
		in, out := &in.DrgAllAttachments, &out.DrgAllAttachments
		*out = make([]DrgAllAttachmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListObservation.
func (in *DrgAttachmentsListObservation) DeepCopy() *DrgAttachmentsListObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListParameters) DeepCopyInto(out *DrgAttachmentsListParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListParameters.
func (in *DrgAttachmentsListParameters) DeepCopy() *DrgAttachmentsListParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListSpec) DeepCopyInto(out *DrgAttachmentsListSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListSpec.
func (in *DrgAttachmentsListSpec) DeepCopy() *DrgAttachmentsListSpec {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListStatus) DeepCopyInto(out *DrgAttachmentsListStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListStatus.
func (in *DrgAttachmentsListStatus) DeepCopy() *DrgAttachmentsListStatus {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgInitParameters) DeepCopyInto(out *DrgInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgInitParameters.
func (in *DrgInitParameters) DeepCopy() *DrgInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgList) DeepCopyInto(out *DrgList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Drg, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgList.
func (in *DrgList) DeepCopy() *DrgList {
	if in == nil {
		return nil
	}
	out := new(DrgList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgObservation) DeepCopyInto(out *DrgObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefaultDrgRouteTables != nil {
		in, out := &in.DefaultDrgRouteTables, &out.DefaultDrgRouteTables
		*out = make([]DefaultDrgRouteTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultExportDrgRouteDistributionID != nil {
		in, out := &in.DefaultExportDrgRouteDistributionID, &out.DefaultExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RedundancyStatus != nil {
		in, out := &in.RedundancyStatus, &out.RedundancyStatus
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgObservation.
func (in *DrgObservation) DeepCopy() *DrgObservation {
	if in == nil {
		return nil
	}
	out := new(DrgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgParameters) DeepCopyInto(out *DrgParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgParameters.
func (in *DrgParameters) DeepCopy() *DrgParameters {
	if in == nil {
		return nil
	}
	out := new(DrgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistribution) DeepCopyInto(out *DrgRouteDistribution) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistribution.
func (in *DrgRouteDistribution) DeepCopy() *DrgRouteDistribution {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistribution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteDistribution) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionInitParameters) DeepCopyInto(out *DrgRouteDistributionInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DistributionType != nil {
		in, out := &in.DistributionType, &out.DistributionType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionInitParameters.
func (in *DrgRouteDistributionInitParameters) DeepCopy() *DrgRouteDistributionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionList) DeepCopyInto(out *DrgRouteDistributionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgRouteDistribution, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionList.
func (in *DrgRouteDistributionList) DeepCopy() *DrgRouteDistributionList {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteDistributionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionObservation) DeepCopyInto(out *DrgRouteDistributionObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DistributionType != nil {
		in, out := &in.DistributionType, &out.DistributionType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionObservation.
func (in *DrgRouteDistributionObservation) DeepCopy() *DrgRouteDistributionObservation {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionParameters) DeepCopyInto(out *DrgRouteDistributionParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DistributionType != nil {
		in, out := &in.DistributionType, &out.DistributionType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionParameters.
func (in *DrgRouteDistributionParameters) DeepCopy() *DrgRouteDistributionParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionSpec) DeepCopyInto(out *DrgRouteDistributionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionSpec.
func (in *DrgRouteDistributionSpec) DeepCopy() *DrgRouteDistributionSpec {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatement) DeepCopyInto(out *DrgRouteDistributionStatement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatement.
func (in *DrgRouteDistributionStatement) DeepCopy() *DrgRouteDistributionStatement {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteDistributionStatement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementInitParameters) DeepCopyInto(out *DrgRouteDistributionStatementInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteDistributionID != nil {
		in, out := &in.DrgRouteDistributionID, &out.DrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteDistributionIDRef != nil {
		in, out := &in.DrgRouteDistributionIDRef, &out.DrgRouteDistributionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteDistributionIDSelector != nil {
		in, out := &in.DrgRouteDistributionIDSelector, &out.DrgRouteDistributionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]MatchCriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementInitParameters.
func (in *DrgRouteDistributionStatementInitParameters) DeepCopy() *DrgRouteDistributionStatementInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementList) DeepCopyInto(out *DrgRouteDistributionStatementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgRouteDistributionStatement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementList.
func (in *DrgRouteDistributionStatementList) DeepCopy() *DrgRouteDistributionStatementList {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteDistributionStatementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementObservation) DeepCopyInto(out *DrgRouteDistributionStatementObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteDistributionID != nil {
		in, out := &in.DrgRouteDistributionID, &out.DrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]MatchCriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementObservation.
func (in *DrgRouteDistributionStatementObservation) DeepCopy() *DrgRouteDistributionStatementObservation {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementParameters) DeepCopyInto(out *DrgRouteDistributionStatementParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteDistributionID != nil {
		in, out := &in.DrgRouteDistributionID, &out.DrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteDistributionIDRef != nil {
		in, out := &in.DrgRouteDistributionIDRef, &out.DrgRouteDistributionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteDistributionIDSelector != nil {
		in, out := &in.DrgRouteDistributionIDSelector, &out.DrgRouteDistributionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]MatchCriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementParameters.
func (in *DrgRouteDistributionStatementParameters) DeepCopy() *DrgRouteDistributionStatementParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementSpec) DeepCopyInto(out *DrgRouteDistributionStatementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementSpec.
func (in *DrgRouteDistributionStatementSpec) DeepCopy() *DrgRouteDistributionStatementSpec {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementStatus) DeepCopyInto(out *DrgRouteDistributionStatementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementStatus.
func (in *DrgRouteDistributionStatementStatus) DeepCopy() *DrgRouteDistributionStatementStatus {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatus) DeepCopyInto(out *DrgRouteDistributionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatus.
func (in *DrgRouteDistributionStatus) DeepCopy() *DrgRouteDistributionStatus {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTable) DeepCopyInto(out *DrgRouteTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTable.
func (in *DrgRouteTable) DeepCopy() *DrgRouteTable {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableInitParameters) DeepCopyInto(out *DrgRouteTableInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImportDrgRouteDistributionID != nil {
		in, out := &in.ImportDrgRouteDistributionID, &out.ImportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.ImportDrgRouteDistributionIDRef != nil {
		in, out := &in.ImportDrgRouteDistributionIDRef, &out.ImportDrgRouteDistributionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ImportDrgRouteDistributionIDSelector != nil {
		in, out := &in.ImportDrgRouteDistributionIDSelector, &out.ImportDrgRouteDistributionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsEcmpEnabled != nil {
		in, out := &in.IsEcmpEnabled, &out.IsEcmpEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoveImportTrigger != nil {
		in, out := &in.RemoveImportTrigger, &out.RemoveImportTrigger
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableInitParameters.
func (in *DrgRouteTableInitParameters) DeepCopy() *DrgRouteTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableList) DeepCopyInto(out *DrgRouteTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgRouteTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableList.
func (in *DrgRouteTableList) DeepCopy() *DrgRouteTableList {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableObservation) DeepCopyInto(out *DrgRouteTableObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImportDrgRouteDistributionID != nil {
		in, out := &in.ImportDrgRouteDistributionID, &out.ImportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.IsEcmpEnabled != nil {
		in, out := &in.IsEcmpEnabled, &out.IsEcmpEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoveImportTrigger != nil {
		in, out := &in.RemoveImportTrigger, &out.RemoveImportTrigger
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableObservation.
func (in *DrgRouteTableObservation) DeepCopy() *DrgRouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableParameters) DeepCopyInto(out *DrgRouteTableParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImportDrgRouteDistributionID != nil {
		in, out := &in.ImportDrgRouteDistributionID, &out.ImportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.ImportDrgRouteDistributionIDRef != nil {
		in, out := &in.ImportDrgRouteDistributionIDRef, &out.ImportDrgRouteDistributionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ImportDrgRouteDistributionIDSelector != nil {
		in, out := &in.ImportDrgRouteDistributionIDSelector, &out.ImportDrgRouteDistributionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsEcmpEnabled != nil {
		in, out := &in.IsEcmpEnabled, &out.IsEcmpEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoveImportTrigger != nil {
		in, out := &in.RemoveImportTrigger, &out.RemoveImportTrigger
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableParameters.
func (in *DrgRouteTableParameters) DeepCopy() *DrgRouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRule) DeepCopyInto(out *DrgRouteTableRouteRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRule.
func (in *DrgRouteTableRouteRule) DeepCopy() *DrgRouteTableRouteRule {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteTableRouteRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleInitParameters) DeepCopyInto(out *DrgRouteTableRouteRuleInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableIDRef != nil {
		in, out := &in.DrgRouteTableIDRef, &out.DrgRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableIDSelector != nil {
		in, out := &in.DrgRouteTableIDSelector, &out.DrgRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopDrgAttachmentID != nil {
		in, out := &in.NextHopDrgAttachmentID, &out.NextHopDrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.NextHopDrgAttachmentIDRef != nil {
		in, out := &in.NextHopDrgAttachmentIDRef, &out.NextHopDrgAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopDrgAttachmentIDSelector != nil {
		in, out := &in.NextHopDrgAttachmentIDSelector, &out.NextHopDrgAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleInitParameters.
func (in *DrgRouteTableRouteRuleInitParameters) DeepCopy() *DrgRouteTableRouteRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleList) DeepCopyInto(out *DrgRouteTableRouteRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgRouteTableRouteRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleList.
func (in *DrgRouteTableRouteRuleList) DeepCopy() *DrgRouteTableRouteRuleList {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteTableRouteRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleObservation) DeepCopyInto(out *DrgRouteTableRouteRuleObservation) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsBlackhole != nil {
		in, out := &in.IsBlackhole, &out.IsBlackhole
		*out = new(bool)
		**out = **in
	}
	if in.IsConflict != nil {
		in, out := &in.IsConflict, &out.IsConflict
		*out = new(bool)
		**out = **in
	}
	if in.NextHopDrgAttachmentID != nil {
		in, out := &in.NextHopDrgAttachmentID, &out.NextHopDrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.RouteProvenance != nil {
		in, out := &in.RouteProvenance, &out.RouteProvenance
		*out = new(string)
		**out = **in
	}
	if in.RouteType != nil {
		in, out := &in.RouteType, &out.RouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleObservation.
func (in *DrgRouteTableRouteRuleObservation) DeepCopy() *DrgRouteTableRouteRuleObservation {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleParameters) DeepCopyInto(out *DrgRouteTableRouteRuleParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableIDRef != nil {
		in, out := &in.DrgRouteTableIDRef, &out.DrgRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgRouteTableIDSelector != nil {
		in, out := &in.DrgRouteTableIDSelector, &out.DrgRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopDrgAttachmentID != nil {
		in, out := &in.NextHopDrgAttachmentID, &out.NextHopDrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.NextHopDrgAttachmentIDRef != nil {
		in, out := &in.NextHopDrgAttachmentIDRef, &out.NextHopDrgAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopDrgAttachmentIDSelector != nil {
		in, out := &in.NextHopDrgAttachmentIDSelector, &out.NextHopDrgAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleParameters.
func (in *DrgRouteTableRouteRuleParameters) DeepCopy() *DrgRouteTableRouteRuleParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleSpec) DeepCopyInto(out *DrgRouteTableRouteRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleSpec.
func (in *DrgRouteTableRouteRuleSpec) DeepCopy() *DrgRouteTableRouteRuleSpec {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleStatus) DeepCopyInto(out *DrgRouteTableRouteRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleStatus.
func (in *DrgRouteTableRouteRuleStatus) DeepCopy() *DrgRouteTableRouteRuleStatus {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableSpec) DeepCopyInto(out *DrgRouteTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableSpec.
func (in *DrgRouteTableSpec) DeepCopy() *DrgRouteTableSpec {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableStatus) DeepCopyInto(out *DrgRouteTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableStatus.
func (in *DrgRouteTableStatus) DeepCopy() *DrgRouteTableStatus {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgSpec) DeepCopyInto(out *DrgSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgSpec.
func (in *DrgSpec) DeepCopy() *DrgSpec {
	if in == nil {
		return nil
	}
	out := new(DrgSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgStatus) DeepCopyInto(out *DrgStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgStatus.
func (in *DrgStatus) DeepCopy() *DrgStatus {
	if in == nil {
		return nil
	}
	out := new(DrgStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDomainConfigInitParameters) DeepCopyInto(out *EncryptionDomainConfigInitParameters) {
	*out = *in
	if in.CpeTrafficSelector != nil {
		in, out := &in.CpeTrafficSelector, &out.CpeTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleTrafficSelector != nil {
		in, out := &in.OracleTrafficSelector, &out.OracleTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDomainConfigInitParameters.
func (in *EncryptionDomainConfigInitParameters) DeepCopy() *EncryptionDomainConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDomainConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDomainConfigObservation) DeepCopyInto(out *EncryptionDomainConfigObservation) {
	*out = *in
	if in.CpeTrafficSelector != nil {
		in, out := &in.CpeTrafficSelector, &out.CpeTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleTrafficSelector != nil {
		in, out := &in.OracleTrafficSelector, &out.OracleTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDomainConfigObservation.
func (in *EncryptionDomainConfigObservation) DeepCopy() *EncryptionDomainConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionDomainConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDomainConfigParameters) DeepCopyInto(out *EncryptionDomainConfigParameters) {
	*out = *in
	if in.CpeTrafficSelector != nil {
		in, out := &in.CpeTrafficSelector, &out.CpeTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleTrafficSelector != nil {
		in, out := &in.OracleTrafficSelector, &out.OracleTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDomainConfigParameters.
func (in *EncryptionDomainConfigParameters) DeepCopy() *EncryptionDomainConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDomainConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipsec) DeepCopyInto(out *Ipsec) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipsec.
func (in *Ipsec) DeepCopy() *Ipsec {
	if in == nil {
		return nil
	}
	out := new(Ipsec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Ipsec) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagement) DeepCopyInto(out *IpsecConnectionTunnelManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagement.
func (in *IpsecConnectionTunnelManagement) DeepCopy() *IpsecConnectionTunnelManagement {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpsecConnectionTunnelManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementInitParameters) DeepCopyInto(out *IpsecConnectionTunnelManagementInitParameters) {
	*out = *in
	if in.BGPSessionInfo != nil {
		in, out := &in.BGPSessionInfo, &out.BGPSessionInfo
		*out = make([]BGPSessionInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DpdConfig != nil {
		in, out := &in.DpdConfig, &out.DpdConfig
		*out = make([]DpdConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionDomainConfig != nil {
		in, out := &in.EncryptionDomainConfig, &out.EncryptionDomainConfig
		*out = make([]EncryptionDomainConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.IpsecID != nil {
		in, out := &in.IpsecID, &out.IpsecID
		*out = new(string)
		**out = **in
	}
	if in.NATTranslationEnabled != nil {
		in, out := &in.NATTranslationEnabled, &out.NATTranslationEnabled
		*out = new(string)
		**out = **in
	}
	if in.OracleCanInitiate != nil {
		in, out := &in.OracleCanInitiate, &out.OracleCanInitiate
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneDetails != nil {
		in, out := &in.PhaseOneDetails, &out.PhaseOneDetails
		*out = make([]PhaseOneDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhaseTwoDetails != nil {
		in, out := &in.PhaseTwoDetails, &out.PhaseTwoDetails
		*out = make([]PhaseTwoDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SharedSecretSecretRef != nil {
		in, out := &in.SharedSecretSecretRef, &out.SharedSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TunnelID != nil {
		in, out := &in.TunnelID, &out.TunnelID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementInitParameters.
func (in *IpsecConnectionTunnelManagementInitParameters) DeepCopy() *IpsecConnectionTunnelManagementInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementList) DeepCopyInto(out *IpsecConnectionTunnelManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IpsecConnectionTunnelManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementList.
func (in *IpsecConnectionTunnelManagementList) DeepCopy() *IpsecConnectionTunnelManagementList {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpsecConnectionTunnelManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementObservation) DeepCopyInto(out *IpsecConnectionTunnelManagementObservation) {
	*out = *in
	if in.AssociatedVirtualCircuits != nil {
		in, out := &in.AssociatedVirtualCircuits, &out.AssociatedVirtualCircuits
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BGPSessionInfo != nil {
		in, out := &in.BGPSessionInfo, &out.BGPSessionInfo
		*out = make([]BGPSessionInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeIP != nil {
		in, out := &in.CpeIP, &out.CpeIP
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DpdConfig != nil {
		in, out := &in.DpdConfig, &out.DpdConfig
		*out = make([]DpdConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DpdMode != nil {
		in, out := &in.DpdMode, &out.DpdMode
		*out = new(string)
		**out = **in
	}
	if in.DpdTimeoutInSec != nil {
		in, out := &in.DpdTimeoutInSec, &out.DpdTimeoutInSec
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionDomainConfig != nil {
		in, out := &in.EncryptionDomainConfig, &out.EncryptionDomainConfig
		*out = make([]EncryptionDomainConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.IpsecID != nil {
		in, out := &in.IpsecID, &out.IpsecID
		*out = new(string)
		**out = **in
	}
	if in.NATTranslationEnabled != nil {
		in, out := &in.NATTranslationEnabled, &out.NATTranslationEnabled
		*out = new(string)
		**out = **in
	}
	if in.OracleCanInitiate != nil {
		in, out := &in.OracleCanInitiate, &out.OracleCanInitiate
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneDetails != nil {
		in, out := &in.PhaseOneDetails, &out.PhaseOneDetails
		*out = make([]PhaseOneDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhaseTwoDetails != nil {
		in, out := &in.PhaseTwoDetails, &out.PhaseTwoDetails
		*out = make([]PhaseTwoDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeStatusUpdated != nil {
		in, out := &in.TimeStatusUpdated, &out.TimeStatusUpdated
		*out = new(string)
		**out = **in
	}
	if in.TunnelID != nil {
		in, out := &in.TunnelID, &out.TunnelID
		*out = new(string)
		**out = **in
	}
	if in.VPNIP != nil {
		in, out := &in.VPNIP, &out.VPNIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementObservation.
func (in *IpsecConnectionTunnelManagementObservation) DeepCopy() *IpsecConnectionTunnelManagementObservation {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementParameters) DeepCopyInto(out *IpsecConnectionTunnelManagementParameters) {
	*out = *in
	if in.BGPSessionInfo != nil {
		in, out := &in.BGPSessionInfo, &out.BGPSessionInfo
		*out = make([]BGPSessionInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DpdConfig != nil {
		in, out := &in.DpdConfig, &out.DpdConfig
		*out = make([]DpdConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionDomainConfig != nil {
		in, out := &in.EncryptionDomainConfig, &out.EncryptionDomainConfig
		*out = make([]EncryptionDomainConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.IpsecID != nil {
		in, out := &in.IpsecID, &out.IpsecID
		*out = new(string)
		**out = **in
	}
	if in.NATTranslationEnabled != nil {
		in, out := &in.NATTranslationEnabled, &out.NATTranslationEnabled
		*out = new(string)
		**out = **in
	}
	if in.OracleCanInitiate != nil {
		in, out := &in.OracleCanInitiate, &out.OracleCanInitiate
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneDetails != nil {
		in, out := &in.PhaseOneDetails, &out.PhaseOneDetails
		*out = make([]PhaseOneDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhaseTwoDetails != nil {
		in, out := &in.PhaseTwoDetails, &out.PhaseTwoDetails
		*out = make([]PhaseTwoDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SharedSecretSecretRef != nil {
		in, out := &in.SharedSecretSecretRef, &out.SharedSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TunnelID != nil {
		in, out := &in.TunnelID, &out.TunnelID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementParameters.
func (in *IpsecConnectionTunnelManagementParameters) DeepCopy() *IpsecConnectionTunnelManagementParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementSpec) DeepCopyInto(out *IpsecConnectionTunnelManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementSpec.
func (in *IpsecConnectionTunnelManagementSpec) DeepCopy() *IpsecConnectionTunnelManagementSpec {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementStatus) DeepCopyInto(out *IpsecConnectionTunnelManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementStatus.
func (in *IpsecConnectionTunnelManagementStatus) DeepCopy() *IpsecConnectionTunnelManagementStatus {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecInitParameters) DeepCopyInto(out *IpsecInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CpeID != nil {
		in, out := &in.CpeID, &out.CpeID
		*out = new(string)
		**out = **in
	}
	if in.CpeIDRef != nil {
		in, out := &in.CpeIDRef, &out.CpeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CpeIDSelector != nil {
		in, out := &in.CpeIDSelector, &out.CpeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CpeLocalIdentifier != nil {
		in, out := &in.CpeLocalIdentifier, &out.CpeLocalIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifierType != nil {
		in, out := &in.CpeLocalIdentifierType, &out.CpeLocalIdentifierType
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StaticRoutes != nil {
		in, out := &in.StaticRoutes, &out.StaticRoutes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TunnelConfiguration != nil {
		in, out := &in.TunnelConfiguration, &out.TunnelConfiguration
		*out = make([]TunnelConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecInitParameters.
func (in *IpsecInitParameters) DeepCopy() *IpsecInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecList) DeepCopyInto(out *IpsecList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ipsec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecList.
func (in *IpsecList) DeepCopy() *IpsecList {
	if in == nil {
		return nil
	}
	out := new(IpsecList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpsecList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecObservation) DeepCopyInto(out *IpsecObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeID != nil {
		in, out := &in.CpeID, &out.CpeID
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifier != nil {
		in, out := &in.CpeLocalIdentifier, &out.CpeLocalIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifierType != nil {
		in, out := &in.CpeLocalIdentifierType, &out.CpeLocalIdentifierType
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StaticRoutes != nil {
		in, out := &in.StaticRoutes, &out.StaticRoutes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TransportType != nil {
		in, out := &in.TransportType, &out.TransportType
		*out = new(string)
		**out = **in
	}
	if in.TunnelConfiguration != nil {
		in, out := &in.TunnelConfiguration, &out.TunnelConfiguration
		*out = make([]TunnelConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecObservation.
func (in *IpsecObservation) DeepCopy() *IpsecObservation {
	if in == nil {
		return nil
	}
	out := new(IpsecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecParameters) DeepCopyInto(out *IpsecParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CpeID != nil {
		in, out := &in.CpeID, &out.CpeID
		*out = new(string)
		**out = **in
	}
	if in.CpeIDRef != nil {
		in, out := &in.CpeIDRef, &out.CpeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CpeIDSelector != nil {
		in, out := &in.CpeIDSelector, &out.CpeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CpeLocalIdentifier != nil {
		in, out := &in.CpeLocalIdentifier, &out.CpeLocalIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifierType != nil {
		in, out := &in.CpeLocalIdentifierType, &out.CpeLocalIdentifierType
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgIDRef != nil {
		in, out := &in.DrgIDRef, &out.DrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DrgIDSelector != nil {
		in, out := &in.DrgIDSelector, &out.DrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StaticRoutes != nil {
		in, out := &in.StaticRoutes, &out.StaticRoutes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TunnelConfiguration != nil {
		in, out := &in.TunnelConfiguration, &out.TunnelConfiguration
		*out = make([]TunnelConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecParameters.
func (in *IpsecParameters) DeepCopy() *IpsecParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecSpec) DeepCopyInto(out *IpsecSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecSpec.
func (in *IpsecSpec) DeepCopy() *IpsecSpec {
	if in == nil {
		return nil
	}
	out := new(IpsecSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecStatus) DeepCopyInto(out *IpsecStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecStatus.
func (in *IpsecStatus) DeepCopy() *IpsecStatus {
	if in == nil {
		return nil
	}
	out := new(IpsecStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesInitParameters) DeepCopyInto(out *MacsecPropertiesInitParameters) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesInitParameters.
func (in *MacsecPropertiesInitParameters) DeepCopy() *MacsecPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesObservation) DeepCopyInto(out *MacsecPropertiesObservation) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesObservation.
func (in *MacsecPropertiesObservation) DeepCopy() *MacsecPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesParameters) DeepCopyInto(out *MacsecPropertiesParameters) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesParameters.
func (in *MacsecPropertiesParameters) DeepCopy() *MacsecPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesPrimaryKeyInitParameters) DeepCopyInto(out *MacsecPropertiesPrimaryKeyInitParameters) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesPrimaryKeyInitParameters.
func (in *MacsecPropertiesPrimaryKeyInitParameters) DeepCopy() *MacsecPropertiesPrimaryKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesPrimaryKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesPrimaryKeyObservation) DeepCopyInto(out *MacsecPropertiesPrimaryKeyObservation) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesPrimaryKeyObservation.
func (in *MacsecPropertiesPrimaryKeyObservation) DeepCopy() *MacsecPropertiesPrimaryKeyObservation {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesPrimaryKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesPrimaryKeyParameters) DeepCopyInto(out *MacsecPropertiesPrimaryKeyParameters) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesPrimaryKeyParameters.
func (in *MacsecPropertiesPrimaryKeyParameters) DeepCopy() *MacsecPropertiesPrimaryKeyParameters {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesPrimaryKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchCriteriaInitParameters) DeepCopyInto(out *MatchCriteriaInitParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgAttachmentID != nil {
		in, out := &in.DrgAttachmentID, &out.DrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchCriteriaInitParameters.
func (in *MatchCriteriaInitParameters) DeepCopy() *MatchCriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchCriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchCriteriaObservation) DeepCopyInto(out *MatchCriteriaObservation) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgAttachmentID != nil {
		in, out := &in.DrgAttachmentID, &out.DrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchCriteriaObservation.
func (in *MatchCriteriaObservation) DeepCopy() *MatchCriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(MatchCriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchCriteriaParameters) DeepCopyInto(out *MatchCriteriaParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgAttachmentID != nil {
		in, out := &in.DrgAttachmentID, &out.DrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchCriteriaParameters.
func (in *MatchCriteriaParameters) DeepCopy() *MatchCriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(MatchCriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDetailsInitParameters) DeepCopyInto(out *NetworkDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VcnRouteType != nil {
		in, out := &in.VcnRouteType, &out.VcnRouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDetailsInitParameters.
func (in *NetworkDetailsInitParameters) DeepCopy() *NetworkDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDetailsObservation) DeepCopyInto(out *NetworkDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ids != nil {
		in, out := &in.Ids, &out.Ids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IpsecConnectionID != nil {
		in, out := &in.IpsecConnectionID, &out.IpsecConnectionID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransportAttachmentID != nil {
		in, out := &in.TransportAttachmentID, &out.TransportAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransportOnlyMode != nil {
		in, out := &in.TransportOnlyMode, &out.TransportOnlyMode
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VcnRouteType != nil {
		in, out := &in.VcnRouteType, &out.VcnRouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDetailsObservation.
func (in *NetworkDetailsObservation) DeepCopy() *NetworkDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDetailsParameters) DeepCopyInto(out *NetworkDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VcnRouteType != nil {
		in, out := &in.VcnRouteType, &out.VcnRouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDetailsParameters.
func (in *NetworkDetailsParameters) DeepCopy() *NetworkDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseOneDetailsInitParameters) DeepCopyInto(out *PhaseOneDetailsInitParameters) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomDhGroup != nil {
		in, out := &in.CustomDhGroup, &out.CustomDhGroup
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseOneConfig != nil {
		in, out := &in.IsCustomPhaseOneConfig, &out.IsCustomPhaseOneConfig
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseOneDetailsInitParameters.
func (in *PhaseOneDetailsInitParameters) DeepCopy() *PhaseOneDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PhaseOneDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseOneDetailsObservation) DeepCopyInto(out *PhaseOneDetailsObservation) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomDhGroup != nil {
		in, out := &in.CustomDhGroup, &out.CustomDhGroup
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseOneConfig != nil {
		in, out := &in.IsCustomPhaseOneConfig, &out.IsCustomPhaseOneConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsIkeEstablished != nil {
		in, out := &in.IsIkeEstablished, &out.IsIkeEstablished
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
	if in.NegotiatedAuthenticationAlgorithm != nil {
		in, out := &in.NegotiatedAuthenticationAlgorithm, &out.NegotiatedAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.NegotiatedDhGroup != nil {
		in, out := &in.NegotiatedDhGroup, &out.NegotiatedDhGroup
		*out = new(string)
		**out = **in
	}
	if in.NegotiatedEncryptionAlgorithm != nil {
		in, out := &in.NegotiatedEncryptionAlgorithm, &out.NegotiatedEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RemainingLifetime != nil {
		in, out := &in.RemainingLifetime, &out.RemainingLifetime
		*out = new(string)
		**out = **in
	}
	if in.RemainingLifetimeInt != nil {
		in, out := &in.RemainingLifetimeInt, &out.RemainingLifetimeInt
		*out = new(float64)
		**out = **in
	}
	if in.RemainingLifetimeLastRetrieved != nil {
		in, out := &in.RemainingLifetimeLastRetrieved, &out.RemainingLifetimeLastRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseOneDetailsObservation.
func (in *PhaseOneDetailsObservation) DeepCopy() *PhaseOneDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PhaseOneDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseOneDetailsParameters) DeepCopyInto(out *PhaseOneDetailsParameters) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomDhGroup != nil {
		in, out := &in.CustomDhGroup, &out.CustomDhGroup
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseOneConfig != nil {
		in, out := &in.IsCustomPhaseOneConfig, &out.IsCustomPhaseOneConfig
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseOneDetailsParameters.
func (in *PhaseOneDetailsParameters) DeepCopy() *PhaseOneDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PhaseOneDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseTwoDetailsInitParameters) DeepCopyInto(out *PhaseTwoDetailsInitParameters) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseTwoConfig != nil {
		in, out := &in.IsCustomPhaseTwoConfig, &out.IsCustomPhaseTwoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsPfsEnabled != nil {
		in, out := &in.IsPfsEnabled, &out.IsPfsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseTwoDetailsInitParameters.
func (in *PhaseTwoDetailsInitParameters) DeepCopy() *PhaseTwoDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PhaseTwoDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseTwoDetailsObservation) DeepCopyInto(out *PhaseTwoDetailsObservation) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseTwoConfig != nil {
		in, out := &in.IsCustomPhaseTwoConfig, &out.IsCustomPhaseTwoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsEspEstablished != nil {
		in, out := &in.IsEspEstablished, &out.IsEspEstablished
		*out = new(bool)
		**out = **in
	}
	if in.IsPfsEnabled != nil {
		in, out := &in.IsPfsEnabled, &out.IsPfsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
	if in.NegotiatedAuthenticationAlgorithm != nil {
		in, out := &in.NegotiatedAuthenticationAlgorithm, &out.NegotiatedAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.NegotiatedDhGroup != nil {
		in, out := &in.NegotiatedDhGroup, &out.NegotiatedDhGroup
		*out = new(string)
		**out = **in
	}
	if in.NegotiatedEncryptionAlgorithm != nil {
		in, out := &in.NegotiatedEncryptionAlgorithm, &out.NegotiatedEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RemainingLifetime != nil {
		in, out := &in.RemainingLifetime, &out.RemainingLifetime
		*out = new(string)
		**out = **in
	}
	if in.RemainingLifetimeInt != nil {
		in, out := &in.RemainingLifetimeInt, &out.RemainingLifetimeInt
		*out = new(float64)
		**out = **in
	}
	if in.RemainingLifetimeLastRetrieved != nil {
		in, out := &in.RemainingLifetimeLastRetrieved, &out.RemainingLifetimeLastRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseTwoDetailsObservation.
func (in *PhaseTwoDetailsObservation) DeepCopy() *PhaseTwoDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PhaseTwoDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseTwoDetailsParameters) DeepCopyInto(out *PhaseTwoDetailsParameters) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseTwoConfig != nil {
		in, out := &in.IsCustomPhaseTwoConfig, &out.IsCustomPhaseTwoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsPfsEnabled != nil {
		in, out := &in.IsPfsEnabled, &out.IsPfsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseTwoDetailsParameters.
func (in *PhaseTwoDetailsParameters) DeepCopy() *PhaseTwoDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PhaseTwoDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyInitParameters) DeepCopyInto(out *PrimaryKeyInitParameters) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyInitParameters.
func (in *PrimaryKeyInitParameters) DeepCopy() *PrimaryKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyObservation) DeepCopyInto(out *PrimaryKeyObservation) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyObservation.
func (in *PrimaryKeyObservation) DeepCopy() *PrimaryKeyObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyParameters) DeepCopyInto(out *PrimaryKeyParameters) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyParameters.
func (in *PrimaryKeyParameters) DeepCopy() *PrimaryKeyParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicPrefixesInitParameters) DeepCopyInto(out *PublicPrefixesInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicPrefixesInitParameters.
func (in *PublicPrefixesInitParameters) DeepCopy() *PublicPrefixesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicPrefixesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicPrefixesObservation) DeepCopyInto(out *PublicPrefixesObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicPrefixesObservation.
func (in *PublicPrefixesObservation) DeepCopy() *PublicPrefixesObservation {
	if in == nil {
		return nil
	}
	out := new(PublicPrefixesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicPrefixesParameters) DeepCopyInto(out *PublicPrefixesParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicPrefixesParameters.
func (in *PublicPrefixesParameters) DeepCopy() *PublicPrefixesParameters {
	if in == nil {
		return nil
	}
	out := new(PublicPrefixesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TunnelConfigurationInitParameters) DeepCopyInto(out *TunnelConfigurationInitParameters) {
	*out = *in
	if in.AssociatedVirtualCircuits != nil {
		in, out := &in.AssociatedVirtualCircuits, &out.AssociatedVirtualCircuits
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.OracleTunnelIP != nil {
		in, out := &in.OracleTunnelIP, &out.OracleTunnelIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TunnelConfigurationInitParameters.
func (in *TunnelConfigurationInitParameters) DeepCopy() *TunnelConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TunnelConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TunnelConfigurationObservation) DeepCopyInto(out *TunnelConfigurationObservation) {
	*out = *in
	if in.AssociatedVirtualCircuits != nil {
		in, out := &in.AssociatedVirtualCircuits, &out.AssociatedVirtualCircuits
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.OracleTunnelIP != nil {
		in, out := &in.OracleTunnelIP, &out.OracleTunnelIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TunnelConfigurationObservation.
func (in *TunnelConfigurationObservation) DeepCopy() *TunnelConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(TunnelConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TunnelConfigurationParameters) DeepCopyInto(out *TunnelConfigurationParameters) {
	*out = *in
	if in.AssociatedVirtualCircuits != nil {
		in, out := &in.AssociatedVirtualCircuits, &out.AssociatedVirtualCircuits
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.OracleTunnelIP != nil {
		in, out := &in.OracleTunnelIP, &out.OracleTunnelIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TunnelConfigurationParameters.
func (in *TunnelConfigurationParameters) DeepCopy() *TunnelConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(TunnelConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuit) DeepCopyInto(out *VirtualCircuit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuit.
func (in *VirtualCircuit) DeepCopy() *VirtualCircuit {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualCircuit) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitInitParameters) DeepCopyInto(out *VirtualCircuitInitParameters) {
	*out = *in
	if in.BGPAdminState != nil {
		in, out := &in.BGPAdminState, &out.BGPAdminState
		*out = new(string)
		**out = **in
	}
	if in.BandwidthShapeName != nil {
		in, out := &in.BandwidthShapeName, &out.BandwidthShapeName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectMappings != nil {
		in, out := &in.CrossConnectMappings, &out.CrossConnectMappings
		*out = make([]CrossConnectMappingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(float64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.IPMtu != nil {
		in, out := &in.IPMtu, &out.IPMtu
		*out = new(string)
		**out = **in
	}
	if in.IsBfdEnabled != nil {
		in, out := &in.IsBfdEnabled, &out.IsBfdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTransportMode != nil {
		in, out := &in.IsTransportMode, &out.IsTransportMode
		*out = new(bool)
		**out = **in
	}
	if in.ProviderServiceID != nil {
		in, out := &in.ProviderServiceID, &out.ProviderServiceID
		*out = new(string)
		**out = **in
	}
	if in.ProviderServiceKeyName != nil {
		in, out := &in.ProviderServiceKeyName, &out.ProviderServiceKeyName
		*out = new(string)
		**out = **in
	}
	if in.PublicPrefixes != nil {
		in, out := &in.PublicPrefixes, &out.PublicPrefixes
		*out = make([]PublicPrefixesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitInitParameters.
func (in *VirtualCircuitInitParameters) DeepCopy() *VirtualCircuitInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitList) DeepCopyInto(out *VirtualCircuitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualCircuit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitList.
func (in *VirtualCircuitList) DeepCopy() *VirtualCircuitList {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualCircuitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitObservation) DeepCopyInto(out *VirtualCircuitObservation) {
	*out = *in
	if in.BGPAdminState != nil {
		in, out := &in.BGPAdminState, &out.BGPAdminState
		*out = new(string)
		**out = **in
	}
	if in.BGPIpv6SessionState != nil {
		in, out := &in.BGPIpv6SessionState, &out.BGPIpv6SessionState
		*out = new(string)
		**out = **in
	}
	if in.BGPManagement != nil {
		in, out := &in.BGPManagement, &out.BGPManagement
		*out = new(string)
		**out = **in
	}
	if in.BGPSessionState != nil {
		in, out := &in.BGPSessionState, &out.BGPSessionState
		*out = new(string)
		**out = **in
	}
	if in.BandwidthShapeName != nil {
		in, out := &in.BandwidthShapeName, &out.BandwidthShapeName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectMappings != nil {
		in, out := &in.CrossConnectMappings, &out.CrossConnectMappings
		*out = make([]CrossConnectMappingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(float64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPMtu != nil {
		in, out := &in.IPMtu, &out.IPMtu
		*out = new(string)
		**out = **in
	}
	if in.IsBfdEnabled != nil {
		in, out := &in.IsBfdEnabled, &out.IsBfdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTransportMode != nil {
		in, out := &in.IsTransportMode, &out.IsTransportMode
		*out = new(bool)
		**out = **in
	}
	if in.OracleBGPAsn != nil {
		in, out := &in.OracleBGPAsn, &out.OracleBGPAsn
		*out = new(float64)
		**out = **in
	}
	if in.ProviderServiceID != nil {
		in, out := &in.ProviderServiceID, &out.ProviderServiceID
		*out = new(string)
		**out = **in
	}
	if in.ProviderServiceKeyName != nil {
		in, out := &in.ProviderServiceKeyName, &out.ProviderServiceKeyName
		*out = new(string)
		**out = **in
	}
	if in.ProviderState != nil {
		in, out := &in.ProviderState, &out.ProviderState
		*out = new(string)
		**out = **in
	}
	if in.PublicPrefixes != nil {
		in, out := &in.PublicPrefixes, &out.PublicPrefixes
		*out = make([]PublicPrefixesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceComment != nil {
		in, out := &in.ReferenceComment, &out.ReferenceComment
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualCircuitRedundancyMetadata != nil {
		in, out := &in.VirtualCircuitRedundancyMetadata, &out.VirtualCircuitRedundancyMetadata
		*out = make([]VirtualCircuitRedundancyMetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitObservation.
func (in *VirtualCircuitObservation) DeepCopy() *VirtualCircuitObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitParameters) DeepCopyInto(out *VirtualCircuitParameters) {
	*out = *in
	if in.BGPAdminState != nil {
		in, out := &in.BGPAdminState, &out.BGPAdminState
		*out = new(string)
		**out = **in
	}
	if in.BandwidthShapeName != nil {
		in, out := &in.BandwidthShapeName, &out.BandwidthShapeName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectMappings != nil {
		in, out := &in.CrossConnectMappings, &out.CrossConnectMappings
		*out = make([]CrossConnectMappingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(float64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.IPMtu != nil {
		in, out := &in.IPMtu, &out.IPMtu
		*out = new(string)
		**out = **in
	}
	if in.IsBfdEnabled != nil {
		in, out := &in.IsBfdEnabled, &out.IsBfdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTransportMode != nil {
		in, out := &in.IsTransportMode, &out.IsTransportMode
		*out = new(bool)
		**out = **in
	}
	if in.ProviderServiceID != nil {
		in, out := &in.ProviderServiceID, &out.ProviderServiceID
		*out = new(string)
		**out = **in
	}
	if in.ProviderServiceKeyName != nil {
		in, out := &in.ProviderServiceKeyName, &out.ProviderServiceKeyName
		*out = new(string)
		**out = **in
	}
	if in.PublicPrefixes != nil {
		in, out := &in.PublicPrefixes, &out.PublicPrefixes
		*out = make([]PublicPrefixesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitParameters.
func (in *VirtualCircuitParameters) DeepCopy() *VirtualCircuitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitRedundancyMetadataInitParameters) DeepCopyInto(out *VirtualCircuitRedundancyMetadataInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitRedundancyMetadataInitParameters.
func (in *VirtualCircuitRedundancyMetadataInitParameters) DeepCopy() *VirtualCircuitRedundancyMetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitRedundancyMetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitRedundancyMetadataObservation) DeepCopyInto(out *VirtualCircuitRedundancyMetadataObservation) {
	*out = *in
	if in.ConfiguredRedundancyLevel != nil {
		in, out := &in.ConfiguredRedundancyLevel, &out.ConfiguredRedundancyLevel
		*out = new(string)
		**out = **in
	}
	if in.Ipv4BgpSessionRedundancyStatus != nil {
		in, out := &in.Ipv4BgpSessionRedundancyStatus, &out.Ipv4BgpSessionRedundancyStatus
		*out = new(string)
		**out = **in
	}
	if in.Ipv6BgpSessionRedundancyStatus != nil {
		in, out := &in.Ipv6BgpSessionRedundancyStatus, &out.Ipv6BgpSessionRedundancyStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitRedundancyMetadataObservation.
func (in *VirtualCircuitRedundancyMetadataObservation) DeepCopy() *VirtualCircuitRedundancyMetadataObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitRedundancyMetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitRedundancyMetadataParameters) DeepCopyInto(out *VirtualCircuitRedundancyMetadataParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitRedundancyMetadataParameters.
func (in *VirtualCircuitRedundancyMetadataParameters) DeepCopy() *VirtualCircuitRedundancyMetadataParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitRedundancyMetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitSpec) DeepCopyInto(out *VirtualCircuitSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitSpec.
func (in *VirtualCircuitSpec) DeepCopy() *VirtualCircuitSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitStatus) DeepCopyInto(out *VirtualCircuitStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitStatus.
func (in *VirtualCircuitStatus) DeepCopy() *VirtualCircuitStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitStatus)
	in.DeepCopyInto(out)
	return out
}
