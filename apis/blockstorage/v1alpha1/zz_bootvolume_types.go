/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutotunePoliciesInitParameters struct {

	// (Updatable) This specifies the type of autotunes supported by OCI.
	AutotuneType *string `json:"autotuneType,omitempty" tf:"autotune_type,omitempty"`

	// (Updatable) This will be the maximum VPUs/GB performance level that the volume will be auto-tuned temporarily based on performance monitoring.
	MaxVpusPerGb *string `json:"maxVpusPerGb,omitempty" tf:"max_vpus_per_gb,omitempty"`
}

type AutotunePoliciesObservation struct {

	// (Updatable) This specifies the type of autotunes supported by OCI.
	AutotuneType *string `json:"autotuneType,omitempty" tf:"autotune_type,omitempty"`

	// (Updatable) This will be the maximum VPUs/GB performance level that the volume will be auto-tuned temporarily based on performance monitoring.
	MaxVpusPerGb *string `json:"maxVpusPerGb,omitempty" tf:"max_vpus_per_gb,omitempty"`
}

type AutotunePoliciesParameters struct {

	// (Updatable) This specifies the type of autotunes supported by OCI.
	// +kubebuilder:validation:Optional
	AutotuneType *string `json:"autotuneType" tf:"autotune_type,omitempty"`

	// (Updatable) This will be the maximum VPUs/GB performance level that the volume will be auto-tuned temporarily based on performance monitoring.
	// +kubebuilder:validation:Optional
	MaxVpusPerGb *string `json:"maxVpusPerGb,omitempty" tf:"max_vpus_per_gb,omitempty"`
}

type BootVolumeInitParameters struct {

	// (Updatable) The list of autotune policies to be enabled for this volume.
	AutotunePolicies []AutotunePoliciesInitParameters `json:"autotunePolicies,omitempty" tf:"autotune_policies,omitempty"`

	// The availability domain of the volume. Omissible for cloning a volume. The new volume will be created in the availability domain of the source volume.  Example: Uocm:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// If provided, specifies the ID of the boot volume backup policy to assign to the newly created boot volume. If omitted, no policy will be assigned. This field is deprecated. Use the oci_core_volume_backup_policy_assignments instead to assign a backup policy to a boot volume.
	BackupPolicyID *string `json:"backupPolicyId,omitempty" tf:"backup_policy_id,omitempty"`

	// (Updatable) The list of boot volume replicas to be enabled for this boot volume in the specified destination availability domains.
	BootVolumeReplicas []BootVolumeReplicasInitParameters `json:"bootVolumeReplicas,omitempty" tf:"boot_volume_replicas,omitempty"`

	BootVolumeReplicasDeletion *bool `json:"bootVolumeReplicasDeletion,omitempty" tf:"boot_volume_replicas_deletion,omitempty"`

	// The clusterPlacementGroup Id of the volume for volume placement.
	ClusterPlacementGroupID *string `json:"clusterPlacementGroupId,omitempty" tf:"cluster_placement_group_id,omitempty"`

	// (Updatable) The OCID of the compartment that contains the boot volume.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) Specifies whether the auto-tune performance is enabled for this boot volume. This field is deprecated. Use the DetachedVolumeAutotunePolicy instead to enable the volume for detached autotune.
	IsAutoTuneEnabled *bool `json:"isAutoTuneEnabled,omitempty" tf:"is_auto_tune_enabled,omitempty"`

	// (Updatable) The OCID of the Vault service key to assign as the master encryption key for the boot volume.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// (Updatable) The size of the volume in GBs.
	SizeInGbs *string `json:"sizeInGbs,omitempty" tf:"size_in_gbs,omitempty"`

	SourceDetails []SourceDetailsInitParameters `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See Block Volume Performance Levels for more information.
	VpusPerGb *string `json:"vpusPerGb,omitempty" tf:"vpus_per_gb,omitempty"`

	// The OCID of the Vault service key which is the master encryption key for the boot volume cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	XrcKMSKeyID *string `json:"xrcKmsKeyId,omitempty" tf:"xrc_kms_key_id,omitempty"`
}

type BootVolumeObservation struct {

	// The number of Volume Performance Units per GB that this boot volume is effectively tuned to.
	AutoTunedVpusPerGb *string `json:"autoTunedVpusPerGb,omitempty" tf:"auto_tuned_vpus_per_gb,omitempty"`

	// (Updatable) The list of autotune policies to be enabled for this volume.
	AutotunePolicies []AutotunePoliciesObservation `json:"autotunePolicies,omitempty" tf:"autotune_policies,omitempty"`

	// The availability domain of the volume. Omissible for cloning a volume. The new volume will be created in the availability domain of the source volume.  Example: Uocm:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// If provided, specifies the ID of the boot volume backup policy to assign to the newly created boot volume. If omitted, no policy will be assigned. This field is deprecated. Use the oci_core_volume_backup_policy_assignments instead to assign a backup policy to a boot volume.
	BackupPolicyID *string `json:"backupPolicyId,omitempty" tf:"backup_policy_id,omitempty"`

	// (Updatable) The list of boot volume replicas to be enabled for this boot volume in the specified destination availability domains.
	BootVolumeReplicas []BootVolumeReplicasObservation `json:"bootVolumeReplicas,omitempty" tf:"boot_volume_replicas,omitempty"`

	BootVolumeReplicasDeletion *bool `json:"bootVolumeReplicasDeletion,omitempty" tf:"boot_volume_replicas_deletion,omitempty"`

	// The clusterPlacementGroup Id of the volume for volume placement.
	ClusterPlacementGroupID *string `json:"clusterPlacementGroupId,omitempty" tf:"cluster_placement_group_id,omitempty"`

	// (Updatable) The OCID of the compartment that contains the boot volume.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// The OCID of the boot volume replica.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The image OCID used to create the boot volume.
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// (Updatable) Specifies whether the auto-tune performance is enabled for this boot volume. This field is deprecated. Use the DetachedVolumeAutotunePolicy instead to enable the volume for detached autotune.
	IsAutoTuneEnabled *bool `json:"isAutoTuneEnabled,omitempty" tf:"is_auto_tune_enabled,omitempty"`

	// Specifies whether the boot volume's data has finished copying from the source boot volume or boot volume backup.
	IsHydrated *bool `json:"isHydrated,omitempty" tf:"is_hydrated,omitempty"`

	// (Updatable) The OCID of the Vault service key to assign as the master encryption key for the boot volume.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// (Updatable) The size of the volume in GBs.
	SizeInGbs *string `json:"sizeInGbs,omitempty" tf:"size_in_gbs,omitempty"`

	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use size_in_gbs.
	SizeInMbs *string `json:"sizeInMbs,omitempty" tf:"size_in_mbs,omitempty"`

	SourceDetails []SourceDetailsObservation `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// The current state of a boot volume.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: {"foo-namespace.bar-key": "value"}
	// +mapType=granular
	SystemTags map[string]*string `json:"systemTags,omitempty" tf:"system_tags,omitempty"`

	// The date and time the boot volume was created. Format defined by RFC3339.
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The OCID of the source volume group.
	VolumeGroupID *string `json:"volumeGroupId,omitempty" tf:"volume_group_id,omitempty"`

	// (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See Block Volume Performance Levels for more information.
	VpusPerGb *string `json:"vpusPerGb,omitempty" tf:"vpus_per_gb,omitempty"`

	// The OCID of the Vault service key which is the master encryption key for the boot volume cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	XrcKMSKeyID *string `json:"xrcKmsKeyId,omitempty" tf:"xrc_kms_key_id,omitempty"`
}

type BootVolumeParameters struct {

	// (Updatable) The list of autotune policies to be enabled for this volume.
	// +kubebuilder:validation:Optional
	AutotunePolicies []AutotunePoliciesParameters `json:"autotunePolicies,omitempty" tf:"autotune_policies,omitempty"`

	// The availability domain of the volume. Omissible for cloning a volume. The new volume will be created in the availability domain of the source volume.  Example: Uocm:PHX-AD-1
	// +kubebuilder:validation:Optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// If provided, specifies the ID of the boot volume backup policy to assign to the newly created boot volume. If omitted, no policy will be assigned. This field is deprecated. Use the oci_core_volume_backup_policy_assignments instead to assign a backup policy to a boot volume.
	// +kubebuilder:validation:Optional
	BackupPolicyID *string `json:"backupPolicyId,omitempty" tf:"backup_policy_id,omitempty"`

	// (Updatable) The list of boot volume replicas to be enabled for this boot volume in the specified destination availability domains.
	// +kubebuilder:validation:Optional
	BootVolumeReplicas []BootVolumeReplicasParameters `json:"bootVolumeReplicas,omitempty" tf:"boot_volume_replicas,omitempty"`

	// +kubebuilder:validation:Optional
	BootVolumeReplicasDeletion *bool `json:"bootVolumeReplicasDeletion,omitempty" tf:"boot_volume_replicas_deletion,omitempty"`

	// The clusterPlacementGroup Id of the volume for volume placement.
	// +kubebuilder:validation:Optional
	ClusterPlacementGroupID *string `json:"clusterPlacementGroupId,omitempty" tf:"cluster_placement_group_id,omitempty"`

	// (Updatable) The OCID of the compartment that contains the boot volume.
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) Specifies whether the auto-tune performance is enabled for this boot volume. This field is deprecated. Use the DetachedVolumeAutotunePolicy instead to enable the volume for detached autotune.
	// +kubebuilder:validation:Optional
	IsAutoTuneEnabled *bool `json:"isAutoTuneEnabled,omitempty" tf:"is_auto_tune_enabled,omitempty"`

	// (Updatable) The OCID of the Vault service key to assign as the master encryption key for the boot volume.
	// +kubebuilder:validation:Optional
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// (Updatable) The size of the volume in GBs.
	// +kubebuilder:validation:Optional
	SizeInGbs *string `json:"sizeInGbs,omitempty" tf:"size_in_gbs,omitempty"`

	// +kubebuilder:validation:Optional
	SourceDetails []SourceDetailsParameters `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See Block Volume Performance Levels for more information.
	// +kubebuilder:validation:Optional
	VpusPerGb *string `json:"vpusPerGb,omitempty" tf:"vpus_per_gb,omitempty"`

	// The OCID of the Vault service key which is the master encryption key for the boot volume cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	// +kubebuilder:validation:Optional
	XrcKMSKeyID *string `json:"xrcKmsKeyId,omitempty" tf:"xrc_kms_key_id,omitempty"`
}

type BootVolumeReplicasInitParameters struct {

	// The availability domain of the volume. Omissible for cloning a volume. The new volume will be created in the availability domain of the source volume.  Example: Uocm:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the cross region boot volume replicas, which will be used in the destination region to encrypt the boot volume replica's encryption keys. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	XrrKMSKeyID *string `json:"xrrKmsKeyId,omitempty" tf:"xrr_kms_key_id,omitempty"`
}

type BootVolumeReplicasObservation struct {

	// The availability domain of the volume. Omissible for cloning a volume. The new volume will be created in the availability domain of the source volume.  Example: Uocm:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// The boot volume replica's Oracle ID (OCID).
	BootVolumeReplicaID *string `json:"bootVolumeReplicaId,omitempty" tf:"boot_volume_replica_id,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) The OCID of the Vault service key to assign as the master encryption key for the boot volume.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the cross region boot volume replicas, which will be used in the destination region to encrypt the boot volume replica's encryption keys. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	XrrKMSKeyID *string `json:"xrrKmsKeyId,omitempty" tf:"xrr_kms_key_id,omitempty"`
}

type BootVolumeReplicasParameters struct {

	// The availability domain of the volume. Omissible for cloning a volume. The new volume will be created in the availability domain of the source volume.  Example: Uocm:PHX-AD-1
	// +kubebuilder:validation:Optional
	AvailabilityDomain *string `json:"availabilityDomain" tf:"availability_domain,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the cross region boot volume replicas, which will be used in the destination region to encrypt the boot volume replica's encryption keys. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	// +kubebuilder:validation:Optional
	XrrKMSKeyID *string `json:"xrrKmsKeyId,omitempty" tf:"xrr_kms_key_id,omitempty"`
}

type SourceDetailsInitParameters struct {

	// (Applicable when type=bootVolumeBackupDelta) Block size in bytes to be considered while performing volume restore. The value must be a power of 2; ranging from 4KB (4096 bytes) to 1MB (1048576 bytes). If omitted, defaults to 4,096 bytes (4 KiB).
	ChangeBlockSizeInBytes *string `json:"changeBlockSizeInBytes,omitempty" tf:"change_block_size_in_bytes,omitempty"`

	// The OCID of the first boot volume backup.
	FirstBackupID *string `json:"firstBackupId,omitempty" tf:"first_backup_id,omitempty"`

	// The OCID of the boot volume replica.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the second boot volume backup.
	SecondBackupID *string `json:"secondBackupId,omitempty" tf:"second_backup_id,omitempty"`

	// The type can be one of these values: bootVolume, bootVolumeBackup, bootVolumeBackupDelta, bootVolumeReplica
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceDetailsObservation struct {

	// (Applicable when type=bootVolumeBackupDelta) Block size in bytes to be considered while performing volume restore. The value must be a power of 2; ranging from 4KB (4096 bytes) to 1MB (1048576 bytes). If omitted, defaults to 4,096 bytes (4 KiB).
	ChangeBlockSizeInBytes *string `json:"changeBlockSizeInBytes,omitempty" tf:"change_block_size_in_bytes,omitempty"`

	// The OCID of the first boot volume backup.
	FirstBackupID *string `json:"firstBackupId,omitempty" tf:"first_backup_id,omitempty"`

	// The OCID of the boot volume replica.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the second boot volume backup.
	SecondBackupID *string `json:"secondBackupId,omitempty" tf:"second_backup_id,omitempty"`

	// The type can be one of these values: bootVolume, bootVolumeBackup, bootVolumeBackupDelta, bootVolumeReplica
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceDetailsParameters struct {

	// (Applicable when type=bootVolumeBackupDelta) Block size in bytes to be considered while performing volume restore. The value must be a power of 2; ranging from 4KB (4096 bytes) to 1MB (1048576 bytes). If omitted, defaults to 4,096 bytes (4 KiB).
	// +kubebuilder:validation:Optional
	ChangeBlockSizeInBytes *string `json:"changeBlockSizeInBytes,omitempty" tf:"change_block_size_in_bytes,omitempty"`

	// The OCID of the first boot volume backup.
	// +kubebuilder:validation:Optional
	FirstBackupID *string `json:"firstBackupId,omitempty" tf:"first_backup_id,omitempty"`

	// The OCID of the boot volume replica.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the second boot volume backup.
	// +kubebuilder:validation:Optional
	SecondBackupID *string `json:"secondBackupId,omitempty" tf:"second_backup_id,omitempty"`

	// The type can be one of these values: bootVolume, bootVolumeBackup, bootVolumeBackupDelta, bootVolumeReplica
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// BootVolumeSpec defines the desired state of BootVolume
type BootVolumeSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BootVolumeParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BootVolumeInitParameters `json:"initProvider,omitempty"`
}

// BootVolumeStatus defines the observed state of BootVolume.
type BootVolumeStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BootVolumeObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BootVolume is the Schema for the BootVolumes API. Provides the Boot Volume resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type BootVolume struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.availabilityDomain) || (has(self.initProvider) && has(self.initProvider.availabilityDomain))",message="spec.forProvider.availabilityDomain is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.compartmentId) || (has(self.initProvider) && has(self.initProvider.compartmentId))",message="spec.forProvider.compartmentId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sourceDetails) || (has(self.initProvider) && has(self.initProvider.sourceDetails))",message="spec.forProvider.sourceDetails is a required parameter"
	Spec   BootVolumeSpec   `json:"spec"`
	Status BootVolumeStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BootVolumeList contains a list of BootVolumes
type BootVolumeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BootVolume `json:"items"`
}

// Repository type metadata.
var (
	BootVolume_Kind             = "BootVolume"
	BootVolume_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BootVolume_Kind}.String()
	BootVolume_KindAPIVersion   = BootVolume_Kind + "." + CRDGroupVersion.String()
	BootVolume_GroupVersionKind = CRDGroupVersion.WithKind(BootVolume_Kind)
)

func init() {
	SchemeBuilder.Register(&BootVolume{}, &BootVolumeList{})
}
