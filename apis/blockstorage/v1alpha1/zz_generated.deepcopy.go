//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesInitParameters) DeepCopyInto(out *AutotunePoliciesInitParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesInitParameters.
func (in *AutotunePoliciesInitParameters) DeepCopy() *AutotunePoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesObservation) DeepCopyInto(out *AutotunePoliciesObservation) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesObservation.
func (in *AutotunePoliciesObservation) DeepCopy() *AutotunePoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesParameters) DeepCopyInto(out *AutotunePoliciesParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesParameters.
func (in *AutotunePoliciesParameters) DeepCopy() *AutotunePoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasInitParameters) DeepCopyInto(out *BlockVolumeReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasInitParameters.
func (in *BlockVolumeReplicasInitParameters) DeepCopy() *BlockVolumeReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasObservation) DeepCopyInto(out *BlockVolumeReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicaID != nil {
		in, out := &in.BlockVolumeReplicaID, &out.BlockVolumeReplicaID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasObservation.
func (in *BlockVolumeReplicasObservation) DeepCopy() *BlockVolumeReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasParameters) DeepCopyInto(out *BlockVolumeReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasParameters.
func (in *BlockVolumeReplicasParameters) DeepCopy() *BlockVolumeReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolume) DeepCopyInto(out *BootVolume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolume.
func (in *BootVolume) DeepCopy() *BootVolume {
	if in == nil {
		return nil
	}
	out := new(BootVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BootVolume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackup) DeepCopyInto(out *BootVolumeBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackup.
func (in *BootVolumeBackup) DeepCopy() *BootVolumeBackup {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BootVolumeBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupInitParameters) DeepCopyInto(out *BootVolumeBackupInitParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BootVolumeBackupSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupInitParameters.
func (in *BootVolumeBackupInitParameters) DeepCopy() *BootVolumeBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupList) DeepCopyInto(out *BootVolumeBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BootVolumeBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupList.
func (in *BootVolumeBackupList) DeepCopy() *BootVolumeBackupList {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BootVolumeBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupObservation) DeepCopyInto(out *BootVolumeBackupObservation) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceBootVolumeBackupID != nil {
		in, out := &in.SourceBootVolumeBackupID, &out.SourceBootVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BootVolumeBackupSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeRequestReceived != nil {
		in, out := &in.TimeRequestReceived, &out.TimeRequestReceived
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInGbs != nil {
		in, out := &in.UniqueSizeInGbs, &out.UniqueSizeInGbs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupObservation.
func (in *BootVolumeBackupObservation) DeepCopy() *BootVolumeBackupObservation {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupParameters) DeepCopyInto(out *BootVolumeBackupParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BootVolumeBackupSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupParameters.
func (in *BootVolumeBackupParameters) DeepCopy() *BootVolumeBackupParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupSourceDetailsInitParameters) DeepCopyInto(out *BootVolumeBackupSourceDetailsInitParameters) {
	*out = *in
	if in.BootVolumeBackupID != nil {
		in, out := &in.BootVolumeBackupID, &out.BootVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupSourceDetailsInitParameters.
func (in *BootVolumeBackupSourceDetailsInitParameters) DeepCopy() *BootVolumeBackupSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupSourceDetailsObservation) DeepCopyInto(out *BootVolumeBackupSourceDetailsObservation) {
	*out = *in
	if in.BootVolumeBackupID != nil {
		in, out := &in.BootVolumeBackupID, &out.BootVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupSourceDetailsObservation.
func (in *BootVolumeBackupSourceDetailsObservation) DeepCopy() *BootVolumeBackupSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupSourceDetailsParameters) DeepCopyInto(out *BootVolumeBackupSourceDetailsParameters) {
	*out = *in
	if in.BootVolumeBackupID != nil {
		in, out := &in.BootVolumeBackupID, &out.BootVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupSourceDetailsParameters.
func (in *BootVolumeBackupSourceDetailsParameters) DeepCopy() *BootVolumeBackupSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupSpec) DeepCopyInto(out *BootVolumeBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupSpec.
func (in *BootVolumeBackupSpec) DeepCopy() *BootVolumeBackupSpec {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupStatus) DeepCopyInto(out *BootVolumeBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupStatus.
func (in *BootVolumeBackupStatus) DeepCopy() *BootVolumeBackupStatus {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeInitParameters) DeepCopyInto(out *BootVolumeInitParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeReplicas != nil {
		in, out := &in.BootVolumeReplicas, &out.BootVolumeReplicas
		*out = make([]BootVolumeReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootVolumeReplicasDeletion != nil {
		in, out := &in.BootVolumeReplicasDeletion, &out.BootVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeInitParameters.
func (in *BootVolumeInitParameters) DeepCopy() *BootVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeList) DeepCopyInto(out *BootVolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BootVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeList.
func (in *BootVolumeList) DeepCopy() *BootVolumeList {
	if in == nil {
		return nil
	}
	out := new(BootVolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BootVolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeObservation) DeepCopyInto(out *BootVolumeObservation) {
	*out = *in
	if in.AutoTunedVpusPerGb != nil {
		in, out := &in.AutoTunedVpusPerGb, &out.AutoTunedVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeReplicas != nil {
		in, out := &in.BootVolumeReplicas, &out.BootVolumeReplicas
		*out = make([]BootVolumeReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootVolumeReplicasDeletion != nil {
		in, out := &in.BootVolumeReplicasDeletion, &out.BootVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHydrated != nil {
		in, out := &in.IsHydrated, &out.IsHydrated
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeObservation.
func (in *BootVolumeObservation) DeepCopy() *BootVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(BootVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeParameters) DeepCopyInto(out *BootVolumeParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeReplicas != nil {
		in, out := &in.BootVolumeReplicas, &out.BootVolumeReplicas
		*out = make([]BootVolumeReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootVolumeReplicasDeletion != nil {
		in, out := &in.BootVolumeReplicasDeletion, &out.BootVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeParameters.
func (in *BootVolumeParameters) DeepCopy() *BootVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeReplicasInitParameters) DeepCopyInto(out *BootVolumeReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeReplicasInitParameters.
func (in *BootVolumeReplicasInitParameters) DeepCopy() *BootVolumeReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeReplicasObservation) DeepCopyInto(out *BootVolumeReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeReplicaID != nil {
		in, out := &in.BootVolumeReplicaID, &out.BootVolumeReplicaID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeReplicasObservation.
func (in *BootVolumeReplicasObservation) DeepCopy() *BootVolumeReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(BootVolumeReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeReplicasParameters) DeepCopyInto(out *BootVolumeReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeReplicasParameters.
func (in *BootVolumeReplicasParameters) DeepCopy() *BootVolumeReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeSpec) DeepCopyInto(out *BootVolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeSpec.
func (in *BootVolumeSpec) DeepCopy() *BootVolumeSpec {
	if in == nil {
		return nil
	}
	out := new(BootVolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeStatus) DeepCopyInto(out *BootVolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeStatus.
func (in *BootVolumeStatus) DeepCopy() *BootVolumeStatus {
	if in == nil {
		return nil
	}
	out := new(BootVolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipathDevicesInitParameters) DeepCopyInto(out *MultipathDevicesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipathDevicesInitParameters.
func (in *MultipathDevicesInitParameters) DeepCopy() *MultipathDevicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MultipathDevicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipathDevicesObservation) DeepCopyInto(out *MultipathDevicesObservation) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = new(string)
		**out = **in
	}
	if in.Iqn != nil {
		in, out := &in.Iqn, &out.Iqn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipathDevicesObservation.
func (in *MultipathDevicesObservation) DeepCopy() *MultipathDevicesObservation {
	if in == nil {
		return nil
	}
	out := new(MultipathDevicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipathDevicesParameters) DeepCopyInto(out *MultipathDevicesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipathDevicesParameters.
func (in *MultipathDevicesParameters) DeepCopy() *MultipathDevicesParameters {
	if in == nil {
		return nil
	}
	out := new(MultipathDevicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesInitParameters) DeepCopyInto(out *SchedulesInitParameters) {
	*out = *in
	if in.BackupType != nil {
		in, out := &in.BackupType, &out.BackupType
		*out = new(string)
		**out = **in
	}
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
	if in.Month != nil {
		in, out := &in.Month, &out.Month
		*out = new(string)
		**out = **in
	}
	if in.OffsetSeconds != nil {
		in, out := &in.OffsetSeconds, &out.OffsetSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OffsetType != nil {
		in, out := &in.OffsetType, &out.OffsetType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.RetentionSeconds != nil {
		in, out := &in.RetentionSeconds, &out.RetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesInitParameters.
func (in *SchedulesInitParameters) DeepCopy() *SchedulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesObservation) DeepCopyInto(out *SchedulesObservation) {
	*out = *in
	if in.BackupType != nil {
		in, out := &in.BackupType, &out.BackupType
		*out = new(string)
		**out = **in
	}
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
	if in.Month != nil {
		in, out := &in.Month, &out.Month
		*out = new(string)
		**out = **in
	}
	if in.OffsetSeconds != nil {
		in, out := &in.OffsetSeconds, &out.OffsetSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OffsetType != nil {
		in, out := &in.OffsetType, &out.OffsetType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.RetentionSeconds != nil {
		in, out := &in.RetentionSeconds, &out.RetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesObservation.
func (in *SchedulesObservation) DeepCopy() *SchedulesObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesParameters) DeepCopyInto(out *SchedulesParameters) {
	*out = *in
	if in.BackupType != nil {
		in, out := &in.BackupType, &out.BackupType
		*out = new(string)
		**out = **in
	}
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
	if in.Month != nil {
		in, out := &in.Month, &out.Month
		*out = new(string)
		**out = **in
	}
	if in.OffsetSeconds != nil {
		in, out := &in.OffsetSeconds, &out.OffsetSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OffsetType != nil {
		in, out := &in.OffsetType, &out.OffsetType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.RetentionSeconds != nil {
		in, out := &in.RetentionSeconds, &out.RetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesParameters.
func (in *SchedulesParameters) DeepCopy() *SchedulesParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInitParameters) DeepCopyInto(out *SourceDetailsInitParameters) {
	*out = *in
	if in.ChangeBlockSizeInBytes != nil {
		in, out := &in.ChangeBlockSizeInBytes, &out.ChangeBlockSizeInBytes
		*out = new(string)
		**out = **in
	}
	if in.FirstBackupID != nil {
		in, out := &in.FirstBackupID, &out.FirstBackupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecondBackupID != nil {
		in, out := &in.SecondBackupID, &out.SecondBackupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInitParameters.
func (in *SourceDetailsInitParameters) DeepCopy() *SourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsObservation) DeepCopyInto(out *SourceDetailsObservation) {
	*out = *in
	if in.ChangeBlockSizeInBytes != nil {
		in, out := &in.ChangeBlockSizeInBytes, &out.ChangeBlockSizeInBytes
		*out = new(string)
		**out = **in
	}
	if in.FirstBackupID != nil {
		in, out := &in.FirstBackupID, &out.FirstBackupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecondBackupID != nil {
		in, out := &in.SecondBackupID, &out.SecondBackupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsObservation.
func (in *SourceDetailsObservation) DeepCopy() *SourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsParameters) DeepCopyInto(out *SourceDetailsParameters) {
	*out = *in
	if in.ChangeBlockSizeInBytes != nil {
		in, out := &in.ChangeBlockSizeInBytes, &out.ChangeBlockSizeInBytes
		*out = new(string)
		**out = **in
	}
	if in.FirstBackupID != nil {
		in, out := &in.FirstBackupID, &out.FirstBackupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecondBackupID != nil {
		in, out := &in.SecondBackupID, &out.SecondBackupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsParameters.
func (in *SourceDetailsParameters) DeepCopy() *SourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Volume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachment) DeepCopyInto(out *VolumeAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachment.
func (in *VolumeAttachment) DeepCopy() *VolumeAttachment {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentInitParameters) DeepCopyInto(out *VolumeAttachmentInitParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIDRef != nil {
		in, out := &in.VolumeIDRef, &out.VolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeIDSelector != nil {
		in, out := &in.VolumeIDSelector, &out.VolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentInitParameters.
func (in *VolumeAttachmentInitParameters) DeepCopy() *VolumeAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentList) DeepCopyInto(out *VolumeAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentList.
func (in *VolumeAttachmentList) DeepCopy() *VolumeAttachmentList {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentObservation) DeepCopyInto(out *VolumeAttachmentObservation) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.ChapSecret != nil {
		in, out := &in.ChapSecret, &out.ChapSecret
		*out = new(string)
		**out = **in
	}
	if in.ChapUsername != nil {
		in, out := &in.ChapUsername, &out.ChapUsername
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = new(string)
		**out = **in
	}
	if in.ISCSILoginState != nil {
		in, out := &in.ISCSILoginState, &out.ISCSILoginState
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Iqn != nil {
		in, out := &in.Iqn, &out.Iqn
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMultipath != nil {
		in, out := &in.IsMultipath, &out.IsMultipath
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.IsVolumeCreatedDuringLaunch != nil {
		in, out := &in.IsVolumeCreatedDuringLaunch, &out.IsVolumeCreatedDuringLaunch
		*out = new(bool)
		**out = **in
	}
	if in.MultipathDevices != nil {
		in, out := &in.MultipathDevices, &out.MultipathDevices
		*out = make([]MultipathDevicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentObservation.
func (in *VolumeAttachmentObservation) DeepCopy() *VolumeAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentParameters) DeepCopyInto(out *VolumeAttachmentParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIDRef != nil {
		in, out := &in.VolumeIDRef, &out.VolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeIDSelector != nil {
		in, out := &in.VolumeIDSelector, &out.VolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentParameters.
func (in *VolumeAttachmentParameters) DeepCopy() *VolumeAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentSpec) DeepCopyInto(out *VolumeAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentSpec.
func (in *VolumeAttachmentSpec) DeepCopy() *VolumeAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentStatus) DeepCopyInto(out *VolumeAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentStatus.
func (in *VolumeAttachmentStatus) DeepCopy() *VolumeAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAutotunePoliciesInitParameters) DeepCopyInto(out *VolumeAutotunePoliciesInitParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAutotunePoliciesInitParameters.
func (in *VolumeAutotunePoliciesInitParameters) DeepCopy() *VolumeAutotunePoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAutotunePoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAutotunePoliciesObservation) DeepCopyInto(out *VolumeAutotunePoliciesObservation) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAutotunePoliciesObservation.
func (in *VolumeAutotunePoliciesObservation) DeepCopy() *VolumeAutotunePoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeAutotunePoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAutotunePoliciesParameters) DeepCopyInto(out *VolumeAutotunePoliciesParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAutotunePoliciesParameters.
func (in *VolumeAutotunePoliciesParameters) DeepCopy() *VolumeAutotunePoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAutotunePoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackup) DeepCopyInto(out *VolumeBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackup.
func (in *VolumeBackup) DeepCopy() *VolumeBackup {
	if in == nil {
		return nil
	}
	out := new(VolumeBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupInitParameters) DeepCopyInto(out *VolumeBackupInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeBackupSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIDRef != nil {
		in, out := &in.VolumeIDRef, &out.VolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeIDSelector != nil {
		in, out := &in.VolumeIDSelector, &out.VolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupInitParameters.
func (in *VolumeBackupInitParameters) DeepCopy() *VolumeBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupList) DeepCopyInto(out *VolumeBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupList.
func (in *VolumeBackupList) DeepCopy() *VolumeBackupList {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupObservation) DeepCopyInto(out *VolumeBackupObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeBackupSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceVolumeBackupID != nil {
		in, out := &in.SourceVolumeBackupID, &out.SourceVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeRequestReceived != nil {
		in, out := &in.TimeRequestReceived, &out.TimeRequestReceived
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInGbs != nil {
		in, out := &in.UniqueSizeInGbs, &out.UniqueSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInMbs != nil {
		in, out := &in.UniqueSizeInMbs, &out.UniqueSizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupObservation.
func (in *VolumeBackupObservation) DeepCopy() *VolumeBackupObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupParameters) DeepCopyInto(out *VolumeBackupParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeBackupSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIDRef != nil {
		in, out := &in.VolumeIDRef, &out.VolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeIDSelector != nil {
		in, out := &in.VolumeIDSelector, &out.VolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupParameters.
func (in *VolumeBackupParameters) DeepCopy() *VolumeBackupParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicy) DeepCopyInto(out *VolumeBackupPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicy.
func (in *VolumeBackupPolicy) DeepCopy() *VolumeBackupPolicy {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignment) DeepCopyInto(out *VolumeBackupPolicyAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignment.
func (in *VolumeBackupPolicyAssignment) DeepCopy() *VolumeBackupPolicyAssignment {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupPolicyAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentInitParameters) DeepCopyInto(out *VolumeBackupPolicyAssignmentInitParameters) {
	*out = *in
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.AssetIDRef != nil {
		in, out := &in.AssetIDRef, &out.AssetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AssetIDSelector != nil {
		in, out := &in.AssetIDSelector, &out.AssetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.PolicyIDRef != nil {
		in, out := &in.PolicyIDRef, &out.PolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicyIDSelector != nil {
		in, out := &in.PolicyIDSelector, &out.PolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentInitParameters.
func (in *VolumeBackupPolicyAssignmentInitParameters) DeepCopy() *VolumeBackupPolicyAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentList) DeepCopyInto(out *VolumeBackupPolicyAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeBackupPolicyAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentList.
func (in *VolumeBackupPolicyAssignmentList) DeepCopy() *VolumeBackupPolicyAssignmentList {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupPolicyAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentObservation) DeepCopyInto(out *VolumeBackupPolicyAssignmentObservation) {
	*out = *in
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentObservation.
func (in *VolumeBackupPolicyAssignmentObservation) DeepCopy() *VolumeBackupPolicyAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentParameters) DeepCopyInto(out *VolumeBackupPolicyAssignmentParameters) {
	*out = *in
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.AssetIDRef != nil {
		in, out := &in.AssetIDRef, &out.AssetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AssetIDSelector != nil {
		in, out := &in.AssetIDSelector, &out.AssetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.PolicyIDRef != nil {
		in, out := &in.PolicyIDRef, &out.PolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicyIDSelector != nil {
		in, out := &in.PolicyIDSelector, &out.PolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentParameters.
func (in *VolumeBackupPolicyAssignmentParameters) DeepCopy() *VolumeBackupPolicyAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentSpec) DeepCopyInto(out *VolumeBackupPolicyAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentSpec.
func (in *VolumeBackupPolicyAssignmentSpec) DeepCopy() *VolumeBackupPolicyAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentStatus) DeepCopyInto(out *VolumeBackupPolicyAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentStatus.
func (in *VolumeBackupPolicyAssignmentStatus) DeepCopy() *VolumeBackupPolicyAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyInitParameters) DeepCopyInto(out *VolumeBackupPolicyInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyInitParameters.
func (in *VolumeBackupPolicyInitParameters) DeepCopy() *VolumeBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyList) DeepCopyInto(out *VolumeBackupPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeBackupPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyList.
func (in *VolumeBackupPolicyList) DeepCopy() *VolumeBackupPolicyList {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyObservation) DeepCopyInto(out *VolumeBackupPolicyObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyObservation.
func (in *VolumeBackupPolicyObservation) DeepCopy() *VolumeBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyParameters) DeepCopyInto(out *VolumeBackupPolicyParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyParameters.
func (in *VolumeBackupPolicyParameters) DeepCopy() *VolumeBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicySpec) DeepCopyInto(out *VolumeBackupPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicySpec.
func (in *VolumeBackupPolicySpec) DeepCopy() *VolumeBackupPolicySpec {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyStatus) DeepCopyInto(out *VolumeBackupPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyStatus.
func (in *VolumeBackupPolicyStatus) DeepCopy() *VolumeBackupPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupSourceDetailsInitParameters) DeepCopyInto(out *VolumeBackupSourceDetailsInitParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupSourceDetailsInitParameters.
func (in *VolumeBackupSourceDetailsInitParameters) DeepCopy() *VolumeBackupSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupSourceDetailsObservation) DeepCopyInto(out *VolumeBackupSourceDetailsObservation) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupSourceDetailsObservation.
func (in *VolumeBackupSourceDetailsObservation) DeepCopy() *VolumeBackupSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupSourceDetailsParameters) DeepCopyInto(out *VolumeBackupSourceDetailsParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupSourceDetailsParameters.
func (in *VolumeBackupSourceDetailsParameters) DeepCopy() *VolumeBackupSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupSpec) DeepCopyInto(out *VolumeBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupSpec.
func (in *VolumeBackupSpec) DeepCopy() *VolumeBackupSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupStatus) DeepCopyInto(out *VolumeBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupStatus.
func (in *VolumeBackupStatus) DeepCopy() *VolumeBackupStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroup) DeepCopyInto(out *VolumeGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroup.
func (in *VolumeGroup) DeepCopy() *VolumeGroup {
	if in == nil {
		return nil
	}
	out := new(VolumeGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackup) DeepCopyInto(out *VolumeGroupBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackup.
func (in *VolumeGroupBackup) DeepCopy() *VolumeGroupBackup {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeGroupBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupInitParameters) DeepCopyInto(out *VolumeGroupBackupInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupBackupSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupIDRef != nil {
		in, out := &in.VolumeGroupIDRef, &out.VolumeGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeGroupIDSelector != nil {
		in, out := &in.VolumeGroupIDSelector, &out.VolumeGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupInitParameters.
func (in *VolumeGroupBackupInitParameters) DeepCopy() *VolumeGroupBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupList) DeepCopyInto(out *VolumeGroupBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeGroupBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupList.
func (in *VolumeGroupBackupList) DeepCopy() *VolumeGroupBackupList {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeGroupBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupObservation) DeepCopyInto(out *VolumeGroupBackupObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupBackupSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceVolumeGroupBackupID != nil {
		in, out := &in.SourceVolumeGroupBackupID, &out.SourceVolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeRequestReceived != nil {
		in, out := &in.TimeRequestReceived, &out.TimeRequestReceived
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInGbs != nil {
		in, out := &in.UniqueSizeInGbs, &out.UniqueSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInMbs != nil {
		in, out := &in.UniqueSizeInMbs, &out.UniqueSizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupIds != nil {
		in, out := &in.VolumeBackupIds, &out.VolumeBackupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupObservation.
func (in *VolumeGroupBackupObservation) DeepCopy() *VolumeGroupBackupObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupParameters) DeepCopyInto(out *VolumeGroupBackupParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupBackupSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupIDRef != nil {
		in, out := &in.VolumeGroupIDRef, &out.VolumeGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeGroupIDSelector != nil {
		in, out := &in.VolumeGroupIDSelector, &out.VolumeGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupParameters.
func (in *VolumeGroupBackupParameters) DeepCopy() *VolumeGroupBackupParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupSourceDetailsInitParameters) DeepCopyInto(out *VolumeGroupBackupSourceDetailsInitParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupSourceDetailsInitParameters.
func (in *VolumeGroupBackupSourceDetailsInitParameters) DeepCopy() *VolumeGroupBackupSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupSourceDetailsObservation) DeepCopyInto(out *VolumeGroupBackupSourceDetailsObservation) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupSourceDetailsObservation.
func (in *VolumeGroupBackupSourceDetailsObservation) DeepCopy() *VolumeGroupBackupSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupSourceDetailsParameters) DeepCopyInto(out *VolumeGroupBackupSourceDetailsParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupSourceDetailsParameters.
func (in *VolumeGroupBackupSourceDetailsParameters) DeepCopy() *VolumeGroupBackupSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupSpec) DeepCopyInto(out *VolumeGroupBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupSpec.
func (in *VolumeGroupBackupSpec) DeepCopy() *VolumeGroupBackupSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupStatus) DeepCopyInto(out *VolumeGroupBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupStatus.
func (in *VolumeGroupBackupStatus) DeepCopy() *VolumeGroupBackupStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupInitParameters) DeepCopyInto(out *VolumeGroupInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PreserveVolumeReplica != nil {
		in, out := &in.PreserveVolumeReplica, &out.PreserveVolumeReplica
		*out = new(bool)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicas != nil {
		in, out := &in.VolumeGroupReplicas, &out.VolumeGroupReplicas
		*out = make([]VolumeGroupReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicasDeletion != nil {
		in, out := &in.VolumeGroupReplicasDeletion, &out.VolumeGroupReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupInitParameters.
func (in *VolumeGroupInitParameters) DeepCopy() *VolumeGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupList) DeepCopyInto(out *VolumeGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupList.
func (in *VolumeGroupList) DeepCopy() *VolumeGroupList {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupObservation) DeepCopyInto(out *VolumeGroupObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsHydrated != nil {
		in, out := &in.IsHydrated, &out.IsHydrated
		*out = new(bool)
		**out = **in
	}
	if in.PreserveVolumeReplica != nil {
		in, out := &in.PreserveVolumeReplica, &out.PreserveVolumeReplica
		*out = new(bool)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicas != nil {
		in, out := &in.VolumeGroupReplicas, &out.VolumeGroupReplicas
		*out = make([]VolumeGroupReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicasDeletion != nil {
		in, out := &in.VolumeGroupReplicasDeletion, &out.VolumeGroupReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupObservation.
func (in *VolumeGroupObservation) DeepCopy() *VolumeGroupObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupParameters) DeepCopyInto(out *VolumeGroupParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PreserveVolumeReplica != nil {
		in, out := &in.PreserveVolumeReplica, &out.PreserveVolumeReplica
		*out = new(bool)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicas != nil {
		in, out := &in.VolumeGroupReplicas, &out.VolumeGroupReplicas
		*out = make([]VolumeGroupReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicasDeletion != nil {
		in, out := &in.VolumeGroupReplicasDeletion, &out.VolumeGroupReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupParameters.
func (in *VolumeGroupParameters) DeepCopy() *VolumeGroupParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupReplicasInitParameters) DeepCopyInto(out *VolumeGroupReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupReplicasInitParameters.
func (in *VolumeGroupReplicasInitParameters) DeepCopy() *VolumeGroupReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupReplicasObservation) DeepCopyInto(out *VolumeGroupReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicaID != nil {
		in, out := &in.VolumeGroupReplicaID, &out.VolumeGroupReplicaID
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupReplicasObservation.
func (in *VolumeGroupReplicasObservation) DeepCopy() *VolumeGroupReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupReplicasParameters) DeepCopyInto(out *VolumeGroupReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.XrrKMSKeyID != nil {
		in, out := &in.XrrKMSKeyID, &out.XrrKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupReplicasParameters.
func (in *VolumeGroupReplicasParameters) DeepCopy() *VolumeGroupReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupSourceDetailsInitParameters) DeepCopyInto(out *VolumeGroupSourceDetailsInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicaID != nil {
		in, out := &in.VolumeGroupReplicaID, &out.VolumeGroupReplicaID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeIdsRefs != nil {
		in, out := &in.VolumeIdsRefs, &out.VolumeIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeIdsSelector != nil {
		in, out := &in.VolumeIdsSelector, &out.VolumeIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupSourceDetailsInitParameters.
func (in *VolumeGroupSourceDetailsInitParameters) DeepCopy() *VolumeGroupSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupSourceDetailsObservation) DeepCopyInto(out *VolumeGroupSourceDetailsObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicaID != nil {
		in, out := &in.VolumeGroupReplicaID, &out.VolumeGroupReplicaID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupSourceDetailsObservation.
func (in *VolumeGroupSourceDetailsObservation) DeepCopy() *VolumeGroupSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupSourceDetailsParameters) DeepCopyInto(out *VolumeGroupSourceDetailsParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicaID != nil {
		in, out := &in.VolumeGroupReplicaID, &out.VolumeGroupReplicaID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeIdsRefs != nil {
		in, out := &in.VolumeIdsRefs, &out.VolumeIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeIdsSelector != nil {
		in, out := &in.VolumeIdsSelector, &out.VolumeIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupSourceDetailsParameters.
func (in *VolumeGroupSourceDetailsParameters) DeepCopy() *VolumeGroupSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupSpec) DeepCopyInto(out *VolumeGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupSpec.
func (in *VolumeGroupSpec) DeepCopy() *VolumeGroupSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupStatus) DeepCopyInto(out *VolumeGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupStatus.
func (in *VolumeGroupStatus) DeepCopy() *VolumeGroupStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeInitParameters) DeepCopyInto(out *VolumeInitParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]VolumeAutotunePoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlockVolumeReplicasDeletion != nil {
		in, out := &in.BlockVolumeReplicasDeletion, &out.BlockVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReservationsEnabled != nil {
		in, out := &in.IsReservationsEnabled, &out.IsReservationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeInitParameters.
func (in *VolumeInitParameters) DeepCopy() *VolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeList) DeepCopyInto(out *VolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeList.
func (in *VolumeList) DeepCopy() *VolumeList {
	if in == nil {
		return nil
	}
	out := new(VolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeObservation) DeepCopyInto(out *VolumeObservation) {
	*out = *in
	if in.AutoTunedVpusPerGb != nil {
		in, out := &in.AutoTunedVpusPerGb, &out.AutoTunedVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]VolumeAutotunePoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlockVolumeReplicasDeletion != nil {
		in, out := &in.BlockVolumeReplicasDeletion, &out.BlockVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHydrated != nil {
		in, out := &in.IsHydrated, &out.IsHydrated
		*out = new(bool)
		**out = **in
	}
	if in.IsReservationsEnabled != nil {
		in, out := &in.IsReservationsEnabled, &out.IsReservationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeObservation.
func (in *VolumeObservation) DeepCopy() *VolumeObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeParameters) DeepCopyInto(out *VolumeParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]VolumeAutotunePoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlockVolumeReplicasDeletion != nil {
		in, out := &in.BlockVolumeReplicasDeletion, &out.BlockVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentIDRef != nil {
		in, out := &in.CompartmentIDRef, &out.CompartmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CompartmentIDSelector != nil {
		in, out := &in.CompartmentIDSelector, &out.CompartmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReservationsEnabled != nil {
		in, out := &in.IsReservationsEnabled, &out.IsReservationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.XrcKMSKeyID != nil {
		in, out := &in.XrcKMSKeyID, &out.XrcKMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeParameters.
func (in *VolumeParameters) DeepCopy() *VolumeParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSourceDetailsInitParameters) DeepCopyInto(out *VolumeSourceDetailsInitParameters) {
	*out = *in
	if in.ChangeBlockSizeInBytes != nil {
		in, out := &in.ChangeBlockSizeInBytes, &out.ChangeBlockSizeInBytes
		*out = new(string)
		**out = **in
	}
	if in.FirstBackupID != nil {
		in, out := &in.FirstBackupID, &out.FirstBackupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecondBackupID != nil {
		in, out := &in.SecondBackupID, &out.SecondBackupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSourceDetailsInitParameters.
func (in *VolumeSourceDetailsInitParameters) DeepCopy() *VolumeSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSourceDetailsObservation) DeepCopyInto(out *VolumeSourceDetailsObservation) {
	*out = *in
	if in.ChangeBlockSizeInBytes != nil {
		in, out := &in.ChangeBlockSizeInBytes, &out.ChangeBlockSizeInBytes
		*out = new(string)
		**out = **in
	}
	if in.FirstBackupID != nil {
		in, out := &in.FirstBackupID, &out.FirstBackupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecondBackupID != nil {
		in, out := &in.SecondBackupID, &out.SecondBackupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSourceDetailsObservation.
func (in *VolumeSourceDetailsObservation) DeepCopy() *VolumeSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSourceDetailsParameters) DeepCopyInto(out *VolumeSourceDetailsParameters) {
	*out = *in
	if in.ChangeBlockSizeInBytes != nil {
		in, out := &in.ChangeBlockSizeInBytes, &out.ChangeBlockSizeInBytes
		*out = new(string)
		**out = **in
	}
	if in.FirstBackupID != nil {
		in, out := &in.FirstBackupID, &out.FirstBackupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecondBackupID != nil {
		in, out := &in.SecondBackupID, &out.SecondBackupID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSourceDetailsParameters.
func (in *VolumeSourceDetailsParameters) DeepCopy() *VolumeSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSpec) DeepCopyInto(out *VolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSpec.
func (in *VolumeSpec) DeepCopy() *VolumeSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeStatus) DeepCopyInto(out *VolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeStatus.
func (in *VolumeStatus) DeepCopy() *VolumeStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeStatus)
	in.DeepCopyInto(out)
	return out
}
