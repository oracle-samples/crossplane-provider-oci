/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BootVolumeBackupInitParameters struct {

	// The OCID of the boot volume that needs to be backed up. Cannot be defined if source_details is defined.
	BootVolumeID *string `json:"bootVolumeId,omitempty" tf:"boot_volume_id,omitempty"`

	// (Updatable) The OCID of the compartment that contains the boot volume backup.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// Details of the volume backup source in the cloud. Cannot be defined if boot_volume_id is defined.
	SourceDetails []BootVolumeBackupSourceDetailsInitParameters `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// The type of backup to create. If omitted, defaults to incremental. Supported values are 'FULL' or 'INCREMENTAL'.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type BootVolumeBackupObservation struct {

	// The OCID of the boot volume that needs to be backed up. Cannot be defined if source_details is defined.
	BootVolumeID *string `json:"bootVolumeId,omitempty" tf:"boot_volume_id,omitempty"`

	// (Updatable) The OCID of the compartment that contains the boot volume backup.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The date and time the volume backup will expire and be automatically deleted. Format defined by RFC3339. This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime *string `json:"expirationTime,omitempty" tf:"expiration_time,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// The OCID of the boot volume backup.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The image OCID used to create the boot volume the backup is taken from.
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// The size of the boot volume, in GBs.
	SizeInGbs *string `json:"sizeInGbs,omitempty" tf:"size_in_gbs,omitempty"`

	// The OCID of the source boot volume backup.
	SourceBootVolumeBackupID *string `json:"sourceBootVolumeBackupId,omitempty" tf:"source_boot_volume_backup_id,omitempty"`

	// Details of the volume backup source in the cloud. Cannot be defined if boot_volume_id is defined.
	SourceDetails []BootVolumeBackupSourceDetailsObservation `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// Specifies whether the backup was created manually, or via scheduled backup policy.
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// The current state of a boot volume backup.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: {"foo-namespace.bar-key": "value"}
	// +mapType=granular
	SystemTags map[string]*string `json:"systemTags,omitempty" tf:"system_tags,omitempty"`

	// The date and time the boot volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by RFC3339.
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The date and time the request to create the boot volume backup was received. Format defined by RFC3339.
	TimeRequestReceived *string `json:"timeRequestReceived,omitempty" tf:"time_request_received,omitempty"`

	// The type of backup to create. If omitted, defaults to incremental. Supported values are 'FULL' or 'INCREMENTAL'.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the boot volume and whether the backup is full or incremental.
	UniqueSizeInGbs *string `json:"uniqueSizeInGbs,omitempty" tf:"unique_size_in_gbs,omitempty"`
}

type BootVolumeBackupParameters struct {

	// The OCID of the boot volume that needs to be backed up. Cannot be defined if source_details is defined.
	// +kubebuilder:validation:Optional
	BootVolumeID *string `json:"bootVolumeId,omitempty" tf:"boot_volume_id,omitempty"`

	// (Updatable) The OCID of the compartment that contains the boot volume backup.
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	// +kubebuilder:validation:Optional
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// Details of the volume backup source in the cloud. Cannot be defined if boot_volume_id is defined.
	// +kubebuilder:validation:Optional
	SourceDetails []BootVolumeBackupSourceDetailsParameters `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// The type of backup to create. If omitted, defaults to incremental. Supported values are 'FULL' or 'INCREMENTAL'.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type BootVolumeBackupSourceDetailsInitParameters struct {

	// The OCID of the source volume backup.
	BootVolumeBackupID *string `json:"bootVolumeBackupId,omitempty" tf:"boot_volume_backup_id,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// The region of the volume backup source.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type BootVolumeBackupSourceDetailsObservation struct {

	// The OCID of the source volume backup.
	BootVolumeBackupID *string `json:"bootVolumeBackupId,omitempty" tf:"boot_volume_backup_id,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// The region of the volume backup source.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type BootVolumeBackupSourceDetailsParameters struct {

	// The OCID of the source volume backup.
	// +kubebuilder:validation:Optional
	BootVolumeBackupID *string `json:"bootVolumeBackupId" tf:"boot_volume_backup_id,omitempty"`

	// (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see Overview of Vault service and Using Keys.
	// +kubebuilder:validation:Optional
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// The region of the volume backup source.
	// +kubebuilder:validation:Optional
	Region *string `json:"region" tf:"region,omitempty"`
}

// BootVolumeBackupSpec defines the desired state of BootVolumeBackup
type BootVolumeBackupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BootVolumeBackupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BootVolumeBackupInitParameters `json:"initProvider,omitempty"`
}

// BootVolumeBackupStatus defines the observed state of BootVolumeBackup.
type BootVolumeBackupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BootVolumeBackupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BootVolumeBackup is the Schema for the BootVolumeBackups API. Provides the Boot Volume Backup resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type BootVolumeBackup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BootVolumeBackupSpec   `json:"spec"`
	Status            BootVolumeBackupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BootVolumeBackupList contains a list of BootVolumeBackups
type BootVolumeBackupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BootVolumeBackup `json:"items"`
}

// Repository type metadata.
var (
	BootVolumeBackup_Kind             = "BootVolumeBackup"
	BootVolumeBackup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BootVolumeBackup_Kind}.String()
	BootVolumeBackup_KindAPIVersion   = BootVolumeBackup_Kind + "." + CRDGroupVersion.String()
	BootVolumeBackup_GroupVersionKind = CRDGroupVersion.WithKind(BootVolumeBackup_Kind)
)

func init() {
	SchemeBuilder.Register(&BootVolumeBackup{}, &BootVolumeBackupList{})
}
