/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VolumeGroupBackupInitParameters struct {

	// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// Details of the volume group backup source in the cloud.
	SourceDetails []VolumeGroupBackupSourceDetailsInitParameters `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// The type of backup to create. If omitted, defaults to incremental.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The OCID of the volume group that needs to be backed up.
	// +crossplane:generate:reference:type=VolumeGroup
	VolumeGroupID *string `json:"volumeGroupId,omitempty" tf:"volume_group_id,omitempty"`

	// Reference to a VolumeGroup to populate volumeGroupId.
	// +kubebuilder:validation:Optional
	VolumeGroupIDRef *v1.Reference `json:"volumeGroupIdRef,omitempty" tf:"-"`

	// Selector for a VolumeGroup to populate volumeGroupId.
	// +kubebuilder:validation:Optional
	VolumeGroupIDSelector *v1.Selector `json:"volumeGroupIdSelector,omitempty" tf:"-"`
}

type VolumeGroupBackupObservation struct {

	// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The date and time the volume group backup will expire and be automatically deleted. Format defined by RFC3339. This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime *string `json:"expirationTime,omitempty" tf:"expiration_time,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// The OCID of the volume group backup.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The aggregate size of the volume group backup, in GBs.
	SizeInGbs *string `json:"sizeInGbs,omitempty" tf:"size_in_gbs,omitempty"`

	// The aggregate size of the volume group backup, in MBs.
	SizeInMbs *string `json:"sizeInMbs,omitempty" tf:"size_in_mbs,omitempty"`

	// Details of the volume group backup source in the cloud.
	SourceDetails []VolumeGroupBackupSourceDetailsObservation `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// Specifies whether the volume group backup was created manually, or via scheduled backup policy.
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// The OCID of the source volume group backup.
	SourceVolumeGroupBackupID *string `json:"sourceVolumeGroupBackupId,omitempty" tf:"source_volume_group_backup_id,omitempty"`

	// The current state of a volume group backup.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by RFC3339.
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The date and time the request to create the volume group backup was received. Format defined by RFC3339.
	TimeRequestReceived *string `json:"timeRequestReceived,omitempty" tf:"time_request_received,omitempty"`

	// The type of backup to create. If omitted, defaults to incremental.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The aggregate size used by the volume group backup, in GBs.  It is typically smaller than size_in_gbs, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
	UniqueSizeInGbs *string `json:"uniqueSizeInGbs,omitempty" tf:"unique_size_in_gbs,omitempty"`

	// The aggregate size used by the volume group backup, in MBs.  It is typically smaller than size_in_mbs, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
	UniqueSizeInMbs *string `json:"uniqueSizeInMbs,omitempty" tf:"unique_size_in_mbs,omitempty"`

	// OCIDs for the volume backups in this volume group backup.
	VolumeBackupIds []*string `json:"volumeBackupIds,omitempty" tf:"volume_backup_ids,omitempty"`

	// The OCID of the volume group that needs to be backed up.
	VolumeGroupID *string `json:"volumeGroupId,omitempty" tf:"volume_group_id,omitempty"`
}

type VolumeGroupBackupParameters struct {

	// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// Details of the volume group backup source in the cloud.
	// +kubebuilder:validation:Optional
	SourceDetails []VolumeGroupBackupSourceDetailsParameters `json:"sourceDetails,omitempty" tf:"source_details,omitempty"`

	// The type of backup to create. If omitted, defaults to incremental.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The OCID of the volume group that needs to be backed up.
	// +crossplane:generate:reference:type=VolumeGroup
	// +kubebuilder:validation:Optional
	VolumeGroupID *string `json:"volumeGroupId,omitempty" tf:"volume_group_id,omitempty"`

	// Reference to a VolumeGroup to populate volumeGroupId.
	// +kubebuilder:validation:Optional
	VolumeGroupIDRef *v1.Reference `json:"volumeGroupIdRef,omitempty" tf:"-"`

	// Selector for a VolumeGroup to populate volumeGroupId.
	// +kubebuilder:validation:Optional
	VolumeGroupIDSelector *v1.Selector `json:"volumeGroupIdSelector,omitempty" tf:"-"`
}

type VolumeGroupBackupSourceDetailsInitParameters struct {

	// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// The region of the volume backup source.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The OCID of the source volume group backup.
	VolumeGroupBackupID *string `json:"volumeGroupBackupId,omitempty" tf:"volume_group_backup_id,omitempty"`
}

type VolumeGroupBackupSourceDetailsObservation struct {

	// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// The region of the volume backup source.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The OCID of the source volume group backup.
	VolumeGroupBackupID *string `json:"volumeGroupBackupId,omitempty" tf:"volume_group_backup_id,omitempty"`
}

type VolumeGroupBackupSourceDetailsParameters struct {

	// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
	// +kubebuilder:validation:Optional
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// The region of the volume backup source.
	// +kubebuilder:validation:Optional
	Region *string `json:"region" tf:"region,omitempty"`

	// The OCID of the source volume group backup.
	// +kubebuilder:validation:Optional
	VolumeGroupBackupID *string `json:"volumeGroupBackupId" tf:"volume_group_backup_id,omitempty"`
}

// VolumeGroupBackupSpec defines the desired state of VolumeGroupBackup
type VolumeGroupBackupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VolumeGroupBackupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VolumeGroupBackupInitParameters `json:"initProvider,omitempty"`
}

// VolumeGroupBackupStatus defines the observed state of VolumeGroupBackup.
type VolumeGroupBackupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VolumeGroupBackupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VolumeGroupBackup is the Schema for the VolumeGroupBackups API. Provides the Volume Group Backup resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type VolumeGroupBackup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VolumeGroupBackupSpec   `json:"spec"`
	Status            VolumeGroupBackupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VolumeGroupBackupList contains a list of VolumeGroupBackups
type VolumeGroupBackupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VolumeGroupBackup `json:"items"`
}

// Repository type metadata.
var (
	VolumeGroupBackup_Kind             = "VolumeGroupBackup"
	VolumeGroupBackup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VolumeGroupBackup_Kind}.String()
	VolumeGroupBackup_KindAPIVersion   = VolumeGroupBackup_Kind + "." + CRDGroupVersion.String()
	VolumeGroupBackup_GroupVersionKind = CRDGroupVersion.WithKind(VolumeGroupBackup_Kind)
)

func init() {
	SchemeBuilder.Register(&VolumeGroupBackup{}, &VolumeGroupBackupList{})
}
