/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NATConfigurationInitParameters struct {

	// (Updatable) To allocate private NAT IPs to the firewall. The attached network firewall policy must also have NAT rules to enable NAT on any traffic passing through the firewall. The value of this field can not be false to release the NAT IPs given that the attached network firewall policy does not contains any NAT rules. The value of this field should be set to true if the network firewall policy being applied contains NAT rules.
	MustEnablePrivateNAT *bool `json:"mustEnablePrivateNat,omitempty" tf:"must_enable_private_nat,omitempty"`
}

type NATConfigurationObservation struct {

	// (Updatable) To allocate private NAT IPs to the firewall. The attached network firewall policy must also have NAT rules to enable NAT on any traffic passing through the firewall. The value of this field can not be false to release the NAT IPs given that the attached network firewall policy does not contains any NAT rules. The value of this field should be set to true if the network firewall policy being applied contains NAT rules.
	MustEnablePrivateNAT *bool `json:"mustEnablePrivateNat,omitempty" tf:"must_enable_private_nat,omitempty"`

	// An array of NAT IP addresses that are associated with the Network Firewall. These IPs are reserved for NAT and shouldn't be used for any other purpose in the subnet.
	NATIPAddressList []*string `json:"natIpAddressList,omitempty" tf:"nat_ip_address_list,omitempty"`
}

type NATConfigurationParameters struct {

	// (Updatable) To allocate private NAT IPs to the firewall. The attached network firewall policy must also have NAT rules to enable NAT on any traffic passing through the firewall. The value of this field can not be false to release the NAT IPs given that the attached network firewall policy does not contains any NAT rules. The value of this field should be set to true if the network firewall policy being applied contains NAT rules.
	// +kubebuilder:validation:Optional
	MustEnablePrivateNAT *bool `json:"mustEnablePrivateNat" tf:"must_enable_private_nat,omitempty"`
}

type NetworkFirewallInitParameters struct {

	// Availability Domain where Network Firewall instance is created. To get a list of availability domains for a tenancy, use ListAvailabilityDomains operation. Example: kIdk:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// (Updatable) The OCID of the compartment containing the Network Firewall.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name for the Network Firewall. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// IPv4 address for the Network Firewall.
	Ipv4Address *string `json:"ipv4address,omitempty" tf:"ipv4address,omitempty"`

	// IPv6 address for the Network Firewall.
	Ipv6Address *string `json:"ipv6address,omitempty" tf:"ipv6address,omitempty"`

	// (Updatable) Nat Configuration request to use Nat feature on firewall.
	NATConfiguration []NATConfigurationInitParameters `json:"natConfiguration,omitempty" tf:"nat_configuration,omitempty"`

	// (Updatable) The OCID of the Network Firewall Policy.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networkfirewall/v1alpha1.NetworkFirewallPolicy
	NetworkFirewallPolicyID *string `json:"networkFirewallPolicyId,omitempty" tf:"network_firewall_policy_id,omitempty"`

	// Reference to a NetworkFirewallPolicy in networkfirewall to populate networkFirewallPolicyId.
	// +kubebuilder:validation:Optional
	NetworkFirewallPolicyIDRef *v1.Reference `json:"networkFirewallPolicyIdRef,omitempty" tf:"-"`

	// Selector for a NetworkFirewallPolicy in networkfirewall to populate networkFirewallPolicyId.
	// +kubebuilder:validation:Optional
	NetworkFirewallPolicyIDSelector *v1.Selector `json:"networkFirewallPolicyIdSelector,omitempty" tf:"-"`

	// (Updatable) An array of network security groups OCID associated with the Network Firewall.
	// +listType=set
	NetworkSecurityGroupIds []*string `json:"networkSecurityGroupIds,omitempty" tf:"network_security_group_ids,omitempty"`

	// The OCID of the subnet associated with the Network Firewall.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.Subnet
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in networking to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in networking to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`
}

type NetworkFirewallObservation struct {

	// Availability Domain where Network Firewall instance is created. To get a list of availability domains for a tenancy, use ListAvailabilityDomains operation. Example: kIdk:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// (Updatable) The OCID of the compartment containing the Network Firewall.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name for the Network Firewall. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// The OCID of the Network Firewall resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// IPv4 address for the Network Firewall.
	Ipv4Address *string `json:"ipv4address,omitempty" tf:"ipv4address,omitempty"`

	// IPv6 address for the Network Firewall.
	Ipv6Address *string `json:"ipv6address,omitempty" tf:"ipv6address,omitempty"`

	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in 'FAILED' state.
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details,omitempty"`

	// (Updatable) Nat Configuration request to use Nat feature on firewall.
	NATConfiguration []NATConfigurationObservation `json:"natConfiguration,omitempty" tf:"nat_configuration,omitempty"`

	// (Updatable) The OCID of the Network Firewall Policy.
	NetworkFirewallPolicyID *string `json:"networkFirewallPolicyId,omitempty" tf:"network_firewall_policy_id,omitempty"`

	// (Updatable) An array of network security groups OCID associated with the Network Firewall.
	// +listType=set
	NetworkSecurityGroupIds []*string `json:"networkSecurityGroupIds,omitempty" tf:"network_security_group_ids,omitempty"`

	// The current state of the Network Firewall.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The OCID of the subnet associated with the Network Firewall.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: {"orcl-cloud.free-tier-retained": "true"}
	// +mapType=granular
	SystemTags map[string]*string `json:"systemTags,omitempty" tf:"system_tags,omitempty"`

	// The time at which the Network Firewall was created in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The time at which the Network Firewall was updated in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated,omitempty"`
}

type NetworkFirewallParameters struct {

	// Availability Domain where Network Firewall instance is created. To get a list of availability domains for a tenancy, use ListAvailabilityDomains operation. Example: kIdk:PHX-AD-1
	// +kubebuilder:validation:Optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// (Updatable) The OCID of the compartment containing the Network Firewall.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name for the Network Firewall. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// IPv4 address for the Network Firewall.
	// +kubebuilder:validation:Optional
	Ipv4Address *string `json:"ipv4address,omitempty" tf:"ipv4address,omitempty"`

	// IPv6 address for the Network Firewall.
	// +kubebuilder:validation:Optional
	Ipv6Address *string `json:"ipv6address,omitempty" tf:"ipv6address,omitempty"`

	// (Updatable) Nat Configuration request to use Nat feature on firewall.
	// +kubebuilder:validation:Optional
	NATConfiguration []NATConfigurationParameters `json:"natConfiguration,omitempty" tf:"nat_configuration,omitempty"`

	// (Updatable) The OCID of the Network Firewall Policy.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networkfirewall/v1alpha1.NetworkFirewallPolicy
	// +kubebuilder:validation:Optional
	NetworkFirewallPolicyID *string `json:"networkFirewallPolicyId,omitempty" tf:"network_firewall_policy_id,omitempty"`

	// Reference to a NetworkFirewallPolicy in networkfirewall to populate networkFirewallPolicyId.
	// +kubebuilder:validation:Optional
	NetworkFirewallPolicyIDRef *v1.Reference `json:"networkFirewallPolicyIdRef,omitempty" tf:"-"`

	// Selector for a NetworkFirewallPolicy in networkfirewall to populate networkFirewallPolicyId.
	// +kubebuilder:validation:Optional
	NetworkFirewallPolicyIDSelector *v1.Selector `json:"networkFirewallPolicyIdSelector,omitempty" tf:"-"`

	// (Updatable) An array of network security groups OCID associated with the Network Firewall.
	// +kubebuilder:validation:Optional
	// +listType=set
	NetworkSecurityGroupIds []*string `json:"networkSecurityGroupIds,omitempty" tf:"network_security_group_ids,omitempty"`

	// The OCID of the subnet associated with the Network Firewall.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/networking/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in networking to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in networking to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`
}

// NetworkFirewallSpec defines the desired state of NetworkFirewall
type NetworkFirewallSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NetworkFirewallParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NetworkFirewallInitParameters `json:"initProvider,omitempty"`
}

// NetworkFirewallStatus defines the observed state of NetworkFirewall.
type NetworkFirewallStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NetworkFirewallObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NetworkFirewall is the Schema for the NetworkFirewalls API. Provides the Network Firewall resource in Oracle Cloud Infrastructure Network Firewall service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type NetworkFirewall struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkFirewallSpec   `json:"spec"`
	Status            NetworkFirewallStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkFirewallList contains a list of NetworkFirewalls
type NetworkFirewallList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkFirewall `json:"items"`
}

// Repository type metadata.
var (
	NetworkFirewall_Kind             = "NetworkFirewall"
	NetworkFirewall_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NetworkFirewall_Kind}.String()
	NetworkFirewall_KindAPIVersion   = NetworkFirewall_Kind + "." + CRDGroupVersion.String()
	NetworkFirewall_GroupVersionKind = CRDGroupVersion.WithKind(NetworkFirewall_Kind)
)

func init() {
	SchemeBuilder.Register(&NetworkFirewall{}, &NetworkFirewallList{})
}
