apiVersion: loadbalancer.oci.upbound.io/v1alpha1
kind: Listener
metadata:
  annotations:
    meta.upbound.io/example-id: loadbalancer/v1alpha1/listener
  labels:
    testing.upbound.io/example-name: test_listener
  name: test-listener
spec:
  forProvider:
    connectionConfiguration:
    - backendTcpProxyProtocolOptions: ${var.listener_connection_configuration_backend_tcp_proxy_protocol_options}
      backendTcpProxyProtocolVersion: ${var.listener_connection_configuration_backend_tcp_proxy_protocol_version}
      idleTimeoutInSeconds: ${var.listener_connection_configuration_idle_timeout_in_seconds}
    defaultBackendSetNameSelector:
      matchLabels:
        testing.upbound.io/example-name: test_backend_set
    hostnameNamesRefs:
    - name: test_hostname
    loadBalancerIdSelector:
      matchLabels:
        testing.upbound.io/example-name: test_load_balancer
    name: ${var.listener_name}
    pathRouteSetNameSelector:
      matchLabels:
        testing.upbound.io/example-name: test_path_route_set
    port: ${var.listener_port}
    protocol: ${var.listener_protocol}
    routingPolicyNameSelector:
      matchLabels:
        testing.upbound.io/example-name: test_load_balancer_routing_policy
    ruleSetNamesRefs:
    - name: test_rule_set
    sslConfiguration:
    - certificateIds: ${var.listener_ssl_configuration_certificate_ids}
      certificateName: ${oci_load_balancer_certificate.test_certificate.name}
      cipherSuiteName: ${var.listener_ssl_configuration_cipher_suite_name}
      hasSessionResumption: ${var.listener_ssl_configuration_has_session_resumption}
      protocols: ${var.listener_ssl_configuration_protocols}
      serverOrderPreference: ${var.listener_ssl_configuration_server_order_preference}
      trustedCertificateAuthorityIds: ${var.listener_ssl_configuration_trusted_certificate_authority_ids}
      verifyDepth: ${var.listener_ssl_configuration_verify_depth}
      verifyPeerCertificate: ${var.listener_ssl_configuration_verify_peer_certificate}
